<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>irq_exit (16,334,583 samples, 0.45%)</title><rect x="471.9" y="341" width="5.3" height="15.0" fill="rgb(226,49,38)" rx="2" ry="2" />
<text  x="474.93" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (82,006,927 samples, 2.24%)</title><rect x="33.9" y="309" width="26.4" height="15.0" fill="rgb(214,7,6)" rx="2" ry="2" />
<text  x="36.90" y="319.5" >s..</text>
</g>
<g >
<title>iox::popo::ListenerImpl&lt;256ul&gt;::threadLoop (23,193,738 samples, 0.63%)</title><rect x="1169.5" y="469" width="7.4" height="15.0" fill="rgb(221,182,20)" rx="2" ry="2" />
<text  x="1172.46" y="479.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::searchId@plt (12,413,350 samples, 0.34%)</title><rect x="431.2" y="309" width="4.0" height="15.0" fill="rgb(244,87,45)" rx="2" ry="2" />
<text  x="434.24" y="319.5" ></text>
</g>
<g >
<title>do_notify_resume (21,088,997 samples, 0.58%)</title><rect x="909.1" y="277" width="6.8" height="15.0" fill="rgb(234,217,50)" rx="2" ry="2" />
<text  x="912.13" y="287.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (30,598,312 samples, 0.84%)</title><rect x="246.9" y="389" width="9.9" height="15.0" fill="rgb(226,123,5)" rx="2" ry="2" />
<text  x="249.90" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::forEach&lt;iox::cxx::vector&lt;unsigned short, 256ul&gt;, iox::popo::ListenerImpl&lt;256ul&gt;::threadLoop (1,701,644,919 samples, 46.47%)</title><rect x="81.3" y="469" width="548.4" height="15.0" fill="rgb(233,146,15)" rx="2" ry="2" />
<text  x="84.34" y="479.5" >iox::cxx::forEach&lt;iox::cxx::vector&lt;unsigned short, 256ul&gt;, iox::popo::Liste..</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::variant&lt;0ul, iox::posix::PosixCallResult&lt;int&gt; &gt;@plt (23,482,307 samples, 0.64%)</title><rect x="929.0" y="341" width="7.5" height="15.0" fill="rgb(234,146,48)" rx="2" ry="2" />
<text  x="931.97" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::mepoo::ChunkHeader const*, iox::popo::ChunkReceiveResult&gt;::expected (17,310,307 samples, 0.47%)</title><rect x="527.5" y="357" width="5.6" height="15.0" fill="rgb(242,214,46)" rx="2" ry="2" />
<text  x="530.48" y="367.5" ></text>
</g>
<g >
<title>iox::concurrent::LockFreeQueue&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul&gt;::pop (80,686,301 samples, 2.20%)</title><rect x="533.1" y="325" width="26.0" height="15.0" fill="rgb(253,70,27)" rx="2" ry="2" />
<text  x="536.05" y="335.5" >i..</text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (232,665,061 samples, 6.35%)</title><rect x="1067.5" y="437" width="75.0" height="15.0" fill="rgb(217,214,46)" rx="2" ry="2" />
<text  x="1070.53" y="447.5" >std::ato..</text>
</g>
<g >
<title>iox::popo::internal::Event_t::isInitialized@plt (19,983,350 samples, 0.55%)</title><rect x="619.4" y="437" width="6.4" height="15.0" fill="rgb(226,45,10)" rx="2" ry="2" />
<text  x="622.38" y="447.5" ></text>
</g>
<g >
<title>iox::runtime::IpcMessage::IpcMessage (82,006,927 samples, 2.24%)</title><rect x="33.9" y="341" width="26.4" height="15.0" fill="rgb(226,106,4)" rx="2" ry="2" />
<text  x="36.90" y="351.5" >i..</text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;int&gt;::PosixCallVerificator@plt (39,556,083 samples, 1.08%)</title><rect x="936.5" y="357" width="12.8" height="15.0" fill="rgb(222,217,29)" rx="2" ry="2" />
<text  x="939.54" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;bool  (13,767,711 samples, 0.38%)</title><rect x="659.1" y="453" width="4.4" height="15.0" fill="rgb(221,94,26)" rx="2" ry="2" />
<text  x="662.09" y="463.5" ></text>
</g>
<g >
<title>el0_svc (304,099,907 samples, 8.30%)</title><rect x="811.1" y="261" width="98.0" height="15.0" fill="rgb(234,168,1)" rx="2" ry="2" />
<text  x="814.14" y="271.5" >el0_svc</text>
</g>
<g >
<title>alloc_skb_with_frags (7,431,745 samples, 0.20%)</title><rect x="31.5" y="101" width="2.4" height="15.0" fill="rgb(207,210,38)" rx="2" ry="2" />
<text  x="34.50" y="111.5" ></text>
</g>
<g >
<title>do_el0_svc (45,016,382 samples, 1.23%)</title><rect x="19.4" y="197" width="14.5" height="15.0" fill="rgb(245,218,42)" rx="2" ry="2" />
<text  x="22.39" y="207.5" ></text>
</g>
<g >
<title>iox::concurrent::IndexQueue&lt;256ul, unsigned long&gt;::empty (34,324,624 samples, 0.94%)</title><rect x="265.6" y="325" width="11.0" height="15.0" fill="rgb(226,76,33)" rx="2" ry="2" />
<text  x="268.56" y="335.5" ></text>
</g>
<g >
<title>iox::concurrent::IndexQueue&lt;256ul, unsigned long&gt;::empty@plt (10,464,316 samples, 0.29%)</title><rect x="262.2" y="341" width="3.4" height="15.0" fill="rgb(241,208,20)" rx="2" ry="2" />
<text  x="265.19" y="351.5" ></text>
</g>
<g >
<title>main (505,211 samples, 0.01%)</title><rect x="1176.9" y="581" width="0.2" height="15.0" fill="rgb(216,144,36)" rx="2" ry="2" />
<text  x="1179.93" y="591.5" ></text>
</g>
<g >
<title>iox::posix::UnixDomainSocket::timedSend (74,163,532 samples, 2.03%)</title><rect x="10.0" y="309" width="23.9" height="15.0" fill="rgb(210,69,4)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >i..</text>
</g>
<g >
<title>work_pending (500,409 samples, 0.01%)</title><rect x="1176.9" y="533" width="0.2" height="15.0" fill="rgb(242,99,21)" rx="2" ry="2" />
<text  x="1179.94" y="543.5" ></text>
</g>
<g >
<title>iox::cxx::VariantQueue&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul&gt;::pop (133,723,131 samples, 3.65%)</title><rect x="320.4" y="341" width="43.1" height="15.0" fill="rgb(251,123,16)" rx="2" ry="2" />
<text  x="323.37" y="351.5" >iox:..</text>
</g>
<g >
<title>iox::cxx::MethodCallback&lt;void&gt;::operator (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="469" width="12.9" height="15.0" fill="rgb(210,62,52)" rx="2" ry="2" />
<text  x="1180.11" y="479.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkManagement&gt;::operator iox::mepoo::ChunkManagement* (31,911,475 samples, 0.87%)</title><rect x="564.3" y="325" width="10.3" height="15.0" fill="rgb(210,89,11)" rx="2" ry="2" />
<text  x="567.33" y="335.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::computeRawPtr@plt (13,638,473 samples, 0.37%)</title><rect x="564.3" y="309" width="4.4" height="15.0" fill="rgb(248,58,8)" rx="2" ry="2" />
<text  x="567.33" y="319.5" ></text>
</g>
<g >
<title>unix_dgram_sendmsg (7,431,745 samples, 0.20%)</title><rect x="31.5" y="133" width="2.4" height="15.0" fill="rgb(222,157,14)" rx="2" ry="2" />
<text  x="34.50" y="143.5" ></text>
</g>
<g >
<title>__schedule (88,767,244 samples, 2.42%)</title><rect x="850.2" y="133" width="28.6" height="15.0" fill="rgb(219,89,43)" rx="2" ry="2" />
<text  x="853.15" y="143.5" >__..</text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::expected (40,505,253 samples, 1.11%)</title><rect x="915.9" y="341" width="13.1" height="15.0" fill="rgb(248,34,33)" rx="2" ry="2" />
<text  x="918.92" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::mepoo::SharedChunk&gt;::emplace&lt;iox::mepoo::SharedChunk&amp;&gt; (40,519,042 samples, 1.11%)</title><rect x="371.3" y="325" width="13.1" height="15.0" fill="rgb(251,219,50)" rx="2" ry="2" />
<text  x="374.30" y="335.5" ></text>
</g>
<g >
<title>__arm64_sys_futex_time32 (46,941,961 samples, 1.28%)</title><rect x="822.8" y="165" width="15.1" height="15.0" fill="rgb(206,78,44)" rx="2" ry="2" />
<text  x="825.78" y="175.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;unsigned short, 256ul&gt;::end@plt (77,839,831 samples, 2.13%)</title><rect x="634.0" y="469" width="25.1" height="15.0" fill="rgb(230,4,8)" rx="2" ry="2" />
<text  x="637.01" y="479.5" >i..</text>
</g>
<g >
<title>iox::concurrent::CyclicIndex&lt;256ul, unsigned long&gt;::operator+@plt (78,058,224 samples, 2.13%)</title><rect x="320.4" y="309" width="25.1" height="15.0" fill="rgb(236,113,22)" rx="2" ry="2" />
<text  x="323.37" y="319.5" >i..</text>
</g>
<g >
<title>iox::runtime::IpcRuntimeInterface::sendKeepalive (159,117,351 samples, 4.35%)</title><rect x="10.0" y="357" width="51.3" height="15.0" fill="rgb(215,42,10)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >iox::..</text>
</g>
<g >
<title>iox::posix::Semaphore::wait (722,773,677 samples, 19.74%)</title><rect x="738.9" y="373" width="232.9" height="15.0" fill="rgb(234,169,51)" rx="2" ry="2" />
<text  x="741.91" y="383.5" >iox::posix::Semaphore::wait</text>
</g>
<g >
<title>iox::popo::SubscriberPortUser::tryGetChunk (556,863,765 samples, 15.21%)</title><rect x="283.6" y="389" width="179.4" height="15.0" fill="rgb(210,213,24)" rx="2" ry="2" />
<text  x="286.55" y="399.5" >iox::popo::SubscriberPo..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="533" width="12.9" height="15.0" fill="rgb(223,51,19)" rx="2" ry="2" />
<text  x="1180.11" y="543.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::SemaphoreError&gt;::has_error@plt (23,679,065 samples, 0.65%)</title><rect x="709.1" y="389" width="7.7" height="15.0" fill="rgb(253,200,10)" rx="2" ry="2" />
<text  x="712.14" y="399.5" ></text>
</g>
<g >
<title>el0_sync_handler (304,099,907 samples, 8.30%)</title><rect x="811.1" y="277" width="98.0" height="15.0" fill="rgb(254,42,43)" rx="2" ry="2" />
<text  x="814.14" y="287.5" >el0_sync_ha..</text>
</g>
<g >
<title>iox::concurrent::Buffer&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul, unsigned long&gt;::operator[]@plt (14,501,157 samples, 0.40%)</title><rect x="533.1" y="309" width="4.6" height="15.0" fill="rgb(220,39,54)" rx="2" ry="2" />
<text  x="536.05" y="319.5" ></text>
</g>
<g >
<title>operator new@plt (11,949,435 samples, 0.33%)</title><rect x="925.1" y="309" width="3.9" height="15.0" fill="rgb(216,133,25)" rx="2" ry="2" />
<text  x="928.12" y="319.5" ></text>
</g>
<g >
<title>do_futex (267,970,914 samples, 7.32%)</title><rect x="822.8" y="197" width="86.3" height="15.0" fill="rgb(249,201,41)" rx="2" ry="2" />
<text  x="825.78" y="207.5" >do_futex</text>
</g>
<g >
<title>iox::runtime::PoshRuntimeImpl::sendKeepAliveAndHandleShutdownPreparation (159,117,351 samples, 4.35%)</title><rect x="10.0" y="373" width="51.3" height="15.0" fill="rgb(250,52,31)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >iox::..</text>
</g>
<g >
<title>schedule (126,776,940 samples, 3.46%)</title><rect x="837.9" y="149" width="40.9" height="15.0" fill="rgb(208,46,54)" rx="2" ry="2" />
<text  x="840.90" y="159.5" >sch..</text>
</g>
<g >
<title>iox::cxx::expected&lt;bool, iox::posix::SemaphoreError&gt;::~expected (18,835,351 samples, 0.51%)</title><rect x="1010.0" y="421" width="6.1" height="15.0" fill="rgb(215,5,34)" rx="2" ry="2" />
<text  x="1013.00" y="431.5" ></text>
</g>
<g >
<title>iox::popo::ConditionListener::wait (1,550,938,548 samples, 42.35%)</title><rect x="659.1" y="469" width="499.8" height="15.0" fill="rgb(220,54,43)" rx="2" ry="2" />
<text  x="662.09" y="479.5" >iox::popo::ConditionListener::wait</text>
</g>
<g >
<title>__pthread_mutex_lock (21,116,883 samples, 0.58%)</title><rect x="97.9" y="373" width="6.8" height="15.0" fill="rgb(220,220,4)" rx="2" ry="2" />
<text  x="100.93" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::MethodCallback&lt;void, unsigned long&gt;::MethodCallback (19,989,882 samples, 0.55%)</title><rect x="117.7" y="421" width="6.5" height="15.0" fill="rgb(210,54,44)" rx="2" ry="2" />
<text  x="120.72" y="431.5" ></text>
</g>
<g >
<title>sleep (505,211 samples, 0.01%)</title><rect x="1176.9" y="565" width="0.2" height="15.0" fill="rgb(230,159,5)" rx="2" ry="2" />
<text  x="1179.93" y="575.5" ></text>
</g>
<g >
<title>iox::popo::ListenerImpl&lt;256ul&gt;::threadLoop (3,415,090,265 samples, 93.26%)</title><rect x="76.5" y="485" width="1100.4" height="15.0" fill="rgb(239,199,36)" rx="2" ry="2" />
<text  x="79.48" y="495.5" >iox::popo::ListenerImpl&lt;256ul&gt;::threadLoop</text>
</g>
<g >
<title>iox::cxx::vector&lt;unsigned short, 256ul&gt;::vector (17,530,391 samples, 0.48%)</title><rect x="677.1" y="453" width="5.7" height="15.0" fill="rgb(239,229,11)" rx="2" ry="2" />
<text  x="680.12" y="463.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (338,555,357 samples, 9.25%)</title><rect x="806.8" y="309" width="109.1" height="15.0" fill="rgb(243,127,20)" rx="2" ry="2" />
<text  x="809.83" y="319.5" >[libpthread-2..</text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::getOffset@plt (16,310,558 samples, 0.45%)</title><rect x="426.0" y="293" width="5.2" height="15.0" fill="rgb(232,145,52)" rx="2" ry="2" />
<text  x="428.99" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::mepoo::ChunkHeader const*, iox::popo::ChunkReceiveResult&gt;::call_element_destructor@plt (7,482,193 samples, 0.20%)</title><rect x="297.8" y="325" width="2.4" height="15.0" fill="rgb(227,48,20)" rx="2" ry="2" />
<text  x="300.78" y="335.5" ></text>
</g>
<g >
<title>iox::popo::ChunkQueuePopper&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;::empty (16,858,183 samples, 0.46%)</title><rect x="256.8" y="389" width="5.4" height="15.0" fill="rgb(252,23,38)" rx="2" ry="2" />
<text  x="259.76" y="399.5" ></text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::send (74,163,532 samples, 2.03%)</title><rect x="10.0" y="341" width="23.9" height="15.0" fill="rgb(252,185,0)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >i..</text>
</g>
<g >
<title>iox::popo::ConditionListener::resetSemaphore (178,549,997 samples, 4.88%)</title><rect x="1010.0" y="437" width="57.5" height="15.0" fill="rgb(235,213,24)" rx="2" ry="2" />
<text  x="1013.00" y="447.5" >iox::p..</text>
</g>
<g >
<title>std::operator&amp;@plt (21,114,336 samples, 0.58%)</title><rect x="456.2" y="357" width="6.8" height="15.0" fill="rgb(229,172,49)" rx="2" ry="2" />
<text  x="459.19" y="367.5" ></text>
</g>
<g >
<title>iox::concurrent::Buffer&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul, unsigned long&gt;::toPtr@plt (21,453,452 samples, 0.59%)</title><rect x="537.7" y="293" width="6.9" height="15.0" fill="rgb(209,131,30)" rx="2" ry="2" />
<text  x="540.73" y="303.5" ></text>
</g>
<g >
<title>iox::popo::ListenerImpl&lt;256ul&gt;::threadLoop (1,658,191,008 samples, 45.28%)</title><rect x="91.5" y="453" width="534.3" height="15.0" fill="rgb(216,196,20)" rx="2" ry="2" />
<text  x="94.49" y="463.5" >iox::popo::ListenerImpl&lt;256ul&gt;::threadLoop</text>
</g>
<g >
<title>__sys_sendto (45,016,382 samples, 1.23%)</title><rect x="19.4" y="149" width="14.5" height="15.0" fill="rgb(214,130,31)" rx="2" ry="2" />
<text  x="22.39" y="159.5" ></text>
</g>
<g >
<title>iox::popo::UsedChunkList&lt;257u&gt;::insert (93,733,680 samples, 2.56%)</title><rect x="426.0" y="357" width="30.2" height="15.0" fill="rgb(238,12,38)" rx="2" ry="2" />
<text  x="428.99" y="367.5" >io..</text>
</g>
<g >
<title>iox::popo::ConditionListener::wait (761,388,370 samples, 20.79%)</title><rect x="726.5" y="389" width="245.3" height="15.0" fill="rgb(211,210,40)" rx="2" ry="2" />
<text  x="729.47" y="399.5" >iox::popo::ConditionListener::wait</text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkHeader&gt;::operator iox::mepoo::ChunkHeader* (17,114,065 samples, 0.47%)</title><rect x="388.8" y="325" width="5.6" height="15.0" fill="rgb(244,139,37)" rx="2" ry="2" />
<text  x="391.84" y="335.5" ></text>
</g>
<g >
<title>iox::popo::ConditionListener::reset (60,572,212 samples, 1.65%)</title><rect x="990.5" y="437" width="19.5" height="15.0" fill="rgb(237,117,6)" rx="2" ry="2" />
<text  x="993.48" y="447.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::computeRawPtr (18,273,002 samples, 0.50%)</title><rect x="568.7" y="293" width="5.9" height="15.0" fill="rgb(206,171,17)" rx="2" ry="2" />
<text  x="571.72" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::internal::ReturnSuccess&lt;void&gt;::call&lt;iox::cxx::function_ref&lt;void  (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="453" width="12.9" height="15.0" fill="rgb(206,28,21)" rx="2" ry="2" />
<text  x="1180.11" y="463.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;int&gt;::evaluate (63,987,560 samples, 1.75%)</title><rect x="915.9" y="357" width="20.6" height="15.0" fill="rgb(230,35,2)" rx="2" ry="2" />
<text  x="918.92" y="367.5" ></text>
</g>
<g >
<title>get_futex_key (62,411,301 samples, 1.70%)</title><rect x="878.8" y="149" width="20.1" height="15.0" fill="rgb(231,216,30)" rx="2" ry="2" />
<text  x="881.76" y="159.5" ></text>
</g>
<g >
<title>__errno_location (31,586,158 samples, 0.86%)</title><rect x="764.0" y="357" width="10.1" height="15.0" fill="rgb(222,201,43)" rx="2" ry="2" />
<text  x="766.96" y="367.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (180,262,853 samples, 4.92%)</title><rect x="10.0" y="517" width="58.1" height="15.0" fill="rgb(217,0,30)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >std::_..</text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;int&gt;::failureReturnValue&lt;int&gt; (51,616,669 samples, 1.41%)</title><rect x="949.3" y="357" width="16.6" height="15.0" fill="rgb(217,131,46)" rx="2" ry="2" />
<text  x="952.29" y="367.5" ></text>
</g>
<g >
<title>el0_sync (45,016,382 samples, 1.23%)</title><rect x="19.4" y="245" width="14.5" height="15.0" fill="rgb(250,75,11)" rx="2" ry="2" />
<text  x="22.39" y="255.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (45,016,382 samples, 1.23%)</title><rect x="19.4" y="165" width="14.5" height="15.0" fill="rgb(220,30,5)" rx="2" ry="2" />
<text  x="22.39" y="175.5" ></text>
</g>
<g >
<title>iox::mepoo::ChunkHeader::userPayload (18,824,166 samples, 0.51%)</title><rect x="219.6" y="405" width="6.1" height="15.0" fill="rgb(253,229,6)" rx="2" ry="2" />
<text  x="222.64" y="415.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortUser::tryGetChunk@plt (11,378,627 samples, 0.31%)</title><rect x="225.7" y="405" width="3.7" height="15.0" fill="rgb(208,152,9)" rx="2" ry="2" />
<text  x="228.70" y="415.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointerData::isLogicalNullptr@plt (14,895,408 samples, 0.41%)</title><rect x="411.2" y="341" width="4.8" height="15.0" fill="rgb(234,74,18)" rx="2" ry="2" />
<text  x="414.18" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::emplace_at_index&lt;0ul, iox::posix::PosixCallResult&lt;int&gt; &gt;@plt (12,482,587 samples, 0.34%)</title><rect x="915.9" y="325" width="4.0" height="15.0" fill="rgb(238,180,6)" rx="2" ry="2" />
<text  x="918.92" y="335.5" ></text>
</g>
<g >
<title>iox::popo::internal::TranslateAndCallTypelessCallback&lt;iox::popo::Subscriber&lt;AVMCamIntrinsic, iox::mepoo::NoUserHeader&gt;, std::function&lt;void  (14,840,973 samples, 0.41%)</title><rect x="148.7" y="421" width="4.8" height="15.0" fill="rgb(236,20,1)" rx="2" ry="2" />
<text  x="151.73" y="431.5" ></text>
</g>
<g >
<title>fpsimd_load_state (500,409 samples, 0.01%)</title><rect x="1176.9" y="485" width="0.2" height="15.0" fill="rgb(206,123,0)" rx="2" ry="2" />
<text  x="1179.94" y="495.5" ></text>
</g>
<g >
<title>el0_irq_naked (16,334,583 samples, 0.45%)</title><rect x="471.9" y="389" width="5.3" height="15.0" fill="rgb(216,135,19)" rx="2" ry="2" />
<text  x="474.93" y="399.5" ></text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::popo::internal::Event_t, std::recursive_mutex&gt;::Proxy::operator (16,141,459 samples, 0.44%)</title><rect x="81.3" y="453" width="5.2" height="15.0" fill="rgb(228,63,12)" rx="2" ry="2" />
<text  x="84.34" y="463.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;int&gt;::evaluate@plt (15,064,911 samples, 0.41%)</title><rect x="734.1" y="373" width="4.8" height="15.0" fill="rgb(235,87,43)" rx="2" ry="2" />
<text  x="737.06" y="383.5" ></text>
</g>
<g >
<title>MvFuncCallbackRecvData (29,260,177 samples, 0.80%)</title><rect x="168.2" y="405" width="9.4" height="15.0" fill="rgb(243,137,40)" rx="2" ry="2" />
<text  x="171.16" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::internal::methodCallbackCaller&lt;void, iox::runtime::PoshRuntimeImpl&gt; (159,117,351 samples, 4.35%)</title><rect x="10.0" y="389" width="51.3" height="15.0" fill="rgb(249,128,22)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >iox::..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="421" width="12.9" height="15.0" fill="rgb(247,229,38)" rx="2" ry="2" />
<text  x="1180.11" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,394,021 samples, 0.56%)</title><rect x="578.4" y="405" width="6.6" height="15.0" fill="rgb(243,169,30)" rx="2" ry="2" />
<text  x="581.39" y="415.5" ></text>
</g>
<g >
<title>__kmalloc_track_caller (7,431,745 samples, 0.20%)</title><rect x="31.5" y="53" width="2.4" height="15.0" fill="rgb(228,174,12)" rx="2" ry="2" />
<text  x="34.50" y="63.5" ></text>
</g>
<g >
<title>iox::cxx::MethodCallback&lt;void, unsigned long&gt;::operator==@plt (31,654,059 samples, 0.86%)</title><rect x="138.5" y="405" width="10.2" height="15.0" fill="rgb(224,119,3)" rx="2" ry="2" />
<text  x="141.53" y="415.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (19,983,350 samples, 0.55%)</title><rect x="91.5" y="357" width="6.4" height="15.0" fill="rgb(213,196,18)" rx="2" ry="2" />
<text  x="94.49" y="367.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (3,441,152,536 samples, 93.97%)</title><rect x="68.1" y="549" width="1108.8" height="15.0" fill="rgb(220,68,34)" rx="2" ry="2" />
<text  x="71.09" y="559.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>iox::cxx::internal::call_at_index&lt;0ul, iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::destructor@plt (29,147,150 samples, 0.80%)</title><rect x="10.0" y="261" width="9.4" height="15.0" fill="rgb(216,2,49)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::mepoo::ShmSafeUnmanagedChunk&gt;::optional (29,573,899 samples, 0.81%)</title><rect x="544.6" y="309" width="9.6" height="15.0" fill="rgb(239,203,25)" rx="2" ry="2" />
<text  x="547.64" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::mepoo::SharedChunk&amp;&gt;@plt (14,684,065 samples, 0.40%)</title><rect x="421.3" y="341" width="4.7" height="15.0" fill="rgb(237,88,29)" rx="2" ry="2" />
<text  x="424.25" y="351.5" ></text>
</g>
<g >
<title>el0_svc (45,016,382 samples, 1.23%)</title><rect x="19.4" y="213" width="14.5" height="15.0" fill="rgb(244,196,30)" rx="2" ry="2" />
<text  x="22.39" y="223.5" ></text>
</g>
<g >
<title>work_pending (21,088,997 samples, 0.58%)</title><rect x="909.1" y="293" width="6.8" height="15.0" fill="rgb(251,23,24)" rx="2" ry="2" />
<text  x="912.13" y="303.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (180,262,853 samples, 4.92%)</title><rect x="10.0" y="549" width="58.1" height="15.0" fill="rgb(254,43,11)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >std::t..</text>
</g>
<g >
<title>iox_sendto (45,016,382 samples, 1.23%)</title><rect x="19.4" y="277" width="14.5" height="15.0" fill="rgb(224,45,13)" rx="2" ry="2" />
<text  x="22.39" y="287.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkHeader&gt;::operator iox::mepoo::ChunkHeader*@plt (19,825,066 samples, 0.54%)</title><rect x="400.1" y="341" width="6.4" height="15.0" fill="rgb(254,170,42)" rx="2" ry="2" />
<text  x="403.14" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~expected (16,147,995 samples, 0.44%)</title><rect x="1020.7" y="421" width="5.2" height="15.0" fill="rgb(249,168,29)" rx="2" ry="2" />
<text  x="1023.69" y="431.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (180,262,853 samples, 4.92%)</title><rect x="10.0" y="533" width="58.1" height="15.0" fill="rgb(238,209,23)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >std::t..</text>
</g>
<g >
<title>_start (505,211 samples, 0.01%)</title><rect x="1176.9" y="613" width="0.2" height="15.0" fill="rgb(235,189,30)" rx="2" ry="2" />
<text  x="1179.93" y="623.5" ></text>
</g>
<g >
<title>motovis::transport::ShmReceiver&lt;_MV_CAN_CAR_INFO_256&gt;::notify (725,018,581 samples, 19.80%)</title><rect x="229.4" y="405" width="233.6" height="15.0" fill="rgb(206,190,34)" rx="2" ry="2" />
<text  x="232.37" y="415.5" >motovis::transport::ShmReceive..</text>
</g>
<g >
<title>iox::cxx::internal::Require@plt (57,930,050 samples, 1.58%)</title><rect x="971.8" y="405" width="18.7" height="15.0" fill="rgb(252,131,18)" rx="2" ry="2" />
<text  x="974.81" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::mepoo::ChunkHeader const*, iox::popo::ChunkReceiveResult&gt;::variant&lt;0ul, iox::mepoo::ChunkHeader const*&gt; (7,482,193 samples, 0.20%)</title><rect x="297.8" y="341" width="2.4" height="15.0" fill="rgb(233,203,4)" rx="2" ry="2" />
<text  x="300.78" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::~expected (29,147,150 samples, 0.80%)</title><rect x="10.0" y="293" width="9.4" height="15.0" fill="rgb(214,54,0)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;unsigned short, 256ul&gt;::begin@plt (13,494,513 samples, 0.37%)</title><rect x="629.7" y="469" width="4.3" height="15.0" fill="rgb(248,9,40)" rx="2" ry="2" />
<text  x="632.66" y="479.5" ></text>
</g>
<g >
<title>iox::mepoo::SharedChunk::SharedChunk (20,394,021 samples, 0.56%)</title><rect x="371.3" y="293" width="6.6" height="15.0" fill="rgb(235,123,14)" rx="2" ry="2" />
<text  x="374.30" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::internal::methodCallbackCaller&lt;void, iox::runtime::PoshRuntimeImpl&gt; (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="389" width="12.9" height="15.0" fill="rgb(209,40,48)" rx="2" ry="2" />
<text  x="1180.11" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (16,082,422 samples, 0.44%)</title><rect x="501.5" y="389" width="5.1" height="15.0" fill="rgb(248,124,17)" rx="2" ry="2" />
<text  x="504.47" y="399.5" ></text>
</g>
<g >
<title>iox::mepoo::SharedChunk::decrementReferenceCounter@plt (20,394,021 samples, 0.56%)</title><rect x="371.3" y="277" width="6.6" height="15.0" fill="rgb(253,62,1)" rx="2" ry="2" />
<text  x="374.30" y="287.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (126,776,940 samples, 3.46%)</title><rect x="837.9" y="165" width="40.9" height="15.0" fill="rgb(213,26,26)" rx="2" ry="2" />
<text  x="840.90" y="175.5" >fut..</text>
</g>
<g >
<title>iox::popo::ChunkQueuePopper&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;::getMembers (22,135,124 samples, 0.60%)</title><rect x="511.9" y="373" width="7.1" height="15.0" fill="rgb(253,5,29)" rx="2" ry="2" />
<text  x="514.86" y="383.5" ></text>
</g>
<g >
<title>iox::runtime::IpcRuntimeInterface::sendKeepalive (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="357" width="12.9" height="15.0" fill="rgb(244,212,27)" rx="2" ry="2" />
<text  x="1180.11" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::mepoo::ChunkHeader const*, iox::popo::ChunkReceiveResult&gt;::call_element_destructor (14,840,973 samples, 0.41%)</title><rect x="148.7" y="325" width="4.8" height="15.0" fill="rgb(241,227,36)" rx="2" ry="2" />
<text  x="151.73" y="335.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::computeRawPtr (17,952,054 samples, 0.49%)</title><rect x="394.4" y="293" width="5.7" height="15.0" fill="rgb(237,31,45)" rx="2" ry="2" />
<text  x="397.36" y="303.5" ></text>
</g>
<g >
<title>@plt (14,356,056 samples, 0.39%)</title><rect x="1016.1" y="405" width="4.6" height="15.0" fill="rgb(215,103,9)" rx="2" ry="2" />
<text  x="1019.07" y="415.5" ></text>
</g>
<g >
<title>el0_sync (304,099,907 samples, 8.30%)</title><rect x="811.1" y="293" width="98.0" height="15.0" fill="rgb(205,100,21)" rx="2" ry="2" />
<text  x="814.14" y="303.5" >el0_sync</text>
</g>
<g >
<title>std::forward&lt;unsigned short&amp;&gt; (16,891,658 samples, 0.46%)</title><rect x="1142.5" y="437" width="5.4" height="15.0" fill="rgb(211,214,43)" rx="2" ry="2" />
<text  x="1145.50" y="447.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="549" width="12.9" height="15.0" fill="rgb(225,180,5)" rx="2" ry="2" />
<text  x="1180.11" y="559.5" ></text>
</g>
<g >
<title>iox::runtime::PoshRuntimeImpl::sendKeepAliveAndHandleShutdownPreparation (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="373" width="12.9" height="15.0" fill="rgb(219,192,48)" rx="2" ry="2" />
<text  x="1180.11" y="383.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (7,431,745 samples, 0.20%)</title><rect x="31.5" y="117" width="2.4" height="15.0" fill="rgb(206,124,38)" rx="2" ry="2" />
<text  x="34.50" y="127.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::mepoo::ShmSafeUnmanagedChunk&gt;::construct_value&lt;iox::mepoo::ShmSafeUnmanagedChunk&gt;@plt (16,492,202 samples, 0.45%)</title><rect x="345.5" y="293" width="5.3" height="15.0" fill="rgb(242,13,7)" rx="2" ry="2" />
<text  x="348.52" y="303.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (19,983,350 samples, 0.55%)</title><rect x="91.5" y="373" width="6.4" height="15.0" fill="rgb(254,22,19)" rx="2" ry="2" />
<text  x="94.49" y="383.5" ></text>
</g>
<g >
<title>internal_get_user_pages_fast (62,411,301 samples, 1.70%)</title><rect x="878.8" y="117" width="20.1" height="15.0" fill="rgb(231,91,19)" rx="2" ry="2" />
<text  x="881.76" y="127.5" ></text>
</g>
<g >
<title>iox::cxx::internal::call_at_index&lt;0ul, bool, iox::posix::SemaphoreError&gt;::destructor (18,835,351 samples, 0.51%)</title><rect x="1010.0" y="389" width="6.1" height="15.0" fill="rgb(239,41,0)" rx="2" ry="2" />
<text  x="1013.00" y="399.5" ></text>
</g>
<g >
<title>do_el0_svc (304,099,907 samples, 8.30%)</title><rect x="811.1" y="245" width="98.0" height="15.0" fill="rgb(252,18,48)" rx="2" ry="2" />
<text  x="814.14" y="255.5" >do_el0_svc</text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::SemaphoreError&gt;::~expected@plt (30,108,428 samples, 0.82%)</title><rect x="716.8" y="389" width="9.7" height="15.0" fill="rgb(250,9,27)" rx="2" ry="2" />
<text  x="719.77" y="399.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkManagement&gt;::get (17,952,054 samples, 0.49%)</title><rect x="394.4" y="309" width="5.7" height="15.0" fill="rgb(253,4,20)" rx="2" ry="2" />
<text  x="397.36" y="319.5" ></text>
</g>
<g >
<title>iox::popo::ChunkReceiver&lt;iox::popo::ChunkReceiverData&lt;256u, iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt; &gt;::tryGet (158,013,456 samples, 4.31%)</title><rect x="527.5" y="373" width="50.9" height="15.0" fill="rgb(225,118,3)" rx="2" ry="2" />
<text  x="530.48" y="383.5" >iox::..</text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkManagement&gt;::operator iox::mepoo::ChunkManagement* (17,952,054 samples, 0.49%)</title><rect x="394.4" y="325" width="5.7" height="15.0" fill="rgb(222,53,34)" rx="2" ry="2" />
<text  x="397.36" y="335.5" ></text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::popo::internal::Event_t, std::recursive_mutex&gt;::Proxy::Proxy (60,925,299 samples, 1.66%)</title><rect x="91.5" y="421" width="19.6" height="15.0" fill="rgb(239,129,3)" rx="2" ry="2" />
<text  x="94.49" y="431.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (7,431,745 samples, 0.20%)</title><rect x="31.5" y="69" width="2.4" height="15.0" fill="rgb(235,141,3)" rx="2" ry="2" />
<text  x="34.50" y="79.5" ></text>
</g>
<g >
<title>iox::cxx::make_optional&lt;iox::mepoo::SharedChunk, iox::mepoo::SharedChunk&amp;&gt; (78,765,903 samples, 2.15%)</title><rect x="363.5" y="341" width="25.3" height="15.0" fill="rgb(238,143,0)" rx="2" ry="2" />
<text  x="366.46" y="351.5" >i..</text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::mepoo::ChunkHeader const*, iox::popo::ChunkReceiveResult&gt;::expected@plt (17,114,065 samples, 0.47%)</title><rect x="283.6" y="373" width="5.5" height="15.0" fill="rgb(226,21,12)" rx="2" ry="2" />
<text  x="286.55" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (180,262,853 samples, 4.92%)</title><rect x="10.0" y="501" width="58.1" height="15.0" fill="rgb(233,155,25)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >std::_..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (159,117,351 samples, 4.35%)</title><rect x="10.0" y="437" width="51.3" height="15.0" fill="rgb(219,219,8)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >iox::..</text>
</g>
<g >
<title>iox::popo::ChunkReceiver&lt;iox::popo::ChunkReceiverData&lt;256u, iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt; &gt;::tryGet (539,749,700 samples, 14.74%)</title><rect x="289.1" y="373" width="173.9" height="15.0" fill="rgb(224,216,52)" rx="2" ry="2" />
<text  x="292.07" y="383.5" >iox::popo::ChunkReceiv..</text>
</g>
<g >
<title>iox::popo::SubscriberPortUser::hasNewChunks (38,305,787 samples, 1.05%)</title><rect x="506.6" y="389" width="12.4" height="15.0" fill="rgb(208,123,51)" rx="2" ry="2" />
<text  x="509.65" y="399.5" ></text>
</g>
<g >
<title>motovis::transport::ShmReceiver&lt;AVMCamIntrinsic&gt;::notify (14,840,973 samples, 0.41%)</title><rect x="148.7" y="405" width="4.8" height="15.0" fill="rgb(238,165,36)" rx="2" ry="2" />
<text  x="151.73" y="415.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long, int, void const*, unsigned long, int, sockaddr const*, unsigned int&gt;::operator (45,016,382 samples, 1.23%)</title><rect x="19.4" y="293" width="14.5" height="15.0" fill="rgb(244,203,22)" rx="2" ry="2" />
<text  x="22.39" y="303.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, sem_t*&gt;::operator (402,000,725 samples, 10.98%)</title><rect x="786.4" y="357" width="129.5" height="15.0" fill="rgb(237,163,52)" rx="2" ry="2" />
<text  x="789.38" y="367.5" >iox::posix::Posi..</text>
</g>
<g >
<title>iox::popo::ChunkQueuePopper&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;::getMembers@plt (21,517,234 samples, 0.59%)</title><rect x="276.6" y="373" width="7.0" height="15.0" fill="rgb(241,79,6)" rx="2" ry="2" />
<text  x="279.62" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::mepoo::SharedChunk&gt;::construct_value&lt;iox::mepoo::SharedChunk&amp;&gt; (20,394,021 samples, 0.56%)</title><rect x="371.3" y="309" width="6.6" height="15.0" fill="rgb(206,193,39)" rx="2" ry="2" />
<text  x="374.30" y="319.5" ></text>
</g>
<g >
<title>iox::rp::PointerRepository&lt;unsigned long, void*, 10000ul&gt;::getBasePtr (18,273,002 samples, 0.50%)</title><rect x="568.7" y="245" width="5.9" height="15.0" fill="rgb(215,33,41)" rx="2" ry="2" />
<text  x="571.72" y="255.5" ></text>
</g>
<g >
<title>iox::popo::internal::Event_t::executeCallback (1,556,820,551 samples, 42.51%)</title><rect x="117.7" y="437" width="501.7" height="15.0" fill="rgb(222,9,43)" rx="2" ry="2" />
<text  x="120.72" y="447.5" >iox::popo::internal::Event_t::executeCallback</text>
</g>
<g >
<title>iox::cxx::make_optional&lt;iox::mepoo::SharedChunk, iox::mepoo::SharedChunk&amp;&gt;@plt (20,777,191 samples, 0.57%)</title><rect x="300.2" y="357" width="6.7" height="15.0" fill="rgb(226,30,22)" rx="2" ry="2" />
<text  x="303.19" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::mepoo::ChunkHeader const*, iox::popo::ChunkReceiveResult&gt;::variant&lt;0ul, iox::mepoo::ChunkHeader const*&gt; (17,310,307 samples, 0.47%)</title><rect x="527.5" y="341" width="5.6" height="15.0" fill="rgb(227,20,47)" rx="2" ry="2" />
<text  x="530.48" y="351.5" ></text>
</g>
<g >
<title>iox::mepoo::ShmSafeUnmanagedChunk::releaseToSharedChunk (31,911,475 samples, 0.87%)</title><rect x="564.3" y="341" width="10.3" height="15.0" fill="rgb(217,24,14)" rx="2" ry="2" />
<text  x="567.33" y="351.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::getBasePtr (18,273,002 samples, 0.50%)</title><rect x="568.7" y="261" width="5.9" height="15.0" fill="rgb(218,208,23)" rx="2" ry="2" />
<text  x="571.72" y="271.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkManagement&gt;::operator iox::mepoo::ChunkManagement*@plt (14,427,586 samples, 0.39%)</title><rect x="406.5" y="341" width="4.7" height="15.0" fill="rgb(245,127,21)" rx="2" ry="2" />
<text  x="409.53" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;bool  (815,175,863 samples, 22.26%)</title><rect x="709.1" y="405" width="262.7" height="15.0" fill="rgb(235,210,9)" rx="2" ry="2" />
<text  x="712.14" y="415.5" >iox::cxx::function_ref&lt;bool </text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::getPtr (17,952,054 samples, 0.49%)</title><rect x="394.4" y="277" width="5.7" height="15.0" fill="rgb(232,45,47)" rx="2" ry="2" />
<text  x="397.36" y="287.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="437" width="12.9" height="15.0" fill="rgb(228,107,43)" rx="2" ry="2" />
<text  x="1180.11" y="447.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (3,441,152,536 samples, 93.97%)</title><rect x="68.1" y="517" width="1108.8" height="15.0" fill="rgb(205,24,20)" rx="2" ry="2" />
<text  x="71.09" y="527.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>iox::mepoo::ShmSafeUnmanagedChunk::releaseToSharedChunk (17,952,054 samples, 0.49%)</title><rect x="394.4" y="341" width="5.7" height="15.0" fill="rgb(207,59,31)" rx="2" ry="2" />
<text  x="397.36" y="351.5" ></text>
</g>
<g >
<title>iox::popo::internal::Event_t::isInitialized (31,654,059 samples, 0.86%)</title><rect x="138.5" y="421" width="10.2" height="15.0" fill="rgb(210,36,50)" rx="2" ry="2" />
<text  x="141.53" y="431.5" ></text>
</g>
<g >
<title>do_notify_resume (500,409 samples, 0.01%)</title><rect x="1176.9" y="517" width="0.2" height="15.0" fill="rgb(229,145,6)" rx="2" ry="2" />
<text  x="1179.94" y="527.5" ></text>
</g>
<g >
<title>sendto (45,016,382 samples, 1.23%)</title><rect x="19.4" y="261" width="14.5" height="15.0" fill="rgb(213,192,46)" rx="2" ry="2" />
<text  x="22.39" y="271.5" ></text>
</g>
<g >
<title>xxxKeepAlive (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="629" width="12.9" height="15.0" fill="rgb(252,54,8)" rx="2" ry="2" />
<text  x="1180.11" y="639.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (3,441,152,536 samples, 93.97%)</title><rect x="68.1" y="501" width="1108.8" height="15.0" fill="rgb(231,208,49)" rx="2" ry="2" />
<text  x="71.09" y="511.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::mepoo::SharedChunk&gt;::~optional@plt (12,455,429 samples, 0.34%)</title><rect x="519.0" y="373" width="4.0" height="15.0" fill="rgb(226,47,9)" rx="2" ry="2" />
<text  x="521.99" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::mepoo::ChunkHeader const*, iox::popo::ChunkReceiveResult&gt;::expected (14,840,973 samples, 0.41%)</title><rect x="148.7" y="357" width="4.8" height="15.0" fill="rgb(222,134,40)" rx="2" ry="2" />
<text  x="151.73" y="367.5" ></text>
</g>
<g >
<title>gic_handle_irq (16,334,583 samples, 0.45%)</title><rect x="471.9" y="373" width="5.3" height="15.0" fill="rgb(238,55,48)" rx="2" ry="2" />
<text  x="474.93" y="383.5" ></text>
</g>
<g >
<title>iox::popo::ConditionListener::waitImpl (1,443,670,357 samples, 39.42%)</title><rect x="682.8" y="453" width="465.2" height="15.0" fill="rgb(250,222,37)" rx="2" ry="2" />
<text  x="685.77" y="463.5" >iox::popo::ConditionListener::waitImpl</text>
</g>
<g >
<title>iox::popo::ConditionListener::waitImpl@plt (32,913,805 samples, 0.90%)</title><rect x="1158.9" y="469" width="10.6" height="15.0" fill="rgb(236,226,23)" rx="2" ry="2" />
<text  x="1161.85" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (12,792,144 samples, 0.35%)</title><rect x="463.0" y="405" width="4.1" height="15.0" fill="rgb(223,115,48)" rx="2" ry="2" />
<text  x="465.99" y="415.5" ></text>
</g>
<g >
<title>iox::algorithm::doesContainValue&lt;int&gt;@plt (51,616,669 samples, 1.41%)</title><rect x="949.3" y="341" width="16.6" height="15.0" fill="rgb(223,139,18)" rx="2" ry="2" />
<text  x="952.29" y="351.5" ></text>
</g>
<g >
<title>MvFuncCallbackRecvData@plt (50,405,050 samples, 1.38%)</title><rect x="177.6" y="405" width="16.2" height="15.0" fill="rgb(248,186,42)" rx="2" ry="2" />
<text  x="180.59" y="415.5" ></text>
</g>
<g >
<title>iox::mepoo::SharedChunk::getChunkHeader (17,114,065 samples, 0.47%)</title><rect x="388.8" y="341" width="5.6" height="15.0" fill="rgb(224,99,32)" rx="2" ry="2" />
<text  x="391.84" y="351.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (358,150,505 samples, 9.78%)</title><rect x="800.5" y="325" width="115.4" height="15.0" fill="rgb(250,177,47)" rx="2" ry="2" />
<text  x="803.51" y="335.5" >[libpthread-2...</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="581" width="12.9" height="15.0" fill="rgb(248,137,6)" rx="2" ry="2" />
<text  x="1180.11" y="591.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;bool  (815,175,863 samples, 22.26%)</title><rect x="709.1" y="437" width="262.7" height="15.0" fill="rgb(244,222,14)" rx="2" ry="2" />
<text  x="712.14" y="447.5" >iox::cxx::function_ref&lt;bool </text>
</g>
<g >
<title>iox::concurrent::LockFreeQueue&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul&gt;::empty (34,324,624 samples, 0.94%)</title><rect x="265.6" y="341" width="11.0" height="15.0" fill="rgb(218,109,45)" rx="2" ry="2" />
<text  x="268.56" y="351.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortUser::tryGetChunk@plt (14,366,790 samples, 0.39%)</title><rect x="490.8" y="405" width="4.6" height="15.0" fill="rgb(225,94,30)" rx="2" ry="2" />
<text  x="493.77" y="415.5" ></text>
</g>
<g >
<title>iox::concurrent::LockFreeQueue&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul&gt;::pop (133,723,131 samples, 3.65%)</title><rect x="320.4" y="325" width="43.1" height="15.0" fill="rgb(214,11,6)" rx="2" ry="2" />
<text  x="323.37" y="335.5" >iox:..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (159,117,351 samples, 4.35%)</title><rect x="10.0" y="405" width="51.3" height="15.0" fill="rgb(237,27,22)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >iox::..</text>
</g>
<g >
<title>all (3,661,964,750 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(252,128,6)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::~variant (29,147,150 samples, 0.80%)</title><rect x="10.0" y="277" width="9.4" height="15.0" fill="rgb(222,145,34)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::IpcChannelError&gt;::call_element_destructor (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="309" width="12.9" height="15.0" fill="rgb(211,126,37)" rx="2" ry="2" />
<text  x="1180.11" y="319.5" ></text>
</g>
<g >
<title>iox::runtime::IpcMessage::addEntry&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (82,006,927 samples, 2.24%)</title><rect x="33.9" y="325" width="26.4" height="15.0" fill="rgb(218,65,22)" rx="2" ry="2" />
<text  x="36.90" y="335.5" >i..</text>
</g>
<g >
<title>iox::popo::SubscriberPortUser::tryGetChunk (184,345,013 samples, 5.03%)</title><rect x="519.0" y="389" width="59.4" height="15.0" fill="rgb(231,39,48)" rx="2" ry="2" />
<text  x="521.99" y="399.5" >iox::p..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (3,441,152,536 samples, 93.97%)</title><rect x="68.1" y="533" width="1108.8" height="15.0" fill="rgb(247,8,11)" rx="2" ry="2" />
<text  x="71.09" y="543.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>iox::concurrent::IndexQueue&lt;256ul, unsigned long&gt;::loadvalueAt (34,324,624 samples, 0.94%)</title><rect x="265.6" y="309" width="11.0" height="15.0" fill="rgb(231,157,18)" rx="2" ry="2" />
<text  x="268.56" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::convert::toString&lt;int&gt; (2,946,892 samples, 0.08%)</title><rect x="60.3" y="325" width="1.0" height="15.0" fill="rgb(242,172,3)" rx="2" ry="2" />
<text  x="63.32" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::VariantQueue&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul&gt;::empty (44,788,940 samples, 1.22%)</title><rect x="262.2" y="357" width="14.4" height="15.0" fill="rgb(244,49,23)" rx="2" ry="2" />
<text  x="265.19" y="367.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, sem_t*&gt;::PosixCallBuilder@plt (35,156,407 samples, 0.96%)</title><rect x="1049.1" y="405" width="11.3" height="15.0" fill="rgb(244,149,33)" rx="2" ry="2" />
<text  x="1052.12" y="415.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkHeader&gt;::get (16,370,350 samples, 0.45%)</title><rect x="559.1" y="309" width="5.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="562.05" y="319.5" ></text>
</g>
<g >
<title>futex_wait_setup (62,411,301 samples, 1.70%)</title><rect x="878.8" y="165" width="20.1" height="15.0" fill="rgb(245,43,18)" rx="2" ry="2" />
<text  x="881.76" y="175.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortUser::tryGetChunk (14,840,973 samples, 0.41%)</title><rect x="148.7" y="389" width="4.8" height="15.0" fill="rgb(252,33,39)" rx="2" ry="2" />
<text  x="151.73" y="399.5" ></text>
</g>
<g >
<title>iox::popo::internal::TranslateAndCallTypelessCallback&lt;iox::popo::Subscriber&lt;_MvSurviewImage, iox::mepoo::NoUserHeader&gt;, std::function&lt;void  (365,726,338 samples, 9.99%)</title><rect x="467.1" y="421" width="117.9" height="15.0" fill="rgb(215,12,0)" rx="2" ry="2" />
<text  x="470.12" y="431.5" >iox::popo::int..</text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::popo::internal::Event_t, std::recursive_mutex&gt;::operator (15,372,832 samples, 0.42%)</title><rect x="86.5" y="453" width="5.0" height="15.0" fill="rgb(218,135,5)" rx="2" ry="2" />
<text  x="89.54" y="463.5" ></text>
</g>
<g >
<title>KeepAlive (180,262,853 samples, 4.92%)</title><rect x="10.0" y="629" width="58.1" height="15.0" fill="rgb(245,9,16)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >KeepAl..</text>
</g>
<g >
<title>iox::cxx::vector&lt;unsigned short, 256ul&gt;::at (57,930,050 samples, 1.58%)</title><rect x="971.8" y="421" width="18.7" height="15.0" fill="rgb(237,145,48)" rx="2" ry="2" />
<text  x="974.81" y="431.5" ></text>
</g>
<g >
<title>__alloc_skb (7,431,745 samples, 0.20%)</title><rect x="31.5" y="85" width="2.4" height="15.0" fill="rgb(244,196,44)" rx="2" ry="2" />
<text  x="34.50" y="95.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::searchId@plt (11,735,023 samples, 0.32%)</title><rect x="574.6" y="309" width="3.8" height="15.0" fill="rgb(229,77,47)" rx="2" ry="2" />
<text  x="577.61" y="319.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (304,099,907 samples, 8.30%)</title><rect x="811.1" y="229" width="98.0" height="15.0" fill="rgb(234,132,24)" rx="2" ry="2" />
<text  x="814.14" y="239.5" >el0_svc_com..</text>
</g>
<g >
<title>iox::popo::ChunkQueuePopper&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;::empty (44,788,940 samples, 1.22%)</title><rect x="262.2" y="373" width="14.4" height="15.0" fill="rgb(251,122,36)" rx="2" ry="2" />
<text  x="265.19" y="383.5" ></text>
</g>
<g >
<title>rcu_core (16,334,583 samples, 0.45%)</title><rect x="471.9" y="309" width="5.3" height="15.0" fill="rgb(252,42,19)" rx="2" ry="2" />
<text  x="474.93" y="319.5" ></text>
</g>
<g >
<title>mv_calib (3,441,657,747 samples, 93.98%)</title><rect x="68.1" y="629" width="1109.0" height="15.0" fill="rgb(243,68,7)" rx="2" ry="2" />
<text  x="71.09" y="639.5" >mv_calib</text>
</g>
<g >
<title>[libc-2.30.so] (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="613" width="12.9" height="15.0" fill="rgb(228,180,46)" rx="2" ry="2" />
<text  x="1180.11" y="623.5" ></text>
</g>
<g >
<title>iox::posix::UnixDomainSocket::send (74,163,532 samples, 2.03%)</title><rect x="10.0" y="325" width="23.9" height="15.0" fill="rgb(252,112,7)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >i..</text>
</g>
<g >
<title>operator new (16,073,231 samples, 0.44%)</title><rect x="919.9" y="309" width="5.2" height="15.0" fill="rgb(247,186,33)" rx="2" ry="2" />
<text  x="922.94" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (16,334,583 samples, 0.45%)</title><rect x="471.9" y="325" width="5.3" height="15.0" fill="rgb(246,145,40)" rx="2" ry="2" />
<text  x="474.93" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::mepoo::ChunkHeader const*, iox::popo::ChunkReceiveResult&gt;::variant&lt;0ul, iox::mepoo::ChunkHeader const*&gt; (14,840,973 samples, 0.41%)</title><rect x="148.7" y="341" width="4.8" height="15.0" fill="rgb(242,169,16)" rx="2" ry="2" />
<text  x="151.73" y="351.5" ></text>
</g>
<g >
<title>std::recursive_mutex::lock (60,925,299 samples, 1.66%)</title><rect x="91.5" y="405" width="19.6" height="15.0" fill="rgb(235,32,49)" rx="2" ry="2" />
<text  x="94.49" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::mepoo::ChunkHeader const*, iox::popo::ChunkReceiveResult&gt;::expected (7,482,193 samples, 0.20%)</title><rect x="297.8" y="357" width="2.4" height="15.0" fill="rgb(213,78,17)" rx="2" ry="2" />
<text  x="300.78" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (63,058,982 samples, 1.72%)</title><rect x="199.3" y="405" width="20.3" height="15.0" fill="rgb(239,41,52)" rx="2" ry="2" />
<text  x="202.32" y="415.5" ></text>
</g>
<g >
<title>get_user_pages_fast (62,411,301 samples, 1.70%)</title><rect x="878.8" y="133" width="20.1" height="15.0" fill="rgb(240,4,5)" rx="2" ry="2" />
<text  x="881.76" y="143.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (180,262,853 samples, 4.92%)</title><rect x="10.0" y="565" width="58.1" height="15.0" fill="rgb(252,191,18)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >std::t..</text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::getPtr (18,273,002 samples, 0.50%)</title><rect x="568.7" y="277" width="5.9" height="15.0" fill="rgb(219,123,10)" rx="2" ry="2" />
<text  x="571.72" y="287.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;bool, iox::posix::SemaphoreError&gt;::variant&lt;0ul, bool&gt;@plt (36,017,891 samples, 0.98%)</title><rect x="1037.5" y="405" width="11.6" height="15.0" fill="rgb(223,146,16)" rx="2" ry="2" />
<text  x="1040.51" y="415.5" ></text>
</g>
<g >
<title>std::recursive_mutex::lock@plt (20,461,808 samples, 0.56%)</title><rect x="111.1" y="421" width="6.6" height="15.0" fill="rgb(208,16,16)" rx="2" ry="2" />
<text  x="114.13" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;iox::mepoo::ShmSafeUnmanagedChunk&amp;&gt;@plt (15,157,793 samples, 0.41%)</title><rect x="554.2" y="309" width="4.9" height="15.0" fill="rgb(216,186,46)" rx="2" ry="2" />
<text  x="557.17" y="319.5" ></text>
</g>
<g >
<title>__errno_location@plt (21,055,069 samples, 0.57%)</title><rect x="774.1" y="357" width="6.8" height="15.0" fill="rgb(235,193,52)" rx="2" ry="2" />
<text  x="777.14" y="367.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="597" width="12.9" height="15.0" fill="rgb(229,208,52)" rx="2" ry="2" />
<text  x="1180.11" y="607.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;bool, iox::posix::SemaphoreError&gt;::~variant (18,835,351 samples, 0.51%)</title><rect x="1010.0" y="405" width="6.1" height="15.0" fill="rgb(243,135,4)" rx="2" ry="2" />
<text  x="1013.00" y="415.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkManagement&gt;::RelativePointer (28,723,908 samples, 0.78%)</title><rect x="426.0" y="325" width="9.2" height="15.0" fill="rgb(211,54,46)" rx="2" ry="2" />
<text  x="428.99" y="335.5" ></text>
</g>
<g >
<title>std::ostream::sentry::~sentry@plt (2,946,892 samples, 0.08%)</title><rect x="60.3" y="309" width="1.0" height="15.0" fill="rgb(224,160,15)" rx="2" ry="2" />
<text  x="63.32" y="319.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (17,035,875 samples, 0.47%)</title><rect x="193.8" y="405" width="5.5" height="15.0" fill="rgb(254,202,42)" rx="2" ry="2" />
<text  x="196.83" y="415.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (3,441,152,536 samples, 93.97%)</title><rect x="68.1" y="613" width="1108.8" height="15.0" fill="rgb(254,212,4)" rx="2" ry="2" />
<text  x="71.09" y="623.5" >[libc-2.30.so]</text>
</g>
<g >
<title>std::forward&lt;bool&gt; (21,993,406 samples, 0.60%)</title><rect x="1060.4" y="405" width="7.1" height="15.0" fill="rgb(246,58,22)" rx="2" ry="2" />
<text  x="1063.45" y="415.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="517" width="12.9" height="15.0" fill="rgb(205,89,24)" rx="2" ry="2" />
<text  x="1180.11" y="527.5" ></text>
</g>
<g >
<title>iox::popo::ConditionListener::wait@plt (26,062,271 samples, 0.71%)</title><rect x="68.1" y="485" width="8.4" height="15.0" fill="rgb(209,97,38)" rx="2" ry="2" />
<text  x="71.09" y="495.5" ></text>
</g>
<g >
<title>iox::popo::ChunkQueuePopper&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;::tryPop (128,968,126 samples, 3.52%)</title><rect x="533.1" y="357" width="41.5" height="15.0" fill="rgb(218,40,13)" rx="2" ry="2" />
<text  x="536.05" y="367.5" >iox..</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::mepoo::ChunkHeader const*, iox::popo::ChunkReceiveResult&gt;::call_element_destructor@plt (17,310,307 samples, 0.47%)</title><rect x="527.5" y="325" width="5.6" height="15.0" fill="rgb(238,219,33)" rx="2" ry="2" />
<text  x="530.48" y="335.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortUser::hasNewChunks (66,306,174 samples, 1.81%)</title><rect x="262.2" y="389" width="21.4" height="15.0" fill="rgb(253,63,1)" rx="2" ry="2" />
<text  x="265.19" y="399.5" >i..</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~variant@plt (16,945,252 samples, 0.46%)</title><rect x="780.9" y="357" width="5.5" height="15.0" fill="rgb(238,144,38)" rx="2" ry="2" />
<text  x="783.92" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (180,262,853 samples, 4.92%)</title><rect x="10.0" y="581" width="58.1" height="15.0" fill="rgb(220,130,7)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >[libst..</text>
</g>
<g >
<title>iox_sem_wait (358,150,505 samples, 9.78%)</title><rect x="800.5" y="341" width="115.4" height="15.0" fill="rgb(209,93,36)" rx="2" ry="2" />
<text  x="803.51" y="351.5" >iox_sem_wait</text>
</g>
<g >
<title>iox::cxx::MethodCallback&lt;void, unsigned long&gt;::operator!=@plt (44,591,144 samples, 1.22%)</title><rect x="124.2" y="421" width="14.3" height="15.0" fill="rgb(236,198,25)" rx="2" ry="2" />
<text  x="127.16" y="431.5" ></text>
</g>
<g >
<title>iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="485" width="12.9" height="15.0" fill="rgb(226,62,43)" rx="2" ry="2" />
<text  x="1180.11" y="495.5" ></text>
</g>
<g >
<title>iox::popo::ChunkQueuePopper&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;::tryPop (13,876,128 samples, 0.38%)</title><rect x="523.0" y="373" width="4.5" height="15.0" fill="rgb(233,103,12)" rx="2" ry="2" />
<text  x="526.00" y="383.5" ></text>
</g>
<g >
<title>percpu_ref_put_many.constprop.0 (7,431,745 samples, 0.20%)</title><rect x="31.5" y="37" width="2.4" height="15.0" fill="rgb(210,23,18)" rx="2" ry="2" />
<text  x="34.50" y="47.5" ></text>
</g>
<g >
<title>iox::concurrent::LockFreeQueue&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul&gt;::readBufferAt (16,492,202 samples, 0.45%)</title><rect x="345.5" y="309" width="5.3" height="15.0" fill="rgb(232,213,20)" rx="2" ry="2" />
<text  x="348.52" y="319.5" ></text>
</g>
<g >
<title>iox::popo::UsedChunkList&lt;257u&gt;::insert (11,735,023 samples, 0.32%)</title><rect x="574.6" y="357" width="3.8" height="15.0" fill="rgb(235,164,35)" rx="2" ry="2" />
<text  x="577.61" y="367.5" ></text>
</g>
<g >
<title>iox::popo::ChunkReceiver&lt;iox::popo::ChunkReceiverData&lt;256u, iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt; &gt;::tryGet (14,840,973 samples, 0.41%)</title><rect x="148.7" y="373" width="4.8" height="15.0" fill="rgb(231,211,53)" rx="2" ry="2" />
<text  x="151.73" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::IpcChannelError&gt;::~expected (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="325" width="12.9" height="15.0" fill="rgb(241,157,17)" rx="2" ry="2" />
<text  x="1180.11" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="405" width="12.9" height="15.0" fill="rgb(233,162,23)" rx="2" ry="2" />
<text  x="1180.11" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;unsigned short, 256ul&gt;::emplace_back&lt;unsigned short&amp;&gt;@plt (42,164,953 samples, 1.15%)</title><rect x="663.5" y="453" width="13.6" height="15.0" fill="rgb(233,152,24)" rx="2" ry="2" />
<text  x="666.53" y="463.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkManagement&gt;::get (18,273,002 samples, 0.50%)</title><rect x="568.7" y="309" width="5.9" height="15.0" fill="rgb(250,193,29)" rx="2" ry="2" />
<text  x="571.72" y="319.5" ></text>
</g>
<g >
<title>iox::popo::internal::Event_t::executeCallback (11,939,620 samples, 0.33%)</title><rect x="625.8" y="453" width="3.9" height="15.0" fill="rgb(249,146,29)" rx="2" ry="2" />
<text  x="628.81" y="463.5" ></text>
</g>
<g >
<title>iox::popo::ChunkQueuePopper&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;::empty (16,170,663 samples, 0.44%)</title><rect x="506.6" y="373" width="5.3" height="15.0" fill="rgb(221,221,3)" rx="2" ry="2" />
<text  x="509.65" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;bool, iox::posix::SemaphoreError&gt;::~variant (21,541,734 samples, 0.59%)</title><rect x="1025.9" y="421" width="6.9" height="15.0" fill="rgb(224,220,18)" rx="2" ry="2" />
<text  x="1028.90" y="431.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointerData::RelativePointerData@plt (47,484,877 samples, 1.30%)</title><rect x="440.9" y="341" width="15.3" height="15.0" fill="rgb(240,120,23)" rx="2" ry="2" />
<text  x="443.89" y="351.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::BaseRelativePointer (16,310,558 samples, 0.45%)</title><rect x="426.0" y="309" width="5.2" height="15.0" fill="rgb(238,204,41)" rx="2" ry="2" />
<text  x="428.99" y="319.5" ></text>
</g>
<g >
<title>iox::concurrent::LockFreeQueue&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul&gt;::readBufferAt (21,453,452 samples, 0.59%)</title><rect x="537.7" y="309" width="6.9" height="15.0" fill="rgb(223,168,32)" rx="2" ry="2" />
<text  x="540.73" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~expected@plt (23,549,782 samples, 0.64%)</title><rect x="726.5" y="373" width="7.6" height="15.0" fill="rgb(235,117,22)" rx="2" ry="2" />
<text  x="729.47" y="383.5" ></text>
</g>
<g >
<title>std::operator&amp;@plt (60,572,212 samples, 1.65%)</title><rect x="990.5" y="421" width="19.5" height="15.0" fill="rgb(250,100,20)" rx="2" ry="2" />
<text  x="993.48" y="431.5" ></text>
</g>
<g >
<title>MvFuncCallbackRecvData@plt (31,280,057 samples, 0.85%)</title><rect x="467.1" y="405" width="10.1" height="15.0" fill="rgb(208,3,45)" rx="2" ry="2" />
<text  x="470.12" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::mepoo::SharedChunk&gt;::construct_value&lt;iox::mepoo::SharedChunk&amp;&gt;@plt (24,342,032 samples, 0.66%)</title><rect x="363.5" y="325" width="7.8" height="15.0" fill="rgb(239,97,46)" rx="2" ry="2" />
<text  x="366.46" y="335.5" ></text>
</g>
<g >
<title>__libc_start_main (505,211 samples, 0.01%)</title><rect x="1176.9" y="597" width="0.2" height="15.0" fill="rgb(220,187,19)" rx="2" ry="2" />
<text  x="1179.93" y="607.5" ></text>
</g>
<g >
<title>iox::mepoo::ShmSafeUnmanagedChunk::ShmSafeUnmanagedChunk (28,723,908 samples, 0.78%)</title><rect x="426.0" y="341" width="9.2" height="15.0" fill="rgb(227,66,52)" rx="2" ry="2" />
<text  x="428.99" y="351.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (3,441,152,536 samples, 93.97%)</title><rect x="68.1" y="565" width="1108.8" height="15.0" fill="rgb(207,156,4)" rx="2" ry="2" />
<text  x="71.09" y="575.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::variant&lt;0ul, iox::posix::PosixCallResult&lt;int&gt; &gt; (28,022,666 samples, 0.77%)</title><rect x="919.9" y="325" width="9.1" height="15.0" fill="rgb(225,90,2)" rx="2" ry="2" />
<text  x="922.94" y="335.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::getRepository@plt (17,952,054 samples, 0.49%)</title><rect x="394.4" y="261" width="5.7" height="15.0" fill="rgb(224,186,7)" rx="2" ry="2" />
<text  x="397.36" y="271.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkHeader&gt;::get (17,114,065 samples, 0.47%)</title><rect x="388.8" y="309" width="5.6" height="15.0" fill="rgb(219,171,19)" rx="2" ry="2" />
<text  x="391.84" y="319.5" ></text>
</g>
<g >
<title>iox::mepoo::ChunkHeader::chunkHeaderVersion@plt (11,842,664 samples, 0.32%)</title><rect x="312.7" y="357" width="3.9" height="15.0" fill="rgb(242,25,42)" rx="2" ry="2" />
<text  x="315.75" y="367.5" ></text>
</g>
<g >
<title>std::atomic&lt;iox::concurrent::CyclicIndex&lt;256ul, unsigned long&gt; &gt;::load (34,324,624 samples, 0.94%)</title><rect x="265.6" y="293" width="11.0" height="15.0" fill="rgb(231,40,3)" rx="2" ry="2" />
<text  x="268.56" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::internal::ReturnSuccess&lt;void&gt;::call&lt;iox::cxx::function_ref&lt;void  (159,117,351 samples, 4.35%)</title><rect x="10.0" y="453" width="51.3" height="15.0" fill="rgb(205,173,33)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >iox::..</text>
</g>
<g >
<title>fpsimd_load_state (21,088,997 samples, 0.58%)</title><rect x="909.1" y="245" width="6.8" height="15.0" fill="rgb(231,112,3)" rx="2" ry="2" />
<text  x="912.13" y="255.5" ></text>
</g>
<g >
<title>iox::cxx::VariantQueue&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul&gt;::empty (16,170,663 samples, 0.44%)</title><rect x="506.6" y="357" width="5.3" height="15.0" fill="rgb(228,208,2)" rx="2" ry="2" />
<text  x="509.65" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;unsigned short, 256ul&gt;::emplace_back&lt;unsigned short&amp;&gt; (57,930,050 samples, 1.58%)</title><rect x="971.8" y="437" width="18.7" height="15.0" fill="rgb(231,128,2)" rx="2" ry="2" />
<text  x="974.81" y="447.5" ></text>
</g>
<g >
<title>iox::mepoo::ShmSafeUnmanagedChunk::ShmSafeUnmanagedChunk (11,735,023 samples, 0.32%)</title><rect x="574.6" y="341" width="3.8" height="15.0" fill="rgb(206,200,35)" rx="2" ry="2" />
<text  x="577.61" y="351.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_lock (60,925,299 samples, 1.66%)</title><rect x="91.5" y="389" width="19.6" height="15.0" fill="rgb(232,30,50)" rx="2" ry="2" />
<text  x="94.49" y="399.5" ></text>
</g>
<g >
<title>__nanosleep (505,211 samples, 0.01%)</title><rect x="1176.9" y="549" width="0.2" height="15.0" fill="rgb(222,8,49)" rx="2" ry="2" />
<text  x="1179.93" y="559.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3,441,152,536 samples, 93.97%)</title><rect x="68.1" y="581" width="1108.8" height="15.0" fill="rgb(216,52,41)" rx="2" ry="2" />
<text  x="71.09" y="591.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>motovis::transport::ShmReceiver&lt;_MvSurviewImage&gt;::notify (257,558,723 samples, 7.03%)</title><rect x="495.4" y="405" width="83.0" height="15.0" fill="rgb(243,198,8)" rx="2" ry="2" />
<text  x="498.40" y="415.5" >motovis::..</text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::popo::internal::Event_t, std::recursive_mutex&gt;::operator (81,387,107 samples, 2.22%)</title><rect x="91.5" y="437" width="26.2" height="15.0" fill="rgb(206,148,19)" rx="2" ry="2" />
<text  x="94.49" y="447.5" >i..</text>
</g>
<g >
<title>_raw_spin_unlock_irq (73,279,386 samples, 2.00%)</title><rect x="855.1" y="117" width="23.7" height="15.0" fill="rgb(218,41,51)" rx="2" ry="2" />
<text  x="858.14" y="127.5" >_..</text>
</g>
<g >
<title>std::forward&lt;void*&amp;&gt;@plt (21,076,746 samples, 0.58%)</title><rect x="61.3" y="453" width="6.8" height="15.0" fill="rgb(242,140,20)" rx="2" ry="2" />
<text  x="64.27" y="463.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (159,117,351 samples, 4.35%)</title><rect x="10.0" y="421" width="51.3" height="15.0" fill="rgb(243,121,13)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >iox::..</text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::send (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="341" width="12.9" height="15.0" fill="rgb(249,33,53)" rx="2" ry="2" />
<text  x="1180.11" y="351.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortUser::hasNewChunks@plt (29,613,539 samples, 0.81%)</title><rect x="481.2" y="405" width="9.6" height="15.0" fill="rgb(215,12,4)" rx="2" ry="2" />
<text  x="484.23" y="415.5" ></text>
</g>
<g >
<title>@plt (16,141,459 samples, 0.44%)</title><rect x="81.3" y="437" width="5.2" height="15.0" fill="rgb(238,115,16)" rx="2" ry="2" />
<text  x="84.34" y="447.5" ></text>
</g>
<g >
<title>__handle_domain_irq (16,334,583 samples, 0.45%)</title><rect x="471.9" y="357" width="5.3" height="15.0" fill="rgb(212,74,22)" rx="2" ry="2" />
<text  x="474.93" y="367.5" ></text>
</g>
<g >
<title>iox::popo::internal::TranslateAndCallTypelessCallback&lt;iox::popo::Subscriber&lt;_MV_CAN_CAR_INFO_256, iox::mepoo::NoUserHeader&gt;, std::function&lt;void  (973,227,544 samples, 26.58%)</title><rect x="153.5" y="421" width="313.6" height="15.0" fill="rgb(225,42,47)" rx="2" ry="2" />
<text  x="156.51" y="431.5" >iox::popo::internal::TranslateAndCallTypel..</text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::mepoo::SharedChunk&gt;::value@plt (13,904,829 samples, 0.38%)</title><rect x="384.4" y="325" width="4.4" height="15.0" fill="rgb(210,96,40)" rx="2" ry="2" />
<text  x="387.36" y="335.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (180,262,853 samples, 4.92%)</title><rect x="10.0" y="613" width="58.1" height="15.0" fill="rgb(246,65,52)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >[libc-..</text>
</g>
<g >
<title>iox_sem_wait (18,290,429 samples, 0.50%)</title><rect x="965.9" y="357" width="5.9" height="15.0" fill="rgb(218,4,16)" rx="2" ry="2" />
<text  x="968.92" y="367.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (45,016,382 samples, 1.23%)</title><rect x="19.4" y="181" width="14.5" height="15.0" fill="rgb(223,70,1)" rx="2" ry="2" />
<text  x="22.39" y="191.5" ></text>
</g>
<g >
<title>iox::cxx::MethodCallback&lt;void&gt;::operator (180,194,097 samples, 4.92%)</title><rect x="10.0" y="469" width="58.1" height="15.0" fill="rgb(230,213,38)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >iox::c..</text>
</g>
<g >
<title>[libpthread-2.30.so] (180,262,853 samples, 4.92%)</title><rect x="10.0" y="597" width="58.1" height="15.0" fill="rgb(225,98,30)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >[libpt..</text>
</g>
<g >
<title>pthread_mutex_lock@plt (19,825,066 samples, 0.54%)</title><rect x="104.7" y="373" width="6.4" height="15.0" fill="rgb(244,227,49)" rx="2" ry="2" />
<text  x="107.74" y="383.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::getId@plt (17,524,895 samples, 0.48%)</title><rect x="435.2" y="341" width="5.7" height="15.0" fill="rgb(209,4,5)" rx="2" ry="2" />
<text  x="438.24" y="351.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="565" width="12.9" height="15.0" fill="rgb(217,4,36)" rx="2" ry="2" />
<text  x="1180.11" y="575.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::mepoo::ShmSafeUnmanagedChunk&gt;::destruct_value@plt (14,366,790 samples, 0.39%)</title><rect x="350.8" y="309" width="4.7" height="15.0" fill="rgb(222,83,53)" rx="2" ry="2" />
<text  x="353.84" y="319.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (33,805,136 samples, 0.92%)</title><rect x="1148.0" y="453" width="10.9" height="15.0" fill="rgb(206,79,32)" rx="2" ry="2" />
<text  x="1150.96" y="463.5" ></text>
</g>
<g >
<title>el0_sync_handler (45,016,382 samples, 1.23%)</title><rect x="19.4" y="229" width="14.5" height="15.0" fill="rgb(225,97,8)" rx="2" ry="2" />
<text  x="22.39" y="239.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (12,513,208 samples, 0.34%)</title><rect x="477.2" y="405" width="4.0" height="15.0" fill="rgb(211,100,22)" rx="2" ry="2" />
<text  x="480.20" y="415.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (3,441,152,536 samples, 93.97%)</title><rect x="68.1" y="597" width="1108.8" height="15.0" fill="rgb(236,62,51)" rx="2" ry="2" />
<text  x="71.09" y="607.5" >[libpthread-2.30.so]</text>
</g>
<g >
<title>iox::concurrent::IndexQueue&lt;256ul, unsigned long&gt;::empty (16,170,663 samples, 0.44%)</title><rect x="506.6" y="341" width="5.3" height="15.0" fill="rgb(228,179,53)" rx="2" ry="2" />
<text  x="509.65" y="351.5" ></text>
</g>
<g >
<title>iox::mepoo::ChunkHeader::chunkHeaderVersion (18,184,483 samples, 0.50%)</title><rect x="306.9" y="357" width="5.8" height="15.0" fill="rgb(213,168,30)" rx="2" ry="2" />
<text  x="309.89" y="367.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointerData::reset@plt (16,378,182 samples, 0.45%)</title><rect x="416.0" y="341" width="5.3" height="15.0" fill="rgb(235,148,17)" rx="2" ry="2" />
<text  x="418.98" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::mepoo::SharedChunk&gt;::has_value@plt (20,125,021 samples, 0.55%)</title><rect x="377.9" y="309" width="6.5" height="15.0" fill="rgb(232,80,54)" rx="2" ry="2" />
<text  x="380.88" y="319.5" ></text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkManagement&gt;::RelativePointer (11,735,023 samples, 0.32%)</title><rect x="574.6" y="325" width="3.8" height="15.0" fill="rgb(210,193,43)" rx="2" ry="2" />
<text  x="577.61" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::internal::Require@plt (15,477,149 samples, 0.42%)</title><rect x="544.6" y="293" width="5.0" height="15.0" fill="rgb(224,24,17)" rx="2" ry="2" />
<text  x="547.64" y="303.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::computeRawPtr (17,114,065 samples, 0.47%)</title><rect x="388.8" y="293" width="5.6" height="15.0" fill="rgb(253,200,35)" rx="2" ry="2" />
<text  x="391.84" y="303.5" ></text>
</g>
<g >
<title>iox::rp::BaseRelativePointer::computeRawPtr (16,370,350 samples, 0.45%)</title><rect x="559.1" y="293" width="5.2" height="15.0" fill="rgb(209,228,52)" rx="2" ry="2" />
<text  x="562.05" y="303.5" ></text>
</g>
<g >
<title>fpsimd_restore_current_state (500,409 samples, 0.01%)</title><rect x="1176.9" y="501" width="0.2" height="15.0" fill="rgb(225,158,21)" rx="2" ry="2" />
<text  x="1179.94" y="511.5" ></text>
</g>
<g >
<title>iox::runtime::IpcMessageTypeToString[abi:cxx11] (2,946,892 samples, 0.08%)</title><rect x="60.3" y="341" width="1.0" height="15.0" fill="rgb(251,94,47)" rx="2" ry="2" />
<text  x="63.32" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;bool  (815,175,863 samples, 22.26%)</title><rect x="709.1" y="421" width="262.7" height="15.0" fill="rgb(223,150,40)" rx="2" ry="2" />
<text  x="712.14" y="431.5" >iox::cxx::function_ref&lt;bool </text>
</g>
<g >
<title>iox::posix::Semaphore::tryWait (107,668,861 samples, 2.94%)</title><rect x="1032.8" y="421" width="34.7" height="15.0" fill="rgb(243,206,15)" rx="2" ry="2" />
<text  x="1035.84" y="431.5" >io..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (40,004,211 samples, 1.09%)</title><rect x="1177.1" y="501" width="12.9" height="15.0" fill="rgb(213,62,44)" rx="2" ry="2" />
<text  x="1180.11" y="511.5" ></text>
</g>
<g >
<title>futex_wait (267,970,914 samples, 7.32%)</title><rect x="822.8" y="181" width="86.3" height="15.0" fill="rgb(220,193,39)" rx="2" ry="2" />
<text  x="825.78" y="191.5" >futex_wait</text>
</g>
<g >
<title>fpsimd_restore_current_state (21,088,997 samples, 0.58%)</title><rect x="909.1" y="261" width="6.8" height="15.0" fill="rgb(210,149,48)" rx="2" ry="2" />
<text  x="912.13" y="271.5" ></text>
</g>
<g >
<title>motovis::transport::ShmReceiver&lt;_MV_CAN_CAR_INFO_256&gt;::notify (106,790,611 samples, 2.92%)</title><rect x="585.0" y="421" width="34.4" height="15.0" fill="rgb(248,172,33)" rx="2" ry="2" />
<text  x="587.96" y="431.5" >mo..</text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::operator (14,356,056 samples, 0.39%)</title><rect x="1016.1" y="421" width="4.6" height="15.0" fill="rgb(232,16,13)" rx="2" ry="2" />
<text  x="1019.07" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::VariantQueue&lt;iox::mepoo::ShmSafeUnmanagedChunk, 256ul&gt;::pop (80,686,301 samples, 2.20%)</title><rect x="533.1" y="341" width="26.0" height="15.0" fill="rgb(225,198,34)" rx="2" ry="2" />
<text  x="536.05" y="351.5" >i..</text>
</g>
<g >
<title>iox::rp::RelativePointer&lt;iox::mepoo::ChunkHeader&gt;::operator iox::mepoo::ChunkHeader* (16,370,350 samples, 0.45%)</title><rect x="559.1" y="325" width="5.2" height="15.0" fill="rgb(214,25,5)" rx="2" ry="2" />
<text  x="562.05" y="335.5" ></text>
</g>
<g >
<title>std::move&lt;iox::mepoo::ShmSafeUnmanagedChunk&amp;&gt;@plt (24,805,915 samples, 0.68%)</title><rect x="355.5" y="309" width="8.0" height="15.0" fill="rgb(206,56,46)" rx="2" ry="2" />
<text  x="358.47" y="319.5" ></text>
</g>
<g >
<title>iox::mepoo::SharedChunk::getChunkHeader (16,370,350 samples, 0.45%)</title><rect x="559.1" y="341" width="5.2" height="15.0" fill="rgb(222,34,18)" rx="2" ry="2" />
<text  x="562.05" y="351.5" ></text>
</g>
<g >
<title>hash_futex (16,793,973 samples, 0.46%)</title><rect x="903.7" y="165" width="5.4" height="15.0" fill="rgb(238,149,27)" rx="2" ry="2" />
<text  x="906.71" y="175.5" ></text>
</g>
<g >
<title>iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run (180,262,853 samples, 4.92%)</title><rect x="10.0" y="485" width="58.1" height="15.0" fill="rgb(216,73,5)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >iox::c..</text>
</g>
<g >
<title>get_futex_value_locked (15,046,739 samples, 0.41%)</title><rect x="898.9" y="165" width="4.8" height="15.0" fill="rgb(249,126,44)" rx="2" ry="2" />
<text  x="901.87" y="175.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::mepoo::ShmSafeUnmanagedChunk&gt;::has_value@plt (14,096,750 samples, 0.38%)</title><rect x="549.6" y="293" width="4.6" height="15.0" fill="rgb(211,97,52)" rx="2" ry="2" />
<text  x="552.63" y="303.5" ></text>
</g>
<g >
<title>__arm64_sys_futex (284,163,708 samples, 7.76%)</title><rect x="817.6" y="213" width="91.5" height="15.0" fill="rgb(210,147,20)" rx="2" ry="2" />
<text  x="820.56" y="223.5" >__arm64_sy..</text>
</g>
<g >
<title>iox::popo::ChunkQueuePopper&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;::tryPop (339,571,735 samples, 9.27%)</title><rect x="316.6" y="357" width="109.4" height="15.0" fill="rgb(244,134,41)" rx="2" ry="2" />
<text  x="319.57" y="367.5" >iox::popo::Ch..</text>
</g>
</g>
</svg>
