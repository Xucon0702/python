<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run (7,119,579 samples, 0.13%)</title><rect x="690.2" y="485" width="1.5" height="15.0" fill="rgb(206,32,2)" rx="2" ry="2" />
<text  x="693.17" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (17,420,382 samples, 0.31%)</title><rect x="275.2" y="357" width="3.6" height="15.0" fill="rgb(221,146,39)" rx="2" ry="2" />
<text  x="278.15" y="367.5" ></text>
</g>
<g >
<title>el0_svc (56,857,359 samples, 1.02%)</title><rect x="293.4" y="373" width="12.0" height="15.0" fill="rgb(254,19,53)" rx="2" ry="2" />
<text  x="296.45" y="383.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handlePublisherPorts (326,446,215 samples, 5.83%)</title><rect x="749.4" y="421" width="68.8" height="15.0" fill="rgb(223,224,38)" rx="2" ry="2" />
<text  x="752.40" y="431.5" >iox::ro..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="501" width="3.2" height="15.0" fill="rgb(254,191,31)" rx="2" ry="2" />
<text  x="1095.16" y="511.5" ></text>
</g>
<g >
<title>el0_sync_handler (43,104,877 samples, 0.77%)</title><rect x="695.2" y="405" width="9.1" height="15.0" fill="rgb(219,95,41)" rx="2" ry="2" />
<text  x="698.23" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="581" width="3.2" height="15.0" fill="rgb(254,42,0)" rx="2" ry="2" />
<text  x="1095.16" y="591.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;long long&gt;::PosixCallEvaluator@plt (17,579,387 samples, 0.31%)</title><rect x="604.7" y="437" width="3.7" height="15.0" fill="rgb(243,92,46)" rx="2" ry="2" />
<text  x="607.69" y="447.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::~variant (28,305,565 samples, 0.51%)</title><rect x="262.5" y="421" width="6.0" height="15.0" fill="rgb(237,133,49)" rx="2" ry="2" />
<text  x="265.50" y="431.5" ></text>
</g>
<g >
<title>el1_irq (21,444,570 samples, 0.38%)</title><rect x="445.3" y="165" width="4.5" height="15.0" fill="rgb(206,132,37)" rx="2" ry="2" />
<text  x="448.30" y="175.5" ></text>
</g>
<g >
<title>el0_sync (56,857,359 samples, 1.02%)</title><rect x="293.4" y="405" width="12.0" height="15.0" fill="rgb(225,191,32)" rx="2" ry="2" />
<text  x="296.45" y="415.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (448,495,157 samples, 8.01%)</title><rect x="1095.4" y="549" width="94.6" height="15.0" fill="rgb(220,44,13)" rx="2" ry="2" />
<text  x="1098.43" y="559.5" >std::thread..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (32,643,179 samples, 0.58%)</title><rect x="86.8" y="389" width="6.9" height="15.0" fill="rgb(226,153,48)" rx="2" ry="2" />
<text  x="89.81" y="399.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (37,885,908 samples, 0.68%)</title><rect x="46.5" y="405" width="8.0" height="15.0" fill="rgb(247,206,50)" rx="2" ry="2" />
<text  x="49.49" y="415.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;long, void&gt;@plt (20,410,075 samples, 0.36%)</title><rect x="1069.4" y="437" width="4.3" height="15.0" fill="rgb(238,225,4)" rx="2" ry="2" />
<text  x="1072.38" y="447.5" ></text>
</g>
<g >
<title>irq_exit (17,420,382 samples, 0.31%)</title><rect x="275.2" y="373" width="3.6" height="15.0" fill="rgb(236,205,20)" rx="2" ry="2" />
<text  x="278.15" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (21,444,570 samples, 0.38%)</title><rect x="445.3" y="101" width="4.5" height="15.0" fill="rgb(243,3,13)" rx="2" ry="2" />
<text  x="448.30" y="111.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="597" width="3.2" height="15.0" fill="rgb(210,54,1)" rx="2" ry="2" />
<text  x="1095.16" y="607.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long long, char const*, char**, int&gt;::PosixCallBuilder (17,659,101 samples, 0.32%)</title><rect x="632.7" y="421" width="3.7" height="15.0" fill="rgb(208,34,22)" rx="2" ry="2" />
<text  x="635.68" y="431.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (3,225,869,652 samples, 57.64%)</title><rect x="10.0" y="533" width="680.2" height="15.0" fill="rgb(218,111,22)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>iox::posix::UnixDomainSocket::timedReceive[abi:cxx11] (1,422,125,925 samples, 25.41%)</title><rect x="235.6" y="453" width="299.9" height="15.0" fill="rgb(236,16,16)" rx="2" ry="2" />
<text  x="238.61" y="463.5" >iox::posix::UnixDomainSocket::timedRecei..</text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (20,410,075 samples, 0.36%)</title><rect x="1069.4" y="453" width="4.3" height="15.0" fill="rgb(239,124,50)" rx="2" ry="2" />
<text  x="1072.38" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3,225,869,652 samples, 57.64%)</title><rect x="10.0" y="581" width="680.2" height="15.0" fill="rgb(245,14,31)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getNextIdx@plt (22,277,992 samples, 0.40%)</title><rect x="144.5" y="421" width="4.7" height="15.0" fill="rgb(214,133,5)" rx="2" ry="2" />
<text  x="147.55" y="431.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;long long&gt;::failureReturnValue&lt;long long, long long&gt; (19,039,662 samples, 0.34%)</title><rect x="628.7" y="437" width="4.0" height="15.0" fill="rgb(250,44,13)" rx="2" ry="2" />
<text  x="631.66" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::begin@plt (33,130,431 samples, 0.59%)</title><rect x="191.9" y="357" width="6.9" height="15.0" fill="rgb(210,125,5)" rx="2" ry="2" />
<text  x="194.85" y="367.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (1,833,160,897 samples, 32.76%)</title><rect x="691.7" y="597" width="386.5" height="15.0" fill="rgb(222,212,28)" rx="2" ry="2" />
<text  x="694.67" y="607.5" >[libpthread-2.30.so]</text>
</g>
<g >
<title>el0_svc (16,582,023 samples, 0.30%)</title><rect x="46.5" y="341" width="3.5" height="15.0" fill="rgb(221,35,31)" rx="2" ry="2" />
<text  x="49.49" y="351.5" ></text>
</g>
<g >
<title>unix_write_space (31,750,324 samples, 0.57%)</title><rect x="449.8" y="165" width="6.7" height="15.0" fill="rgb(233,159,30)" rx="2" ry="2" />
<text  x="452.83" y="175.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (7,119,579 samples, 0.13%)</title><rect x="690.2" y="613" width="1.5" height="15.0" fill="rgb(247,119,1)" rx="2" ry="2" />
<text  x="693.17" y="623.5" ></text>
</g>
<g >
<title>__efi_fpsimd_end (16,981,557 samples, 0.30%)</title><rect x="466.5" y="357" width="3.6" height="15.0" fill="rgb(212,202,31)" rx="2" ry="2" />
<text  x="469.49" y="367.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, int, int, int, void const*, unsigned int&gt;::operator (133,710,673 samples, 2.39%)</title><rect x="288.4" y="437" width="28.2" height="15.0" fill="rgb(209,216,29)" rx="2" ry="2" />
<text  x="291.43" y="447.5" >i..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="549" width="3.2" height="15.0" fill="rgb(219,197,9)" rx="2" ry="2" />
<text  x="1095.16" y="559.5" ></text>
</g>
<g >
<title>ProcessIntr (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="629" width="3.2" height="15.0" fill="rgb(235,150,18)" rx="2" ry="2" />
<text  x="1095.16" y="639.5" ></text>
</g>
<g >
<title>refill_obj_stock (17,492,035 samples, 0.31%)</title><rect x="438.4" y="133" width="3.7" height="15.0" fill="rgb(218,172,2)" rx="2" ry="2" />
<text  x="441.38" y="143.5" ></text>
</g>
<g >
<title>iox::cxx::success&lt;iox::posix::PosixCallResult&lt;long long&gt; &gt;::success&lt;iox::posix::PosixCallResult&lt;long long&gt;&amp;&gt;@plt (18,572,127 samples, 0.33%)</title><rect x="587.0" y="437" width="3.9" height="15.0" fill="rgb(248,11,46)" rx="2" ry="2" />
<text  x="589.95" y="447.5" ></text>
</g>
<g >
<title>kfree_skb (143,416,023 samples, 2.56%)</title><rect x="426.3" y="245" width="30.2" height="15.0" fill="rgb(216,34,6)" rx="2" ry="2" />
<text  x="429.28" y="255.5" >kf..</text>
</g>
<g >
<title>do_el0_svc (172,512,721 samples, 3.08%)</title><rect x="1029.3" y="389" width="36.4" height="15.0" fill="rgb(239,178,42)" rx="2" ry="2" />
<text  x="1032.32" y="399.5" >do_..</text>
</g>
<g >
<title>iox::cxx::variant&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::get_at_index&lt;0ul&gt;@plt (29,936,661 samples, 0.53%)</title><rect x="206.7" y="437" width="6.3" height="15.0" fill="rgb(208,93,25)" rx="2" ry="2" />
<text  x="209.73" y="447.5" ></text>
</g>
<g >
<title>std::mutex::unlock (58,557,770 samples, 1.05%)</title><rect x="695.2" y="453" width="12.4" height="15.0" fill="rgb(253,53,41)" rx="2" ry="2" />
<text  x="698.23" y="463.5" ></text>
</g>
<g >
<title>iox::roudi::MemPoolIntrospection&lt;iox::mepoo::MemoryManager, iox::mepoo::SegmentManager&lt;iox::mepoo::MePooSegment&lt;iox::posix::SharedMemoryObject, iox::mepoo::MemoryManager&gt; &gt;, iox::popo::PublisherPortUser&gt;::send (7,094,367 samples, 0.13%)</title><rect x="690.2" y="373" width="1.5" height="15.0" fill="rgb(254,142,17)" rx="2" ry="2" />
<text  x="693.17" y="383.5" ></text>
</g>
<g >
<title>__sys_setsockopt (13,332,788 samples, 0.24%)</title><rect x="302.6" y="309" width="2.8" height="15.0" fill="rgb(228,3,21)" rx="2" ry="2" />
<text  x="305.62" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::success&lt;iox::posix::PosixCallResult&lt;long&gt; &gt;::success&lt;iox::posix::PosixCallResult&lt;long&gt;&amp;&gt;@plt (18,262,112 samples, 0.33%)</title><rect x="268.5" y="437" width="3.8" height="15.0" fill="rgb(225,56,23)" rx="2" ry="2" />
<text  x="271.47" y="447.5" ></text>
</g>
<g >
<title>irq_exit (25,090,858 samples, 0.45%)</title><rect x="401.7" y="197" width="5.3" height="15.0" fill="rgb(248,4,4)" rx="2" ry="2" />
<text  x="404.74" y="207.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::isInvalidIterator (16,822,972 samples, 0.30%)</title><rect x="1012.6" y="421" width="3.5" height="15.0" fill="rgb(244,89,11)" rx="2" ry="2" />
<text  x="1015.56" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::~optional (53,799,088 samples, 0.96%)</title><rect x="93.7" y="437" width="11.3" height="15.0" fill="rgb(234,144,34)" rx="2" ry="2" />
<text  x="96.69" y="447.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (66,211,107 samples, 1.18%)</title><rect x="1078.2" y="565" width="14.0" height="15.0" fill="rgb(247,219,18)" rx="2" ry="2" />
<text  x="1081.20" y="575.5" ></text>
</g>
<g >
<title>skb_free_datagram (163,675,979 samples, 2.92%)</title><rect x="426.3" y="261" width="34.5" height="15.0" fill="rgb(212,32,3)" rx="2" ry="2" />
<text  x="429.28" y="271.5" >sk..</text>
</g>
<g >
<title>iox::posix::mutex::lock (7,094,367 samples, 0.13%)</title><rect x="690.2" y="293" width="1.5" height="15.0" fill="rgb(215,70,3)" rx="2" ry="2" />
<text  x="693.17" y="303.5" ></text>
</g>
<g >
<title>__arm64_sys_futex (43,104,877 samples, 0.77%)</title><rect x="695.2" y="341" width="9.1" height="15.0" fill="rgb(207,166,46)" rx="2" ry="2" />
<text  x="698.23" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::string&lt;100ul&gt;::string (18,794,765 samples, 0.34%)</title><rect x="27.7" y="469" width="3.9" height="15.0" fill="rgb(226,214,48)" rx="2" ry="2" />
<text  x="30.67" y="479.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;@plt (23,635,025 samples, 0.42%)</title><rect x="213.0" y="437" width="5.0" height="15.0" fill="rgb(248,44,5)" rx="2" ry="2" />
<text  x="216.05" y="447.5" ></text>
</g>
<g >
<title>do_futex (16,582,023 samples, 0.30%)</title><rect x="46.5" y="277" width="3.5" height="15.0" fill="rgb(212,17,34)" rx="2" ry="2" />
<text  x="49.49" y="287.5" ></text>
</g>
<g >
<title>work_pending (62,931,262 samples, 1.12%)</title><rect x="466.5" y="389" width="13.3" height="15.0" fill="rgb(224,160,39)" rx="2" ry="2" />
<text  x="469.49" y="399.5" ></text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::Proxy::Proxy (154,791,133 samples, 2.77%)</title><rect x="39.9" y="437" width="32.7" height="15.0" fill="rgb(206,101,36)" rx="2" ry="2" />
<text  x="42.93" y="447.5" >io..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars@plt (15,883,952 samples, 0.28%)</title><rect x="573.8" y="453" width="3.3" height="15.0" fill="rgb(245,10,47)" rx="2" ry="2" />
<text  x="576.75" y="463.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::isInvalidIterOrDifferentLists@plt (17,362,866 samples, 0.31%)</title><rect x="1008.9" y="421" width="3.7" height="15.0" fill="rgb(232,72,45)" rx="2" ry="2" />
<text  x="1011.90" y="431.5" ></text>
</g>
<g >
<title>__schedule (53,950,484 samples, 0.96%)</title><rect x="1054.3" y="293" width="11.4" height="15.0" fill="rgb(238,204,53)" rx="2" ry="2" />
<text  x="1057.32" y="303.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;int&gt;::min@plt (25,912,982 samples, 0.46%)</title><rect x="656.7" y="453" width="5.5" height="15.0" fill="rgb(229,176,47)" rx="2" ry="2" />
<text  x="659.69" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (40,027,000 samples, 0.72%)</title><rect x="398.6" y="261" width="8.4" height="15.0" fill="rgb(244,135,43)" rx="2" ry="2" />
<text  x="401.59" y="271.5" ></text>
</g>
<g >
<title>el1_irq (13,780,814 samples, 0.25%)</title><rect x="334.7" y="261" width="2.9" height="15.0" fill="rgb(227,138,29)" rx="2" ry="2" />
<text  x="337.74" y="271.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (53,797,742 samples, 0.96%)</title><rect x="61.2" y="405" width="11.4" height="15.0" fill="rgb(247,180,20)" rx="2" ry="2" />
<text  x="64.22" y="415.5" ></text>
</g>
<g >
<title>MemPoolIntr (7,119,579 samples, 0.13%)</title><rect x="690.2" y="629" width="1.5" height="15.0" fill="rgb(210,159,19)" rx="2" ry="2" />
<text  x="693.17" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign@plt (16,800,411 samples, 0.30%)</title><rect x="183.3" y="341" width="3.6" height="15.0" fill="rgb(247,208,0)" rx="2" ry="2" />
<text  x="186.33" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator==&lt;false&gt;@plt (24,503,329 samples, 0.44%)</title><rect x="125.1" y="421" width="5.2" height="15.0" fill="rgb(241,122,16)" rx="2" ry="2" />
<text  x="128.12" y="431.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (15,674,250 samples, 0.28%)</title><rect x="39.9" y="421" width="3.3" height="15.0" fill="rgb(226,184,32)" rx="2" ry="2" />
<text  x="42.93" y="431.5" ></text>
</g>
<g >
<title>unix_dgram_recvmsg (566,064,600 samples, 10.11%)</title><rect x="341.4" y="277" width="119.4" height="15.0" fill="rgb(248,15,45)" rx="2" ry="2" />
<text  x="344.44" y="287.5" >unix_dgram_rec..</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator@plt (16,627,010 samples, 0.30%)</title><rect x="164.1" y="405" width="3.5" height="15.0" fill="rgb(210,135,40)" rx="2" ry="2" />
<text  x="167.10" y="415.5" ></text>
</g>
<g >
<title>el0_irq_naked (21,472,892 samples, 0.38%)</title><rect x="504.7" y="421" width="4.6" height="15.0" fill="rgb(207,117,19)" rx="2" ry="2" />
<text  x="507.74" y="431.5" ></text>
</g>
<g >
<title>__fdget (13,332,788 samples, 0.24%)</title><rect x="302.6" y="277" width="2.8" height="15.0" fill="rgb(220,21,50)" rx="2" ry="2" />
<text  x="305.62" y="287.5" ></text>
</g>
<g >
<title>IPC-msg-process (3,225,869,652 samples, 57.64%)</title><rect x="10.0" y="629" width="680.2" height="15.0" fill="rgb(232,118,54)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >IPC-msg-process</text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long long, char const*, char**, int&gt;::operator (43,950,121 samples, 0.79%)</title><rect x="595.4" y="437" width="9.3" height="15.0" fill="rgb(246,55,7)" rx="2" ry="2" />
<text  x="598.43" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str@plt (17,657,941 samples, 0.32%)</title><rect x="686.5" y="485" width="3.7" height="15.0" fill="rgb(243,40,8)" rx="2" ry="2" />
<text  x="689.45" y="495.5" ></text>
</g>
<g >
<title>iox::posix::internal::createPosixCallBuilder&lt;long long, char const*, char**, int&gt; (32,985,059 samples, 0.59%)</title><rect x="632.7" y="437" width="6.9" height="15.0" fill="rgb(208,114,43)" rx="2" ry="2" />
<text  x="635.68" y="447.5" ></text>
</g>
<g >
<title>__gthread_active_p (15,430,795 samples, 0.28%)</title><rect x="43.2" y="405" width="3.3" height="15.0" fill="rgb(215,52,39)" rx="2" ry="2" />
<text  x="46.23" y="415.5" ></text>
</g>
<g >
<title>fpsimd_restore_current_state (45,949,705 samples, 0.82%)</title><rect x="470.1" y="357" width="9.7" height="15.0" fill="rgb(234,13,11)" rx="2" ry="2" />
<text  x="473.07" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::begin (24,336,918 samples, 0.43%)</title><rect x="1020.2" y="437" width="5.1" height="15.0" fill="rgb(211,65,1)" rx="2" ry="2" />
<text  x="1023.21" y="447.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::and_then (164,554,799 samples, 2.94%)</title><rect x="183.3" y="453" width="34.7" height="15.0" fill="rgb(216,41,4)" rx="2" ry="2" />
<text  x="186.33" y="463.5" >io..</text>
</g>
<g >
<title>el0_sync_handler (624,813,284 samples, 11.16%)</title><rect x="334.7" y="373" width="131.8" height="15.0" fill="rgb(224,32,3)" rx="2" ry="2" />
<text  x="337.74" y="383.5" >el0_sync_handler</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (1,833,160,897 samples, 32.76%)</title><rect x="691.7" y="533" width="386.5" height="15.0" fill="rgb(243,125,16)" rx="2" ry="2" />
<text  x="694.67" y="543.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>iox::roudi::ProcessManager::discoveryUpdate (1,338,204,496 samples, 23.91%)</title><rect x="710.7" y="453" width="282.2" height="15.0" fill="rgb(233,72,15)" rx="2" ry="2" />
<text  x="713.72" y="463.5" >iox::roudi::ProcessManager::discovery..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (35,062,480 samples, 0.63%)</title><rect x="524.5" y="437" width="7.4" height="15.0" fill="rgb(251,119,54)" rx="2" ry="2" />
<text  x="527.48" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (17,420,382 samples, 0.31%)</title><rect x="275.2" y="277" width="3.6" height="15.0" fill="rgb(211,16,34)" rx="2" ry="2" />
<text  x="278.15" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1,833,160,897 samples, 32.76%)</title><rect x="691.7" y="581" width="386.5" height="15.0" fill="rgb(211,131,21)" rx="2" ry="2" />
<text  x="694.67" y="591.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (13,780,814 samples, 0.25%)</title><rect x="24.8" y="469" width="2.9" height="15.0" fill="rgb(210,9,41)" rx="2" ry="2" />
<text  x="27.76" y="479.5" ></text>
</g>
<g >
<title>call_timer_fn.isra.0 (17,420,382 samples, 0.31%)</title><rect x="275.2" y="325" width="3.6" height="15.0" fill="rgb(230,186,24)" rx="2" ry="2" />
<text  x="278.15" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (13,242,005 samples, 0.24%)</title><rect x="370.6" y="213" width="2.8" height="15.0" fill="rgb(215,152,10)" rx="2" ry="2" />
<text  x="373.61" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (23,880,948 samples, 0.43%)</title><rect x="393.6" y="117" width="5.0" height="15.0" fill="rgb(232,121,19)" rx="2" ry="2" />
<text  x="396.56" y="127.5" ></text>
</g>
<g >
<title>iox::roudi::RouDi::processMessage (661,236,130 samples, 11.82%)</title><rect x="31.6" y="469" width="139.5" height="15.0" fill="rgb(249,49,19)" rx="2" ry="2" />
<text  x="34.63" y="479.5" >iox::roudi::RouDi..</text>
</g>
<g >
<title>iox::runtime::IpcMessage::getElementAtIndex[abi:cxx11] (68,837,354 samples, 1.23%)</title><rect x="562.6" y="469" width="14.5" height="15.0" fill="rgb(249,143,45)" rx="2" ry="2" />
<text  x="565.59" y="479.5" ></text>
</g>
<g >
<title>iox::roudi::Process::getName (16,627,010 samples, 0.30%)</title><rect x="164.1" y="421" width="3.5" height="15.0" fill="rgb(231,91,26)" rx="2" ry="2" />
<text  x="167.10" y="431.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (16,582,023 samples, 0.30%)</title><rect x="46.5" y="309" width="3.5" height="15.0" fill="rgb(211,222,15)" rx="2" ry="2" />
<text  x="49.49" y="319.5" ></text>
</g>
<g >
<title>__arch_copy_to_user (75,265,931 samples, 1.34%)</title><rect x="410.4" y="197" width="15.9" height="15.0" fill="rgb(217,32,45)" rx="2" ry="2" />
<text  x="413.41" y="207.5" ></text>
</g>
<g >
<title>setsockopt@plt (53,066,382 samples, 0.95%)</title><rect x="305.4" y="421" width="11.2" height="15.0" fill="rgb(233,36,23)" rx="2" ry="2" />
<text  x="308.43" y="431.5" ></text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::Proxy::~Proxy (58,557,770 samples, 1.05%)</title><rect x="695.2" y="469" width="12.4" height="15.0" fill="rgb(232,202,28)" rx="2" ry="2" />
<text  x="698.23" y="479.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (87,719,255 samples, 1.57%)</title><rect x="818.2" y="389" width="18.5" height="15.0" fill="rgb(223,48,34)" rx="2" ry="2" />
<text  x="821.23" y="399.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (172,512,721 samples, 3.08%)</title><rect x="1029.3" y="341" width="36.4" height="15.0" fill="rgb(206,70,39)" rx="2" ry="2" />
<text  x="1032.32" y="351.5" >hrt..</text>
</g>
<g >
<title>_raw_spin_unlock_irq (16,582,023 samples, 0.30%)</title><rect x="46.5" y="197" width="3.5" height="15.0" fill="rgb(242,164,39)" rx="2" ry="2" />
<text  x="49.49" y="207.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::updateLivelinessOfProcess (14,799,461 samples, 0.26%)</title><rect x="86.8" y="373" width="3.1" height="15.0" fill="rgb(210,143,49)" rx="2" ry="2" />
<text  x="89.81" y="383.5" ></text>
</g>
<g >
<title>std::mutex::unlock (16,415,497 samples, 0.29%)</title><rect x="36.5" y="437" width="3.4" height="15.0" fill="rgb(233,8,38)" rx="2" ry="2" />
<text  x="39.47" y="447.5" ></text>
</g>
<g >
<title>__arm64_sys_setsockopt (13,332,788 samples, 0.24%)</title><rect x="302.6" y="325" width="2.8" height="15.0" fill="rgb(205,222,26)" rx="2" ry="2" />
<text  x="305.62" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator (19,418,736 samples, 0.35%)</title><rect x="1016.1" y="437" width="4.1" height="15.0" fill="rgb(221,189,8)" rx="2" ry="2" />
<text  x="1019.11" y="447.5" ></text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::timedReceive (92,238,925 samples, 1.65%)</title><rect x="183.3" y="389" width="19.5" height="15.0" fill="rgb(247,227,46)" rx="2" ry="2" />
<text  x="186.33" y="399.5" ></text>
</g>
<g >
<title>all (5,596,401,983 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(222,140,30)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (66,211,107 samples, 1.18%)</title><rect x="1078.2" y="597" width="14.0" height="15.0" fill="rgb(217,131,45)" rx="2" ry="2" />
<text  x="1081.20" y="607.5" ></text>
</g>
<g >
<title>__handle_domain_irq (21,472,892 samples, 0.38%)</title><rect x="504.7" y="389" width="4.6" height="15.0" fill="rgb(253,61,26)" rx="2" ry="2" />
<text  x="507.74" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (66,211,107 samples, 1.18%)</title><rect x="1078.2" y="581" width="14.0" height="15.0" fill="rgb(253,8,5)" rx="2" ry="2" />
<text  x="1081.20" y="591.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (17,492,035 samples, 0.31%)</title><rect x="438.4" y="149" width="3.7" height="15.0" fill="rgb(244,109,7)" rx="2" ry="2" />
<text  x="441.38" y="159.5" ></text>
</g>
<g >
<title>iox::roudi::FixedPositionContainer&lt;iox::popo::ClientPortData, 256ul&gt;::content (17,091,823 samples, 0.31%)</title><rect x="718.7" y="405" width="3.6" height="15.0" fill="rgb(253,202,34)" rx="2" ry="2" />
<text  x="721.73" y="415.5" ></text>
</g>
<g >
<title>skb_release_all (105,780,449 samples, 1.89%)</title><rect x="434.2" y="229" width="22.3" height="15.0" fill="rgb(207,109,36)" rx="2" ry="2" />
<text  x="437.22" y="239.5" >s..</text>
</g>
<g >
<title>del_timer_sync (16,600,873 samples, 0.30%)</title><rect x="363.1" y="245" width="3.5" height="15.0" fill="rgb(212,46,14)" rx="2" ry="2" />
<text  x="366.14" y="255.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (448,495,157 samples, 8.01%)</title><rect x="1095.4" y="597" width="94.6" height="15.0" fill="rgb(236,17,15)" rx="2" ry="2" />
<text  x="1098.43" y="607.5" >[libpthread..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (32,643,179 samples, 0.58%)</title><rect x="86.8" y="405" width="6.9" height="15.0" fill="rgb(254,27,52)" rx="2" ry="2" />
<text  x="89.81" y="415.5" ></text>
</g>
<g >
<title>do_el0_svc (16,582,023 samples, 0.30%)</title><rect x="46.5" y="325" width="3.5" height="15.0" fill="rgb(237,65,30)" rx="2" ry="2" />
<text  x="49.49" y="335.5" ></text>
</g>
<g >
<title>el1_irq (23,880,948 samples, 0.43%)</title><rect x="393.6" y="181" width="5.0" height="15.0" fill="rgb(233,124,36)" rx="2" ry="2" />
<text  x="396.56" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (53,949,936 samples, 0.96%)</title><rect x="1054.3" y="277" width="11.4" height="15.0" fill="rgb(240,125,13)" rx="2" ry="2" />
<text  x="1057.32" y="287.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (1,833,160,897 samples, 32.76%)</title><rect x="691.7" y="549" width="386.5" height="15.0" fill="rgb(215,9,43)" rx="2" ry="2" />
<text  x="694.67" y="559.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>memcg_slab_free_hook (23,737,452 samples, 0.42%)</title><rect x="429.2" y="197" width="5.0" height="15.0" fill="rgb(219,49,45)" rx="2" ry="2" />
<text  x="432.21" y="207.5" ></text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::Proxy::~Proxy (16,415,497 samples, 0.29%)</title><rect x="36.5" y="453" width="3.4" height="15.0" fill="rgb(240,95,38)" rx="2" ry="2" />
<text  x="39.47" y="463.5" ></text>
</g>
<g >
<title>iox::cxx::internal::call_at_index&lt;0ul, iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::destructor@plt (21,107,813 samples, 0.38%)</title><rect x="582.5" y="405" width="4.5" height="15.0" fill="rgb(216,161,16)" rx="2" ry="2" />
<text  x="585.50" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (32,643,179 samples, 0.58%)</title><rect x="86.8" y="421" width="6.9" height="15.0" fill="rgb(225,42,29)" rx="2" ry="2" />
<text  x="89.81" y="431.5" ></text>
</g>
<g >
<title>rcu_core_si (23,880,948 samples, 0.43%)</title><rect x="393.6" y="101" width="5.0" height="15.0" fill="rgb(249,16,24)" rx="2" ry="2" />
<text  x="396.56" y="111.5" ></text>
</g>
<g >
<title>rcu_core_si (25,090,858 samples, 0.45%)</title><rect x="401.7" y="165" width="5.3" height="15.0" fill="rgb(247,64,45)" rx="2" ry="2" />
<text  x="404.74" y="175.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::~expected@plt (18,136,130 samples, 0.32%)</title><rect x="179.5" y="453" width="3.8" height="15.0" fill="rgb(249,198,53)" rx="2" ry="2" />
<text  x="182.51" y="463.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (448,495,157 samples, 8.01%)</title><rect x="1095.4" y="613" width="94.6" height="15.0" fill="rgb(243,29,46)" rx="2" ry="2" />
<text  x="1098.43" y="623.5" >[libc-2.30...</text>
</g>
<g >
<title>std::mutex::lock@plt (14,872,219 samples, 0.27%)</title><rect x="707.6" y="453" width="3.1" height="15.0" fill="rgb(239,64,7)" rx="2" ry="2" />
<text  x="710.58" y="463.5" ></text>
</g>
<g >
<title>irq_exit (21,472,892 samples, 0.38%)</title><rect x="504.7" y="373" width="4.6" height="15.0" fill="rgb(229,138,32)" rx="2" ry="2" />
<text  x="507.74" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (14,595,114 samples, 0.26%)</title><rect x="666.4" y="469" width="3.1" height="15.0" fill="rgb(206,78,40)" rx="2" ry="2" />
<text  x="669.38" y="479.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::~expected (21,107,813 samples, 0.38%)</title><rect x="582.5" y="437" width="4.5" height="15.0" fill="rgb(242,54,6)" rx="2" ry="2" />
<text  x="585.50" y="447.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (17,406,341 samples, 0.31%)</title><rect x="839.8" y="373" width="3.7" height="15.0" fill="rgb(233,212,14)" rx="2" ry="2" />
<text  x="842.81" y="383.5" ></text>
</g>
<g >
<title>do_el0_svc (624,813,284 samples, 11.16%)</title><rect x="334.7" y="341" width="131.8" height="15.0" fill="rgb(215,174,52)" rx="2" ry="2" />
<text  x="337.74" y="351.5" >do_el0_svc</text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;int&gt;::evaluate (42,205,940 samples, 0.75%)</title><rect x="479.8" y="437" width="8.9" height="15.0" fill="rgb(221,184,21)" rx="2" ry="2" />
<text  x="482.75" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (23,616,236 samples, 0.42%)</title><rect x="186.9" y="309" width="5.0" height="15.0" fill="rgb(232,205,22)" rx="2" ry="2" />
<text  x="189.87" y="319.5" ></text>
</g>
<g >
<title>el0_svc (43,104,877 samples, 0.77%)</title><rect x="695.2" y="389" width="9.1" height="15.0" fill="rgb(226,37,18)" rx="2" ry="2" />
<text  x="698.23" y="399.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (3,225,869,652 samples, 57.64%)</title><rect x="10.0" y="565" width="680.2" height="15.0" fill="rgb(205,123,47)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (19,438,104 samples, 0.35%)</title><rect x="76.1" y="437" width="4.1" height="15.0" fill="rgb(231,164,44)" rx="2" ry="2" />
<text  x="79.06" y="447.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortMultiProducer::~SubscriberPortMultiProducer (14,638,954 samples, 0.26%)</title><rect x="836.7" y="405" width="3.1" height="15.0" fill="rgb(205,162,18)" rx="2" ry="2" />
<text  x="839.72" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator==&lt;false&gt; (41,233,682 samples, 0.74%)</title><rect x="108.7" y="405" width="8.6" height="15.0" fill="rgb(223,99,12)" rx="2" ry="2" />
<text  x="111.65" y="415.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long long, char const*, char**, int&gt;::PosixCallBuilder (21,616,077 samples, 0.39%)</title><rect x="590.9" y="437" width="4.5" height="15.0" fill="rgb(237,153,53)" rx="2" ry="2" />
<text  x="593.87" y="447.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (3,225,869,652 samples, 57.64%)</title><rect x="10.0" y="517" width="680.2" height="15.0" fill="rgb(226,134,20)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>wake_up_process (17,420,382 samples, 0.31%)</title><rect x="275.2" y="293" width="3.6" height="15.0" fill="rgb(212,93,36)" rx="2" ry="2" />
<text  x="278.15" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::internal::Require (22,001,066 samples, 0.39%)</title><rect x="749.4" y="389" width="4.6" height="15.0" fill="rgb(227,212,9)" rx="2" ry="2" />
<text  x="752.40" y="399.5" ></text>
</g>
<g >
<title>irq_exit (23,880,948 samples, 0.43%)</title><rect x="393.6" y="133" width="5.0" height="15.0" fill="rgb(247,5,9)" rx="2" ry="2" />
<text  x="396.56" y="143.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getPublisherPortDataList (184,314,870 samples, 3.29%)</title><rect x="779.4" y="405" width="38.8" height="15.0" fill="rgb(223,203,27)" rx="2" ry="2" />
<text  x="782.36" y="415.5" >iox..</text>
</g>
<g >
<title>load_balance (21,444,570 samples, 0.38%)</title><rect x="445.3" y="53" width="4.5" height="15.0" fill="rgb(220,196,53)" rx="2" ry="2" />
<text  x="448.30" y="63.5" ></text>
</g>
<g >
<title>gic_handle_irq (25,090,858 samples, 0.45%)</title><rect x="401.7" y="229" width="5.3" height="15.0" fill="rgb(212,221,13)" rx="2" ry="2" />
<text  x="404.74" y="239.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="533" width="3.2" height="15.0" fill="rgb(222,156,37)" rx="2" ry="2" />
<text  x="1095.16" y="543.5" ></text>
</g>
<g >
<title>recvfrom (738,482,310 samples, 13.20%)</title><rect x="324.0" y="405" width="155.8" height="15.0" fill="rgb(249,213,7)" rx="2" ry="2" />
<text  x="327.05" y="415.5" >recvfrom</text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;true&gt;::IteratorBase@plt (16,388,197 samples, 0.29%)</title><rect x="117.3" y="405" width="3.5" height="15.0" fill="rgb(213,46,28)" rx="2" ry="2" />
<text  x="120.35" y="415.5" ></text>
</g>
<g >
<title>xxxIPC-msg-process (448,495,157 samples, 8.01%)</title><rect x="1095.4" y="629" width="94.6" height="15.0" fill="rgb(206,42,25)" rx="2" ry="2" />
<text  x="1098.43" y="639.5" >xxxIPC-msg-..</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (14,799,461 samples, 0.26%)</title><rect x="86.8" y="357" width="3.1" height="15.0" fill="rgb(240,146,13)" rx="2" ry="2" />
<text  x="89.81" y="367.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, pthread_mutex_t*&gt;::PosixCallBuilder (7,094,367 samples, 0.13%)</title><rect x="690.2" y="261" width="1.5" height="15.0" fill="rgb(215,30,2)" rx="2" ry="2" />
<text  x="693.17" y="271.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;true&gt;::IteratorBase@plt (38,943,135 samples, 0.70%)</title><rect x="1000.7" y="421" width="8.2" height="15.0" fill="rgb(208,93,39)" rx="2" ry="2" />
<text  x="1003.69" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::call_element_destructor@plt (21,575,318 samples, 0.39%)</title><rect x="221.4" y="437" width="4.6" height="15.0" fill="rgb(242,165,13)" rx="2" ry="2" />
<text  x="224.42" y="447.5" ></text>
</g>
<g >
<title>kfree (17,492,035 samples, 0.31%)</title><rect x="438.4" y="181" width="3.7" height="15.0" fill="rgb(235,12,24)" rx="2" ry="2" />
<text  x="441.38" y="191.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::and_then (32,643,179 samples, 0.58%)</title><rect x="86.8" y="437" width="6.9" height="15.0" fill="rgb(253,93,0)" rx="2" ry="2" />
<text  x="89.81" y="447.5" ></text>
</g>
<g >
<title>do_el0_svc (56,857,359 samples, 1.02%)</title><rect x="293.4" y="357" width="12.0" height="15.0" fill="rgb(214,180,22)" rx="2" ry="2" />
<text  x="296.45" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~variant@plt (18,865,507 samples, 0.34%)</title><rect x="278.8" y="437" width="4.0" height="15.0" fill="rgb(233,12,33)" rx="2" ry="2" />
<text  x="281.83" y="447.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::popo::SubscriberPortData&gt;::has_value (282,296,208 samples, 5.04%)</title><rect x="848.6" y="389" width="59.5" height="15.0" fill="rgb(223,109,51)" rx="2" ry="2" />
<text  x="851.63" y="399.5" >iox::c..</text>
</g>
<g >
<title>kfree_skbmem (37,635,574 samples, 0.67%)</title><rect x="426.3" y="229" width="7.9" height="15.0" fill="rgb(224,140,37)" rx="2" ry="2" />
<text  x="429.28" y="239.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (1,833,160,897 samples, 32.76%)</title><rect x="691.7" y="613" width="386.5" height="15.0" fill="rgb(212,34,52)" rx="2" ry="2" />
<text  x="694.67" y="623.5" >[libc-2.30.so]</text>
</g>
<g >
<title>el0_svc (624,813,284 samples, 11.16%)</title><rect x="334.7" y="357" width="131.8" height="15.0" fill="rgb(206,199,46)" rx="2" ry="2" />
<text  x="337.74" y="367.5" >el0_svc</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (56,857,359 samples, 1.02%)</title><rect x="293.4" y="341" width="12.0" height="15.0" fill="rgb(214,192,27)" rx="2" ry="2" />
<text  x="296.45" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (92,238,925 samples, 1.65%)</title><rect x="183.3" y="405" width="19.5" height="15.0" fill="rgb(217,26,17)" rx="2" ry="2" />
<text  x="186.33" y="415.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;long long&gt;::evaluate (96,115,478 samples, 1.72%)</title><rect x="608.4" y="437" width="20.3" height="15.0" fill="rgb(250,190,40)" rx="2" ry="2" />
<text  x="611.40" y="447.5" ></text>
</g>
<g >
<title>iox::cxx::convert::stringIsNumberWithErrorMessage@plt (19,224,394 samples, 0.34%)</title><rect x="639.6" y="453" width="4.1" height="15.0" fill="rgb(232,57,53)" rx="2" ry="2" />
<text  x="642.63" y="463.5" ></text>
</g>
<g >
<title>fpsimd_load_state (26,318,089 samples, 0.47%)</title><rect x="474.2" y="341" width="5.6" height="15.0" fill="rgb(238,38,4)" rx="2" ry="2" />
<text  x="477.21" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;@plt (17,048,531 samples, 0.30%)</title><rect x="531.9" y="437" width="3.6" height="15.0" fill="rgb(234,160,31)" rx="2" ry="2" />
<text  x="534.87" y="447.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (7,094,367 samples, 0.13%)</title><rect x="690.2" y="405" width="1.5" height="15.0" fill="rgb(218,46,17)" rx="2" ry="2" />
<text  x="693.17" y="415.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (16,415,497 samples, 0.29%)</title><rect x="36.5" y="421" width="3.4" height="15.0" fill="rgb(233,41,31)" rx="2" ry="2" />
<text  x="39.47" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size@plt (20,555,563 samples, 0.37%)</title><rect x="669.5" y="469" width="4.3" height="15.0" fill="rgb(212,11,28)" rx="2" ry="2" />
<text  x="672.46" y="479.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (17,843,718 samples, 0.32%)</title><rect x="89.9" y="373" width="3.8" height="15.0" fill="rgb(248,67,35)" rx="2" ry="2" />
<text  x="92.93" y="383.5" ></text>
</g>
<g >
<title>iox::popo::ChunkSender&lt;iox::popo::ChunkSenderData&lt;8u, iox::popo::ChunkDistributorData&lt;iox::DefaultChunkDistributorConfig, iox::popo::ThreadSafePolicy, iox::popo::ChunkQueuePusher&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt; &gt; &gt; &gt;::~ChunkSender (16,223,950 samples, 0.29%)</title><rect x="775.9" y="405" width="3.5" height="15.0" fill="rgb(239,19,27)" rx="2" ry="2" />
<text  x="778.94" y="415.5" ></text>
</g>
<g >
<title>lock_timer_base (19,662,564 samples, 0.35%)</title><rect x="373.4" y="213" width="4.1" height="15.0" fill="rgb(217,145,3)" rx="2" ry="2" />
<text  x="376.40" y="223.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;iox::popo::ChunkDistributorData&lt;iox::DefaultChunkDistributorConfig, iox::popo::ThreadSafePolicy, iox::popo::ChunkQueuePusher&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt; &gt; const&gt;::lock_guard (7,094,367 samples, 0.13%)</title><rect x="690.2" y="325" width="1.5" height="15.0" fill="rgb(216,220,41)" rx="2" ry="2" />
<text  x="693.17" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::make_optional&lt;iox::roudi::Process*, iox::roudi::Process*&gt; (18,786,361 samples, 0.34%)</title><rect x="149.2" y="421" width="4.0" height="15.0" fill="rgb(214,203,11)" rx="2" ry="2" />
<text  x="152.24" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::MethodCallback&lt;void&gt;::operator (7,094,367 samples, 0.13%)</title><rect x="690.2" y="469" width="1.5" height="15.0" fill="rgb(247,143,32)" rx="2" ry="2" />
<text  x="693.17" y="479.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::cxx::optional&lt;iox::popo::PublisherPortData&gt;, 128ul&gt;::end (18,077,641 samples, 0.32%)</title><rect x="814.4" y="389" width="3.8" height="15.0" fill="rgb(207,1,27)" rx="2" ry="2" />
<text  x="817.42" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getNextIdx (26,835,494 samples, 0.48%)</title><rect x="138.9" y="421" width="5.6" height="15.0" fill="rgb(238,10,29)" rx="2" ry="2" />
<text  x="141.89" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::popo::PublisherPortData&gt;::has_value (144,289,164 samples, 2.58%)</title><rect x="779.4" y="389" width="30.4" height="15.0" fill="rgb(241,125,6)" rx="2" ry="2" />
<text  x="782.36" y="399.5" >io..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (7,119,579 samples, 0.13%)</title><rect x="690.2" y="533" width="1.5" height="15.0" fill="rgb(215,77,46)" rx="2" ry="2" />
<text  x="693.17" y="543.5" ></text>
</g>
<g >
<title>iox::cxx::internal::ReturnSuccess&lt;void&gt;::call&lt;iox::cxx::function_ref&lt;void  (7,094,367 samples, 0.13%)</title><rect x="690.2" y="453" width="1.5" height="15.0" fill="rgb(214,104,2)" rx="2" ry="2" />
<text  x="693.17" y="463.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::cxx::optional&lt;iox::popo::InterfacePortData&gt;, 4ul&gt;::begin (15,570,621 samples, 0.28%)</title><rect x="742.9" y="389" width="3.3" height="15.0" fill="rgb(227,33,21)" rx="2" ry="2" />
<text  x="745.95" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::ConditionVariableData*, 1024ul&gt;::clear@plt (15,287,901 samples, 0.27%)</title><rect x="722.3" y="405" width="3.3" height="15.0" fill="rgb(236,99,18)" rx="2" ry="2" />
<text  x="725.33" y="415.5" ></text>
</g>
<g >
<title>iox::posix::Semaphore::timedWait (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="469" width="3.2" height="15.0" fill="rgb(207,15,54)" rx="2" ry="2" />
<text  x="1095.16" y="479.5" ></text>
</g>
<g >
<title>el0_sync (43,104,877 samples, 0.77%)</title><rect x="695.2" y="421" width="9.1" height="15.0" fill="rgb(223,85,13)" rx="2" ry="2" />
<text  x="698.23" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::internal::call_at_index&lt;0ul, iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::destructor@plt (28,305,565 samples, 0.51%)</title><rect x="262.5" y="405" width="6.0" height="15.0" fill="rgb(225,182,18)" rx="2" ry="2" />
<text  x="265.50" y="415.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (16,582,023 samples, 0.30%)</title><rect x="46.5" y="245" width="3.5" height="15.0" fill="rgb(246,41,50)" rx="2" ry="2" />
<text  x="49.49" y="255.5" ></text>
</g>
<g >
<title>do_futex (43,104,877 samples, 0.77%)</title><rect x="695.2" y="325" width="9.1" height="15.0" fill="rgb(239,169,48)" rx="2" ry="2" />
<text  x="698.23" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::cxx::optional&lt;iox::popo::SubscriberPortData&gt;, 256ul&gt;::begin@plt (369,718,168 samples, 6.61%)</title><rect x="908.1" y="389" width="78.0" height="15.0" fill="rgb(212,195,48)" rx="2" ry="2" />
<text  x="911.15" y="399.5" >iox::cxx:..</text>
</g>
<g >
<title>el0_sync (172,512,721 samples, 3.08%)</title><rect x="1029.3" y="437" width="36.4" height="15.0" fill="rgb(216,190,19)" rx="2" ry="2" />
<text  x="1032.32" y="447.5" >el0..</text>
</g>
<g >
<title>el0_sync_handler (16,582,023 samples, 0.30%)</title><rect x="46.5" y="357" width="3.5" height="15.0" fill="rgb(238,119,43)" rx="2" ry="2" />
<text  x="49.49" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (25,090,858 samples, 0.45%)</title><rect x="401.7" y="181" width="5.3" height="15.0" fill="rgb(254,108,28)" rx="2" ry="2" />
<text  x="404.74" y="191.5" ></text>
</g>
<g >
<title>iox::cxx::internal::Require@plt (20,069,866 samples, 0.36%)</title><rect x="108.7" y="389" width="4.2" height="15.0" fill="rgb(252,178,43)" rx="2" ry="2" />
<text  x="111.65" y="399.5" ></text>
</g>
<g >
<title>ww_mutex_lock_interruptible (27,002,237 samples, 0.48%)</title><rect x="460.8" y="277" width="5.7" height="15.0" fill="rgb(223,136,23)" rx="2" ry="2" />
<text  x="463.79" y="287.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long, int, void*, unsigned long, int, sockaddr*, unsigned int*&gt;::operator (773,687,957 samples, 13.82%)</title><rect x="316.6" y="437" width="163.2" height="15.0" fill="rgb(220,182,18)" rx="2" ry="2" />
<text  x="319.62" y="447.5" >iox::posix::PosixCall..</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::variant&lt;0ul, iox::posix::PosixCallResult&lt;long&gt; &gt; (16,481,747 samples, 0.29%)</title><rect x="488.7" y="405" width="3.4" height="15.0" fill="rgb(244,184,7)" rx="2" ry="2" />
<text  x="491.65" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::roudi::Process*&gt; (16,340,411 samples, 0.29%)</title><rect x="167.6" y="421" width="3.5" height="15.0" fill="rgb(233,95,53)" rx="2" ry="2" />
<text  x="170.61" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::emplace&lt;iox::roudi::Process*&gt; (18,786,361 samples, 0.34%)</title><rect x="149.2" y="405" width="4.0" height="15.0" fill="rgb(225,70,36)" rx="2" ry="2" />
<text  x="152.24" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (7,119,579 samples, 0.13%)</title><rect x="690.2" y="501" width="1.5" height="15.0" fill="rgb(228,144,12)" rx="2" ry="2" />
<text  x="693.17" y="511.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::has_value@plt (18,786,361 samples, 0.34%)</title><rect x="149.2" y="389" width="4.0" height="15.0" fill="rgb(247,89,52)" rx="2" ry="2" />
<text  x="152.24" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::isInvalidIterator@plt (21,163,816 samples, 0.38%)</title><rect x="112.9" y="389" width="4.4" height="15.0" fill="rgb(246,57,6)" rx="2" ry="2" />
<text  x="115.88" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (66,211,107 samples, 1.18%)</title><rect x="1078.2" y="501" width="14.0" height="15.0" fill="rgb(221,45,47)" rx="2" ry="2" />
<text  x="1081.20" y="511.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::posix::PosixCallResult&lt;int&gt; &gt; (24,240,307 samples, 0.43%)</title><rect x="479.8" y="405" width="5.1" height="15.0" fill="rgb(213,183,5)" rx="2" ry="2" />
<text  x="482.75" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::internal::methodCallbackCaller&lt;void, iox::roudi::PortIntrospection&lt;iox::popo::PublisherPortUser, iox::popo::SubscriberPortUser&gt;&gt; (66,207,828 samples, 1.18%)</title><rect x="1078.2" y="389" width="14.0" height="15.0" fill="rgb(207,161,28)" rx="2" ry="2" />
<text  x="1081.20" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::popo::ConditionVariableData&gt;::has_value (16,596,905 samples, 0.30%)</title><rect x="725.6" y="389" width="3.5" height="15.0" fill="rgb(223,5,48)" rx="2" ry="2" />
<text  x="728.56" y="399.5" ></text>
</g>
<g >
<title>__schedule (16,582,023 samples, 0.30%)</title><rect x="46.5" y="213" width="3.5" height="15.0" fill="rgb(209,227,33)" rx="2" ry="2" />
<text  x="49.49" y="223.5" ></text>
</g>
<g >
<title>do_notify_resume (62,931,262 samples, 1.12%)</title><rect x="466.5" y="373" width="13.3" height="15.0" fill="rgb(230,62,49)" rx="2" ry="2" />
<text  x="469.49" y="383.5" ></text>
</g>
<g >
<title>iox::algorithm::doesContainValue&lt;long&gt;@plt (18,994,152 samples, 0.34%)</title><rect x="515.6" y="421" width="4.0" height="15.0" fill="rgb(205,32,26)" rx="2" ry="2" />
<text  x="518.55" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (448,495,157 samples, 8.01%)</title><rect x="1095.4" y="501" width="94.6" height="15.0" fill="rgb(217,60,29)" rx="2" ry="2" />
<text  x="1098.43" y="511.5" >std::__invo..</text>
</g>
<g >
<title>std::move&lt;iox::posix::PosixCallResult&lt;long&gt;&amp;&gt;@plt (17,418,696 samples, 0.31%)</title><rect x="496.7" y="421" width="3.7" height="15.0" fill="rgb(244,21,24)" rx="2" ry="2" />
<text  x="499.74" y="431.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::findProcess (313,106,184 samples, 5.59%)</title><rect x="105.0" y="437" width="66.1" height="15.0" fill="rgb(251,220,53)" rx="2" ry="2" />
<text  x="108.03" y="447.5" >iox::ro..</text>
</g>
<g >
<title>iox::popo::BasePort::toBeDestroyed (87,719,255 samples, 1.57%)</title><rect x="818.2" y="405" width="18.5" height="15.0" fill="rgb(243,173,19)" rx="2" ry="2" />
<text  x="821.23" y="415.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getInterfacePortDataList (30,583,114 samples, 0.55%)</title><rect x="742.9" y="405" width="6.5" height="15.0" fill="rgb(211,132,44)" rx="2" ry="2" />
<text  x="745.95" y="415.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortMultiProducer::tryGetCaProMessage (17,406,341 samples, 0.31%)</title><rect x="839.8" y="389" width="3.7" height="15.0" fill="rgb(213,12,15)" rx="2" ry="2" />
<text  x="842.81" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (7,094,367 samples, 0.13%)</title><rect x="690.2" y="437" width="1.5" height="15.0" fill="rgb(228,177,12)" rx="2" ry="2" />
<text  x="693.17" y="447.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (15,452,893 samples, 0.28%)</title><rect x="704.3" y="437" width="3.3" height="15.0" fill="rgb(245,25,28)" rx="2" ry="2" />
<text  x="707.32" y="447.5" ></text>
</g>
<g >
<title>__clock_gettime (14,799,461 samples, 0.26%)</title><rect x="86.8" y="341" width="3.1" height="15.0" fill="rgb(225,65,26)" rx="2" ry="2" />
<text  x="89.81" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::cxx::optional&lt;iox::popo::PublisherPortData&gt;, 128ul&gt;::begin@plt (21,948,065 samples, 0.39%)</title><rect x="809.8" y="389" width="4.6" height="15.0" fill="rgb(211,216,26)" rx="2" ry="2" />
<text  x="812.79" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (3,225,869,652 samples, 57.64%)</title><rect x="10.0" y="549" width="680.2" height="15.0" fill="rgb(207,20,52)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::operator (14,872,219 samples, 0.27%)</title><rect x="707.6" y="469" width="3.1" height="15.0" fill="rgb(229,7,43)" rx="2" ry="2" />
<text  x="710.58" y="479.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::findProcess (16,547,077 samples, 0.30%)</title><rect x="72.6" y="453" width="3.5" height="15.0" fill="rgb(241,218,46)" rx="2" ry="2" />
<text  x="75.57" y="463.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::doDiscovery (1,320,304,380 samples, 23.59%)</title><rect x="710.7" y="437" width="278.4" height="15.0" fill="rgb(236,142,46)" rx="2" ry="2" />
<text  x="713.72" y="447.5" >iox::roudi::PortManager::doDiscovery</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (66,211,107 samples, 1.18%)</title><rect x="1078.2" y="533" width="14.0" height="15.0" fill="rgb(242,181,19)" rx="2" ry="2" />
<text  x="1081.20" y="543.5" ></text>
</g>
<g >
<title>del_timer_sync (32,904,569 samples, 0.59%)</title><rect x="370.6" y="229" width="6.9" height="15.0" fill="rgb(231,125,17)" rx="2" ry="2" />
<text  x="373.61" y="239.5" ></text>
</g>
<g >
<title>preempt_schedule_irq (13,780,814 samples, 0.25%)</title><rect x="334.7" y="229" width="2.9" height="15.0" fill="rgb(205,213,8)" rx="2" ry="2" />
<text  x="337.74" y="239.5" ></text>
</g>
<g >
<title>__schedule (99,828,628 samples, 1.78%)</title><rect x="377.5" y="213" width="21.1" height="15.0" fill="rgb(205,9,13)" rx="2" ry="2" />
<text  x="380.54" y="223.5" ></text>
</g>
<g >
<title>run_rebalance_domains (21,444,570 samples, 0.38%)</title><rect x="445.3" y="85" width="4.5" height="15.0" fill="rgb(230,73,17)" rx="2" ry="2" />
<text  x="448.30" y="95.5" ></text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::operator (154,791,133 samples, 2.77%)</title><rect x="39.9" y="453" width="32.7" height="15.0" fill="rgb(211,128,33)" rx="2" ry="2" />
<text  x="42.93" y="463.5" >io..</text>
</g>
<g >
<title>__sched_text_start (13,780,814 samples, 0.25%)</title><rect x="334.7" y="245" width="2.9" height="15.0" fill="rgb(232,3,23)" rx="2" ry="2" />
<text  x="337.74" y="255.5" ></text>
</g>
<g >
<title>iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run (66,211,107 samples, 1.18%)</title><rect x="1078.2" y="485" width="14.0" height="15.0" fill="rgb(218,91,18)" rx="2" ry="2" />
<text  x="1081.20" y="495.5" ></text>
</g>
<g >
<title>iox::posix::internal::createPosixCallBuilder&lt;int, pthread_mutex_t*&gt; (7,094,367 samples, 0.13%)</title><rect x="690.2" y="277" width="1.5" height="15.0" fill="rgb(205,154,37)" rx="2" ry="2" />
<text  x="693.17" y="287.5" ></text>
</g>
<g >
<title>__errno_location@plt (23,002,244 samples, 0.41%)</title><rect x="238.4" y="437" width="4.9" height="15.0" fill="rgb(223,156,35)" rx="2" ry="2" />
<text  x="241.40" y="447.5" ></text>
</g>
<g >
<title>__fget_light (13,332,788 samples, 0.24%)</title><rect x="302.6" y="261" width="2.8" height="15.0" fill="rgb(213,30,51)" rx="2" ry="2" />
<text  x="305.62" y="271.5" ></text>
</g>
<g >
<title>refill_obj_stock (23,737,452 samples, 0.42%)</title><rect x="429.2" y="165" width="5.0" height="15.0" fill="rgb(240,193,15)" rx="2" ry="2" />
<text  x="432.21" y="175.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (3,225,869,652 samples, 57.64%)</title><rect x="10.0" y="613" width="680.2" height="15.0" fill="rgb(253,1,25)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >[libc-2.30.so]</text>
</g>
<g >
<title>el1_irq (25,090,858 samples, 0.45%)</title><rect x="401.7" y="245" width="5.3" height="15.0" fill="rgb(236,226,26)" rx="2" ry="2" />
<text  x="404.74" y="255.5" ></text>
</g>
<g >
<title>schedule (16,582,023 samples, 0.30%)</title><rect x="46.5" y="229" width="3.5" height="15.0" fill="rgb(227,93,10)" rx="2" ry="2" />
<text  x="49.49" y="239.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (46,941,740 samples, 0.84%)</title><rect x="729.1" y="405" width="9.9" height="15.0" fill="rgb(253,61,3)" rx="2" ry="2" />
<text  x="732.05" y="415.5" ></text>
</g>
<g >
<title>operator new (16,481,747 samples, 0.29%)</title><rect x="488.7" y="389" width="3.4" height="15.0" fill="rgb(234,100,30)" rx="2" ry="2" />
<text  x="491.65" y="399.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (87,951,137 samples, 1.57%)</title><rect x="757.4" y="389" width="18.5" height="15.0" fill="rgb(235,137,41)" rx="2" ry="2" />
<text  x="760.40" y="399.5" ></text>
</g>
<g >
<title>el0_sync_handler (56,857,359 samples, 1.02%)</title><rect x="293.4" y="389" width="12.0" height="15.0" fill="rgb(213,5,7)" rx="2" ry="2" />
<text  x="296.45" y="399.5" ></text>
</g>
<g >
<title>gic_handle_irq (23,880,948 samples, 0.43%)</title><rect x="393.6" y="165" width="5.0" height="15.0" fill="rgb(235,51,18)" rx="2" ry="2" />
<text  x="396.56" y="175.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getClientPortDataList (14,221,804 samples, 0.25%)</title><rect x="986.1" y="421" width="3.0" height="15.0" fill="rgb(253,63,6)" rx="2" ry="2" />
<text  x="989.10" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::cxx::optional&lt;iox::popo::InterfacePortData&gt;, 4ul&gt;::end (15,012,493 samples, 0.27%)</title><rect x="746.2" y="389" width="3.2" height="15.0" fill="rgb(220,179,41)" rx="2" ry="2" />
<text  x="749.23" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::make_optional&lt;iox::roudi::Process*, iox::roudi::Process*&gt;@plt (15,220,252 samples, 0.27%)</title><rect x="83.6" y="437" width="3.2" height="15.0" fill="rgb(209,134,13)" rx="2" ry="2" />
<text  x="86.60" y="447.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (66,211,107 samples, 1.18%)</title><rect x="1078.2" y="517" width="14.0" height="15.0" fill="rgb(231,112,49)" rx="2" ry="2" />
<text  x="1081.20" y="527.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getConditionVariableDataList (16,596,905 samples, 0.30%)</title><rect x="725.6" y="405" width="3.5" height="15.0" fill="rgb(210,22,31)" rx="2" ry="2" />
<text  x="728.56" y="415.5" ></text>
</g>
<g >
<title>process_timeout (17,420,382 samples, 0.31%)</title><rect x="275.2" y="309" width="3.6" height="15.0" fill="rgb(213,27,48)" rx="2" ry="2" />
<text  x="278.15" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator!=&lt;false&gt; (73,797,051 samples, 1.32%)</title><rect x="997.0" y="437" width="15.6" height="15.0" fill="rgb(231,193,20)" rx="2" ry="2" />
<text  x="1000.00" y="447.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (66,207,828 samples, 1.18%)</title><rect x="1078.2" y="437" width="14.0" height="15.0" fill="rgb(236,106,48)" rx="2" ry="2" />
<text  x="1081.20" y="447.5" ></text>
</g>
<g >
<title>__arm64_sys_futex_time32 (16,596,905 samples, 0.30%)</title><rect x="695.2" y="293" width="3.5" height="15.0" fill="rgb(220,153,47)" rx="2" ry="2" />
<text  x="698.23" y="303.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;long&gt;::evaluate@plt (32,310,345 samples, 0.58%)</title><rect x="228.8" y="453" width="6.8" height="15.0" fill="rgb(232,173,34)" rx="2" ry="2" />
<text  x="231.80" y="463.5" ></text>
</g>
<g >
<title>__arm64_sys_futex (16,582,023 samples, 0.30%)</title><rect x="46.5" y="293" width="3.5" height="15.0" fill="rgb(238,144,10)" rx="2" ry="2" />
<text  x="49.49" y="303.5" ></text>
</g>
<g >
<title>el0_sync_handler (172,512,721 samples, 3.08%)</title><rect x="1029.3" y="421" width="36.4" height="15.0" fill="rgb(235,115,11)" rx="2" ry="2" />
<text  x="1032.32" y="431.5" >el0..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (92,238,925 samples, 1.65%)</title><rect x="183.3" y="421" width="19.5" height="15.0" fill="rgb(205,121,0)" rx="2" ry="2" />
<text  x="186.33" y="431.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (448,495,157 samples, 8.01%)</title><rect x="1095.4" y="565" width="94.6" height="15.0" fill="rgb(222,221,9)" rx="2" ry="2" />
<text  x="1098.43" y="575.5" >std::thread..</text>
</g>
<g >
<title>schedule (99,828,628 samples, 1.78%)</title><rect x="377.5" y="229" width="21.1" height="15.0" fill="rgb(217,184,17)" rx="2" ry="2" />
<text  x="380.54" y="239.5" ></text>
</g>
<g >
<title>iox::cxx::string&lt;100ul&gt;::string (18,794,765 samples, 0.34%)</title><rect x="27.7" y="453" width="3.9" height="15.0" fill="rgb(229,113,0)" rx="2" ry="2" />
<text  x="30.67" y="463.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (66,207,828 samples, 1.18%)</title><rect x="1078.2" y="405" width="14.0" height="15.0" fill="rgb(233,178,5)" rx="2" ry="2" />
<text  x="1081.20" y="415.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallResult&lt;int&gt;::PosixCallResult (7,094,367 samples, 0.13%)</title><rect x="690.2" y="245" width="1.5" height="15.0" fill="rgb(242,42,11)" rx="2" ry="2" />
<text  x="693.17" y="255.5" ></text>
</g>
<g >
<title>iox::cxx::not_null&lt;iox::popo::PublisherPortData* const, void&gt;::not_null (22,001,066 samples, 0.39%)</title><rect x="749.4" y="405" width="4.6" height="15.0" fill="rgb(246,71,20)" rx="2" ry="2" />
<text  x="752.40" y="415.5" ></text>
</g>
<g >
<title>iox::posix::internal::PosixCallDetails&lt;long long&gt;::PosixCallDetails (15,325,958 samples, 0.27%)</title><rect x="636.4" y="421" width="3.2" height="15.0" fill="rgb(242,123,53)" rx="2" ry="2" />
<text  x="639.40" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::posix::PosixCallResult&lt;long long&gt;&amp;&gt;@plt (21,498,667 samples, 0.38%)</title><rect x="613.3" y="421" width="4.6" height="15.0" fill="rgb(214,182,22)" rx="2" ry="2" />
<text  x="616.32" y="431.5" ></text>
</g>
<g >
<title>__nanosleep (191,397,662 samples, 3.42%)</title><rect x="1025.3" y="453" width="40.4" height="15.0" fill="rgb(248,185,41)" rx="2" ry="2" />
<text  x="1028.34" y="463.5" >__n..</text>
</g>
<g >
<title>std::mutex::lock (139,116,883 samples, 2.49%)</title><rect x="43.2" y="421" width="29.4" height="15.0" fill="rgb(207,128,41)" rx="2" ry="2" />
<text  x="46.23" y="431.5" >st..</text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;int&gt;::PosixCallVerificator@plt (20,540,589 samples, 0.37%)</title><rect x="500.4" y="437" width="4.3" height="15.0" fill="rgb(245,226,22)" rx="2" ry="2" />
<text  x="503.41" y="447.5" ></text>
</g>
<g >
<title>gic_handle_irq (17,420,382 samples, 0.31%)</title><rect x="275.2" y="405" width="3.6" height="15.0" fill="rgb(208,33,22)" rx="2" ry="2" />
<text  x="278.15" y="415.5" ></text>
</g>
<g >
<title>clock_gettime@plt (19,576,897 samples, 0.35%)</title><rect x="992.9" y="437" width="4.1" height="15.0" fill="rgb(249,63,49)" rx="2" ry="2" />
<text  x="995.88" y="447.5" ></text>
</g>
<g >
<title>el0_irq_naked (17,420,382 samples, 0.31%)</title><rect x="275.2" y="421" width="3.6" height="15.0" fill="rgb(235,4,39)" rx="2" ry="2" />
<text  x="278.15" y="431.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, int, int, int, void const*, unsigned int&gt;::PosixCallBuilder@plt (26,679,160 samples, 0.48%)</title><rect x="282.8" y="437" width="5.6" height="15.0" fill="rgb(227,125,34)" rx="2" ry="2" />
<text  x="285.80" y="447.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (1,833,160,897 samples, 32.76%)</title><rect x="691.7" y="517" width="386.5" height="15.0" fill="rgb(243,181,8)" rx="2" ry="2" />
<text  x="694.67" y="527.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>[libc-2.30.so] (43,950,121 samples, 0.79%)</title><rect x="595.4" y="421" width="9.3" height="15.0" fill="rgb(249,68,21)" rx="2" ry="2" />
<text  x="598.43" y="431.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleServerPorts@plt (17,900,116 samples, 0.32%)</title><rect x="989.1" y="437" width="3.8" height="15.0" fill="rgb(250,144,6)" rx="2" ry="2" />
<text  x="992.10" y="447.5" ></text>
</g>
<g >
<title>__sys_recvfrom (624,813,284 samples, 11.16%)</title><rect x="334.7" y="293" width="131.8" height="15.0" fill="rgb(231,142,49)" rx="2" ry="2" />
<text  x="337.74" y="303.5" >__sys_recvfrom</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (21,914,708 samples, 0.39%)</title><rect x="569.1" y="453" width="4.7" height="15.0" fill="rgb(254,138,26)" rx="2" ry="2" />
<text  x="572.13" y="463.5" ></text>
</g>
<g >
<title>iox::posix::internal::createPosixCallBuilder&lt;long, int, void*, unsigned long, int, sockaddr*, unsigned int*&gt; (23,322,072 samples, 0.42%)</title><rect x="519.6" y="437" width="4.9" height="15.0" fill="rgb(230,99,11)" rx="2" ry="2" />
<text  x="522.56" y="447.5" ></text>
</g>
<g >
<title>iox::roudi::RouDi::monitorAndDiscoveryUpdate (1,794,887,561 samples, 32.07%)</title><rect x="695.2" y="485" width="378.5" height="15.0" fill="rgb(251,113,54)" rx="2" ry="2" />
<text  x="698.23" y="495.5" >iox::roudi::RouDi::monitorAndDiscoveryUpdate</text>
</g>
<g >
<title>run_timer_softirq (17,420,382 samples, 0.31%)</title><rect x="275.2" y="341" width="3.6" height="15.0" fill="rgb(235,4,21)" rx="2" ry="2" />
<text  x="278.15" y="351.5" ></text>
</g>
<g >
<title>futex_wait (16,582,023 samples, 0.30%)</title><rect x="46.5" y="261" width="3.5" height="15.0" fill="rgb(245,155,30)" rx="2" ry="2" />
<text  x="49.49" y="271.5" ></text>
</g>
<g >
<title>std::count_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, iox::runtime::IpcMessage::setMessage (23,616,236 samples, 0.42%)</title><rect x="186.9" y="341" width="5.0" height="15.0" fill="rgb(237,174,28)" rx="2" ry="2" />
<text  x="189.87" y="351.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortRouDi::~SubscriberPortRouDi (14,638,954 samples, 0.26%)</title><rect x="836.7" y="389" width="3.1" height="15.0" fill="rgb(241,48,26)" rx="2" ry="2" />
<text  x="839.72" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getDataPtrFromIdx@plt (19,418,736 samples, 0.35%)</title><rect x="1016.1" y="421" width="4.1" height="15.0" fill="rgb(234,168,33)" rx="2" ry="2" />
<text  x="1019.11" y="431.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleConditionVariables (78,826,546 samples, 1.41%)</title><rect x="722.3" y="421" width="16.7" height="15.0" fill="rgb(236,92,38)" rx="2" ry="2" />
<text  x="725.33" y="431.5" ></text>
</g>
<g >
<title>iox::roudi::PortIntrospection&lt;iox::popo::PublisherPortUser, iox::popo::SubscriberPortUser&gt;::PortData::prepareTopic (65,747,434 samples, 1.17%)</title><rect x="1078.2" y="341" width="13.9" height="15.0" fill="rgb(245,147,51)" rx="2" ry="2" />
<text  x="1081.20" y="351.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (448,495,157 samples, 8.01%)</title><rect x="1095.4" y="517" width="94.6" height="15.0" fill="rgb(246,107,25)" rx="2" ry="2" />
<text  x="1098.43" y="527.5" >std::__invo..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (7,119,579 samples, 0.13%)</title><rect x="690.2" y="549" width="1.5" height="15.0" fill="rgb(232,112,42)" rx="2" ry="2" />
<text  x="693.17" y="559.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator* (20,457,625 samples, 0.37%)</title><rect x="120.8" y="421" width="4.3" height="15.0" fill="rgb(220,25,10)" rx="2" ry="2" />
<text  x="123.80" y="431.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (43,104,877 samples, 0.77%)</title><rect x="695.2" y="357" width="9.1" height="15.0" fill="rgb(221,76,19)" rx="2" ry="2" />
<text  x="698.23" y="367.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::doDiscoveryForSubscriberPort (20,519,312 samples, 0.37%)</title><rect x="714.4" y="421" width="4.3" height="15.0" fill="rgb(225,137,10)" rx="2" ry="2" />
<text  x="717.40" y="431.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (66,211,107 samples, 1.18%)</title><rect x="1078.2" y="549" width="14.0" height="15.0" fill="rgb(241,32,45)" rx="2" ry="2" />
<text  x="1081.20" y="559.5" ></text>
</g>
<g >
<title>memcmp (51,677,881 samples, 0.92%)</title><rect x="153.2" y="405" width="10.9" height="15.0" fill="rgb(222,31,20)" rx="2" ry="2" />
<text  x="156.20" y="415.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (21,303,885 samples, 0.38%)</title><rect x="50.0" y="389" width="4.5" height="15.0" fill="rgb(209,162,34)" rx="2" ry="2" />
<text  x="52.98" y="399.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (7,119,579 samples, 0.13%)</title><rect x="690.2" y="597" width="1.5" height="15.0" fill="rgb(239,211,23)" rx="2" ry="2" />
<text  x="693.17" y="607.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator@plt (17,760,124 samples, 0.32%)</title><rect x="558.8" y="453" width="3.8" height="15.0" fill="rgb(251,147,48)" rx="2" ry="2" />
<text  x="561.84" y="463.5" ></text>
</g>
<g >
<title>skb_release_head_state (68,553,833 samples, 1.22%)</title><rect x="442.1" y="213" width="14.4" height="15.0" fill="rgb(215,116,21)" rx="2" ry="2" />
<text  x="445.07" y="223.5" ></text>
</g>
<g >
<title>do_nanosleep (172,512,721 samples, 3.08%)</title><rect x="1029.3" y="325" width="36.4" height="15.0" fill="rgb(248,96,49)" rx="2" ry="2" />
<text  x="1032.32" y="335.5" >do_..</text>
</g>
<g >
<title>__handle_domain_irq (21,444,570 samples, 0.38%)</title><rect x="445.3" y="133" width="4.5" height="15.0" fill="rgb(206,163,8)" rx="2" ry="2" />
<text  x="448.30" y="143.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator==&lt;false&gt; (17,491,050 samples, 0.31%)</title><rect x="997.0" y="421" width="3.7" height="15.0" fill="rgb(226,216,31)" rx="2" ry="2" />
<text  x="1000.00" y="431.5" ></text>
</g>
<g >
<title>gic_handle_irq (21,444,570 samples, 0.38%)</title><rect x="445.3" y="149" width="4.5" height="15.0" fill="rgb(237,30,36)" rx="2" ry="2" />
<text  x="448.30" y="159.5" ></text>
</g>
<g >
<title>__handle_domain_irq (23,880,948 samples, 0.43%)</title><rect x="393.6" y="149" width="5.0" height="15.0" fill="rgb(218,7,33)" rx="2" ry="2" />
<text  x="396.56" y="159.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (1,833,160,897 samples, 32.76%)</title><rect x="691.7" y="565" width="386.5" height="15.0" fill="rgb(219,219,2)" rx="2" ry="2" />
<text  x="694.67" y="575.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::..</text>
</g>
<g >
<title>sock_wfree (53,194,894 samples, 0.95%)</title><rect x="445.3" y="181" width="11.2" height="15.0" fill="rgb(212,5,23)" rx="2" ry="2" />
<text  x="448.30" y="191.5" ></text>
</g>
<g >
<title>iox::roudi::RouDi::processRuntimeMessages (448,495,157 samples, 8.01%)</title><rect x="1095.4" y="485" width="94.6" height="15.0" fill="rgb(248,228,44)" rx="2" ry="2" />
<text  x="1098.43" y="495.5" >iox::roudi:..</text>
</g>
<g >
<title>[libpthread-2.30.so] (35,205,647 samples, 0.63%)</title><rect x="316.6" y="405" width="7.4" height="15.0" fill="rgb(230,117,41)" rx="2" ry="2" />
<text  x="319.62" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~variant (60,130,030 samples, 1.07%)</title><rect x="249.8" y="421" width="12.7" height="15.0" fill="rgb(208,62,51)" rx="2" ry="2" />
<text  x="252.83" y="431.5" ></text>
</g>
<g >
<title>iox::algorithm::doesContainValue&lt;long long, long long&gt; (19,039,662 samples, 0.34%)</title><rect x="628.7" y="421" width="4.0" height="15.0" fill="rgb(208,107,50)" rx="2" ry="2" />
<text  x="631.66" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::internal::Require (18,744,188 samples, 0.33%)</title><rect x="202.8" y="437" width="3.9" height="15.0" fill="rgb(252,122,14)" rx="2" ry="2" />
<text  x="205.78" y="447.5" ></text>
</g>
<g >
<title>iox::popo::ChunkDistributor&lt;iox::popo::ChunkDistributorData&lt;iox::DefaultChunkDistributorConfig, iox::popo::ThreadSafePolicy, iox::popo::ChunkQueuePusher&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt; &gt; &gt;::hasStoredQueues (7,094,367 samples, 0.13%)</title><rect x="690.2" y="341" width="1.5" height="15.0" fill="rgb(229,172,26)" rx="2" ry="2" />
<text  x="693.17" y="351.5" ></text>
</g>
<g >
<title>rcu_core (23,880,948 samples, 0.43%)</title><rect x="393.6" y="85" width="5.0" height="15.0" fill="rgb(253,19,0)" rx="2" ry="2" />
<text  x="396.56" y="95.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (75,265,931 samples, 1.34%)</title><rect x="410.4" y="245" width="15.9" height="15.0" fill="rgb(225,91,33)" rx="2" ry="2" />
<text  x="413.41" y="255.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (17,479,856 samples, 0.31%)</title><rect x="1065.7" y="453" width="3.7" height="15.0" fill="rgb(241,101,44)" rx="2" ry="2" />
<text  x="1068.70" y="463.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::call_element_destructor (23,600,968 samples, 0.42%)</title><rect x="257.5" y="405" width="5.0" height="15.0" fill="rgb(247,89,16)" rx="2" ry="2" />
<text  x="260.53" y="415.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (7,119,579 samples, 0.13%)</title><rect x="690.2" y="565" width="1.5" height="15.0" fill="rgb(247,118,10)" rx="2" ry="2" />
<text  x="693.17" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (37,640,327 samples, 0.67%)</title><rect x="550.9" y="453" width="7.9" height="15.0" fill="rgb(207,131,26)" rx="2" ry="2" />
<text  x="553.91" y="463.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (21,444,570 samples, 0.38%)</title><rect x="445.3" y="37" width="4.5" height="15.0" fill="rgb(210,118,11)" rx="2" ry="2" />
<text  x="448.30" y="47.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~variant (30,848,888 samples, 0.55%)</title><rect x="272.3" y="437" width="6.5" height="15.0" fill="rgb(209,69,39)" rx="2" ry="2" />
<text  x="275.32" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (18,691,847 samples, 0.33%)</title><rect x="198.8" y="373" width="4.0" height="15.0" fill="rgb(252,78,20)" rx="2" ry="2" />
<text  x="201.84" y="383.5" ></text>
</g>
<g >
<title>iox::popo::PublisherPortUser::hasSubscribers (7,094,367 samples, 0.13%)</title><rect x="690.2" y="357" width="1.5" height="15.0" fill="rgb(205,191,3)" rx="2" ry="2" />
<text  x="693.17" y="367.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (75,265,931 samples, 1.34%)</title><rect x="410.4" y="261" width="15.9" height="15.0" fill="rgb(254,33,46)" rx="2" ry="2" />
<text  x="413.41" y="271.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (92,238,925 samples, 1.65%)</title><rect x="183.3" y="437" width="19.5" height="15.0" fill="rgb(230,25,42)" rx="2" ry="2" />
<text  x="186.33" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt;@plt (14,430,120 samples, 0.26%)</title><rect x="566.1" y="453" width="3.0" height="15.0" fill="rgb(228,145,53)" rx="2" ry="2" />
<text  x="569.09" y="463.5" ></text>
</g>
<g >
<title>futex_wake (16,596,905 samples, 0.30%)</title><rect x="695.2" y="309" width="3.5" height="15.0" fill="rgb(210,166,14)" rx="2" ry="2" />
<text  x="698.23" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::internal::ReturnSuccess&lt;void&gt;::call&lt;iox::cxx::function_ref&lt;void  (66,207,828 samples, 1.18%)</title><rect x="1078.2" y="453" width="14.0" height="15.0" fill="rgb(215,87,51)" rx="2" ry="2" />
<text  x="1081.20" y="463.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleInterfaces (49,531,878 samples, 0.89%)</title><rect x="739.0" y="421" width="10.4" height="15.0" fill="rgb(239,18,9)" rx="2" ry="2" />
<text  x="741.95" y="431.5" ></text>
</g>
<g >
<title>__handle_domain_irq (17,420,382 samples, 0.31%)</title><rect x="275.2" y="389" width="3.6" height="15.0" fill="rgb(252,83,37)" rx="2" ry="2" />
<text  x="278.15" y="399.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::run (1,492,157,070 samples, 26.66%)</title><rect x="710.7" y="469" width="314.6" height="15.0" fill="rgb(252,143,6)" rx="2" ry="2" />
<text  x="713.72" y="479.5" >iox::roudi::ProcessManager::run</text>
</g>
<g >
<title>scm_stat_del (17,965,633 samples, 0.32%)</title><rect x="337.6" y="277" width="3.8" height="15.0" fill="rgb(243,38,19)" rx="2" ry="2" />
<text  x="340.65" y="287.5" ></text>
</g>
<g >
<title>__skb_wait_for_more_packets (13,780,814 samples, 0.25%)</title><rect x="334.7" y="277" width="2.9" height="15.0" fill="rgb(248,118,20)" rx="2" ry="2" />
<text  x="337.74" y="287.5" ></text>
</g>
<g >
<title>iox::posix::internal::createPosixCallBuilder&lt;int, int, int, int, void const*, unsigned int&gt;@plt (20,540,589 samples, 0.37%)</title><rect x="535.5" y="453" width="4.3" height="15.0" fill="rgb(214,166,33)" rx="2" ry="2" />
<text  x="538.46" y="463.5" ></text>
</g>
<g >
<title>sock_wfree (15,358,939 samples, 0.27%)</title><rect x="442.1" y="197" width="3.2" height="15.0" fill="rgb(231,73,11)" rx="2" ry="2" />
<text  x="445.07" y="207.5" ></text>
</g>
<g >
<title>Mon+Discover (1,833,160,897 samples, 32.76%)</title><rect x="691.7" y="629" width="386.5" height="15.0" fill="rgb(208,34,26)" rx="2" ry="2" />
<text  x="694.67" y="639.5" >Mon+Discover</text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long, int, void*, unsigned long, int, sockaddr*, unsigned int*&gt;::PosixCallBuilder (23,322,072 samples, 0.42%)</title><rect x="519.6" y="421" width="4.9" height="15.0" fill="rgb(209,131,3)" rx="2" ry="2" />
<text  x="522.56" y="431.5" ></text>
</g>
<g >
<title>iox::algorithm::doesContainValue&lt;long long&gt;@plt (19,039,662 samples, 0.34%)</title><rect x="628.7" y="405" width="4.0" height="15.0" fill="rgb(218,130,24)" rx="2" ry="2" />
<text  x="631.66" y="415.5" ></text>
</g>
<g >
<title>iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="485" width="3.2" height="15.0" fill="rgb(228,14,17)" rx="2" ry="2" />
<text  x="1095.16" y="495.5" ></text>
</g>
<g >
<title>_copy_to_iter (75,265,931 samples, 1.34%)</title><rect x="410.4" y="213" width="15.9" height="15.0" fill="rgb(253,31,7)" rx="2" ry="2" />
<text  x="413.41" y="223.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getNextIdx (40,816,773 samples, 0.73%)</title><rect x="130.3" y="405" width="8.6" height="15.0" fill="rgb(211,13,28)" rx="2" ry="2" />
<text  x="133.28" y="415.5" ></text>
</g>
<g >
<title>__arm64_sys_nanosleep (172,512,721 samples, 3.08%)</title><rect x="1029.3" y="357" width="36.4" height="15.0" fill="rgb(231,87,32)" rx="2" ry="2" />
<text  x="1032.32" y="367.5" >__a..</text>
</g>
<g >
<title>setsockopt (80,644,291 samples, 1.44%)</title><rect x="288.4" y="421" width="17.0" height="15.0" fill="rgb(211,219,10)" rx="2" ry="2" />
<text  x="291.43" y="431.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (21,829,108 samples, 0.39%)</title><rect x="673.8" y="469" width="4.6" height="15.0" fill="rgb(231,64,32)" rx="2" ry="2" />
<text  x="676.79" y="479.5" ></text>
</g>
<g >
<title>iox::popo::BasePort::BasePort (15,955,192 samples, 0.29%)</title><rect x="754.0" y="405" width="3.4" height="15.0" fill="rgb(225,79,16)" rx="2" ry="2" />
<text  x="757.04" y="415.5" ></text>
</g>
<g >
<title>iox::popo::BasePort::toBeDestroyed (87,951,137 samples, 1.57%)</title><rect x="757.4" y="405" width="18.5" height="15.0" fill="rgb(242,122,1)" rx="2" ry="2" />
<text  x="760.40" y="415.5" ></text>
</g>
<g >
<title>__arm64_sys_recvfrom (624,813,284 samples, 11.16%)</title><rect x="334.7" y="309" width="131.8" height="15.0" fill="rgb(253,11,31)" rx="2" ry="2" />
<text  x="337.74" y="319.5" >__arm64_sys_recv..</text>
</g>
<g >
<title>iox::roudi::PortManager::handleSubscriberPorts (796,186,946 samples, 14.23%)</title><rect x="818.2" y="421" width="167.9" height="15.0" fill="rgb(239,134,39)" rx="2" ry="2" />
<text  x="821.23" y="431.5" >iox::roudi::PortManag..</text>
</g>
<g >
<title>iox::runtime::IpcMessage::setMessage (40,416,647 samples, 0.72%)</title><rect x="183.3" y="357" width="8.6" height="15.0" fill="rgb(206,59,9)" rx="2" ry="2" />
<text  x="186.33" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (20,075,101 samples, 0.36%)</title><rect x="662.2" y="469" width="4.2" height="15.0" fill="rgb(213,226,46)" rx="2" ry="2" />
<text  x="665.15" y="479.5" ></text>
</g>
<g >
<title>rcu_core (25,090,858 samples, 0.45%)</title><rect x="401.7" y="149" width="5.3" height="15.0" fill="rgb(221,14,45)" rx="2" ry="2" />
<text  x="404.74" y="159.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getDataPtrFromIdx@plt (20,457,625 samples, 0.37%)</title><rect x="120.8" y="405" width="4.3" height="15.0" fill="rgb(253,160,5)" rx="2" ry="2" />
<text  x="123.80" y="415.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (13,332,788 samples, 0.24%)</title><rect x="302.6" y="293" width="2.8" height="15.0" fill="rgb(225,100,7)" rx="2" ry="2" />
<text  x="305.62" y="303.5" ></text>
</g>
<g >
<title>iox::roudi::PortIntrospection&lt;iox::popo::PublisherPortUser, iox::popo::SubscriberPortUser&gt;::send (66,207,828 samples, 1.18%)</title><rect x="1078.2" y="373" width="14.0" height="15.0" fill="rgb(246,137,2)" rx="2" ry="2" />
<text  x="1081.20" y="383.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;int&gt;::max@plt (17,076,725 samples, 0.31%)</title><rect x="653.1" y="453" width="3.6" height="15.0" fill="rgb(221,111,28)" rx="2" ry="2" />
<text  x="656.09" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (3,225,869,652 samples, 57.64%)</title><rect x="10.0" y="501" width="680.2" height="15.0" fill="rgb(208,38,19)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>iox::runtime::stringToIpcMessageType (403,350,466 samples, 7.21%)</title><rect x="577.1" y="469" width="85.1" height="15.0" fill="rgb(212,190,2)" rx="2" ry="2" />
<text  x="580.10" y="479.5" >iox::runti..</text>
</g>
<g >
<title>std::__invoke&lt;void  (7,119,579 samples, 0.13%)</title><rect x="690.2" y="517" width="1.5" height="15.0" fill="rgb(209,29,18)" rx="2" ry="2" />
<text  x="693.17" y="527.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleClientPorts (17,091,823 samples, 0.31%)</title><rect x="718.7" y="421" width="3.6" height="15.0" fill="rgb(231,179,14)" rx="2" ry="2" />
<text  x="721.73" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::internal::call_at_index&lt;0ul, iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::destructor (19,952,927 samples, 0.36%)</title><rect x="253.3" y="405" width="4.2" height="15.0" fill="rgb(240,225,45)" rx="2" ry="2" />
<text  x="256.32" y="415.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (16,582,023 samples, 0.30%)</title><rect x="46.5" y="389" width="3.5" height="15.0" fill="rgb(245,28,41)" rx="2" ry="2" />
<text  x="49.49" y="399.5" ></text>
</g>
<g >
<title>kfree_skbmem (20,259,956 samples, 0.36%)</title><rect x="456.5" y="245" width="4.3" height="15.0" fill="rgb(207,27,13)" rx="2" ry="2" />
<text  x="459.52" y="255.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (7,094,367 samples, 0.13%)</title><rect x="690.2" y="421" width="1.5" height="15.0" fill="rgb(254,18,26)" rx="2" ry="2" />
<text  x="693.17" y="431.5" ></text>
</g>
<g >
<title>skb_release_data (37,226,616 samples, 0.67%)</title><rect x="434.2" y="213" width="7.9" height="15.0" fill="rgb(247,57,47)" rx="2" ry="2" />
<text  x="437.22" y="223.5" ></text>
</g>
<g >
<title>gic_handle_irq (21,472,892 samples, 0.38%)</title><rect x="504.7" y="405" width="4.6" height="15.0" fill="rgb(207,69,9)" rx="2" ry="2" />
<text  x="507.74" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::~expected (21,575,318 samples, 0.39%)</title><rect x="221.4" y="453" width="4.6" height="15.0" fill="rgb(235,205,31)" rx="2" ry="2" />
<text  x="224.42" y="463.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (3,225,869,652 samples, 57.64%)</title><rect x="10.0" y="597" width="680.2" height="15.0" fill="rgb(246,108,14)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >[libpthread-2.30.so]</text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;long&gt;::PosixCallVerificator@plt (29,800,774 samples, 0.53%)</title><rect x="509.3" y="437" width="6.3" height="15.0" fill="rgb(221,216,40)" rx="2" ry="2" />
<text  x="512.27" y="447.5" ></text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::Proxy::Proxy (22,938,336 samples, 0.41%)</title><rect x="31.6" y="453" width="4.9" height="15.0" fill="rgb(216,158,52)" rx="2" ry="2" />
<text  x="34.63" y="463.5" ></text>
</g>
<g >
<title>run_timer_softirq (21,472,892 samples, 0.38%)</title><rect x="504.7" y="357" width="4.6" height="15.0" fill="rgb(237,192,20)" rx="2" ry="2" />
<text  x="507.74" y="367.5" ></text>
</g>
<g >
<title>iox_recvfrom (773,687,957 samples, 13.82%)</title><rect x="316.6" y="421" width="163.2" height="15.0" fill="rgb(247,71,43)" rx="2" ry="2" />
<text  x="319.62" y="431.5" >iox_recvfrom</text>
</g>
<g >
<title>rebalance_domains (21,444,570 samples, 0.38%)</title><rect x="445.3" y="69" width="4.5" height="15.0" fill="rgb(225,59,21)" rx="2" ry="2" />
<text  x="448.30" y="79.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (32,002,438 samples, 0.57%)</title><rect x="54.5" y="405" width="6.7" height="15.0" fill="rgb(245,34,28)" rx="2" ry="2" />
<text  x="57.48" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::posix::PosixCallResult&lt;int&gt;&amp;&gt;@plt (17,965,633 samples, 0.32%)</title><rect x="484.9" y="421" width="3.8" height="15.0" fill="rgb(239,39,46)" rx="2" ry="2" />
<text  x="487.87" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::string&lt;100ul&gt;::operator==&lt;100ul&gt; (51,677,881 samples, 0.92%)</title><rect x="153.2" y="421" width="10.9" height="15.0" fill="rgb(239,143,33)" rx="2" ry="2" />
<text  x="156.20" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (7,119,579 samples, 0.13%)</title><rect x="690.2" y="581" width="1.5" height="15.0" fill="rgb(217,206,54)" rx="2" ry="2" />
<text  x="693.17" y="591.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;long&gt;::evaluate (55,764,390 samples, 1.00%)</title><rect x="488.7" y="437" width="11.7" height="15.0" fill="rgb(211,136,9)" rx="2" ry="2" />
<text  x="491.65" y="447.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::~variant (21,107,813 samples, 0.38%)</title><rect x="582.5" y="421" width="4.5" height="15.0" fill="rgb(247,79,8)" rx="2" ry="2" />
<text  x="585.50" y="431.5" ></text>
</g>
<g >
<title>skb_free_head (17,492,035 samples, 0.31%)</title><rect x="438.4" y="197" width="3.7" height="15.0" fill="rgb(254,199,25)" rx="2" ry="2" />
<text  x="441.38" y="207.5" ></text>
</g>
<g >
<title>el0_sync (624,813,284 samples, 11.16%)</title><rect x="334.7" y="389" width="131.8" height="15.0" fill="rgb(234,219,9)" rx="2" ry="2" />
<text  x="337.74" y="399.5" >el0_sync</text>
</g>
<g >
<title>std::numeric_limits&lt;int&gt;::max (44,574,274 samples, 0.80%)</title><rect x="643.7" y="453" width="9.4" height="15.0" fill="rgb(243,187,50)" rx="2" ry="2" />
<text  x="646.69" y="463.5" ></text>
</g>
<g >
<title>iox::cxx::convert::fromString&lt;int&gt; (22,043,775 samples, 0.39%)</title><rect x="10.0" y="469" width="4.6" height="15.0" fill="rgb(219,149,41)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>__skb_wait_for_more_packets (219,957,857 samples, 3.93%)</title><rect x="352.2" y="261" width="46.4" height="15.0" fill="rgb(236,114,42)" rx="2" ry="2" />
<text  x="355.22" y="271.5" >__sk..</text>
</g>
<g >
<title>_raw_spin_unlock_irq (99,826,562 samples, 1.78%)</title><rect x="377.5" y="197" width="21.1" height="15.0" fill="rgb(207,79,54)" rx="2" ry="2" />
<text  x="380.55" y="207.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, int, timespec*&gt;::operator (15,157,097 samples, 0.27%)</title><rect x="1092.2" y="453" width="3.2" height="15.0" fill="rgb(210,149,24)" rx="2" ry="2" />
<text  x="1095.16" y="463.5" ></text>
</g>
<g >
<title>schedule_timeout (151,567,381 samples, 2.71%)</title><rect x="366.6" y="245" width="32.0" height="15.0" fill="rgb(222,215,26)" rx="2" ry="2" />
<text  x="369.64" y="255.5" >sc..</text>
</g>
<g >
<title>[libc-2.30.so] (66,211,107 samples, 1.18%)</title><rect x="1078.2" y="613" width="14.0" height="15.0" fill="rgb(223,171,7)" rx="2" ry="2" />
<text  x="1081.20" y="623.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (25,090,858 samples, 0.45%)</title><rect x="401.7" y="133" width="5.3" height="15.0" fill="rgb(215,103,38)" rx="2" ry="2" />
<text  x="404.74" y="143.5" ></text>
</g>
<g >
<title>iox::popo::ThreadSafePolicy::lock (7,094,367 samples, 0.13%)</title><rect x="690.2" y="309" width="1.5" height="15.0" fill="rgb(237,93,28)" rx="2" ry="2" />
<text  x="693.17" y="319.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (43,104,877 samples, 0.77%)</title><rect x="695.2" y="437" width="9.1" height="15.0" fill="rgb(215,197,17)" rx="2" ry="2" />
<text  x="698.23" y="447.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::expected (38,345,694 samples, 0.69%)</title><rect x="488.7" y="421" width="8.0" height="15.0" fill="rgb(211,228,47)" rx="2" ry="2" />
<text  x="491.65" y="431.5" ></text>
</g>
<g >
<title>unix_destruct_scm (53,194,894 samples, 0.95%)</title><rect x="445.3" y="197" width="11.2" height="15.0" fill="rgb(235,56,49)" rx="2" ry="2" />
<text  x="448.30" y="207.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;long&gt;::failureReturnValue&lt;int&gt; (18,994,152 samples, 0.34%)</title><rect x="515.6" y="437" width="4.0" height="15.0" fill="rgb(251,201,8)" rx="2" ry="2" />
<text  x="518.55" y="447.5" ></text>
</g>
<g >
<title>el0_svc (172,512,721 samples, 3.08%)</title><rect x="1029.3" y="405" width="36.4" height="15.0" fill="rgb(207,186,5)" rx="2" ry="2" />
<text  x="1032.32" y="415.5" >el0..</text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator++@plt (16,337,280 samples, 0.29%)</title><rect x="80.2" y="437" width="3.4" height="15.0" fill="rgb(208,229,37)" rx="2" ry="2" />
<text  x="83.15" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (25,090,858 samples, 0.45%)</title><rect x="401.7" y="117" width="5.3" height="15.0" fill="rgb(252,54,35)" rx="2" ry="2" />
<text  x="404.74" y="127.5" ></text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::setMessageFromString (73,547,078 samples, 1.31%)</title><rect x="183.3" y="373" width="15.5" height="15.0" fill="rgb(234,192,3)" rx="2" ry="2" />
<text  x="186.33" y="383.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (75,265,931 samples, 1.34%)</title><rect x="410.4" y="229" width="15.9" height="15.0" fill="rgb(242,42,20)" rx="2" ry="2" />
<text  x="413.41" y="239.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getSubscriberPortDataList (652,014,376 samples, 11.65%)</title><rect x="848.6" y="405" width="137.5" height="15.0" fill="rgb(217,204,44)" rx="2" ry="2" />
<text  x="851.63" y="415.5" >iox::roudi::PortP..</text>
</g>
<g >
<title>memcg_slab_free_hook (17,492,035 samples, 0.31%)</title><rect x="438.4" y="165" width="3.7" height="15.0" fill="rgb(207,74,23)" rx="2" ry="2" />
<text  x="441.38" y="175.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::begin (40,816,773 samples, 0.73%)</title><rect x="130.3" y="421" width="8.6" height="15.0" fill="rgb(227,117,40)" rx="2" ry="2" />
<text  x="133.28" y="431.5" ></text>
</g>
<g >
<title>iox::cxx::convert::fromString&lt;int&gt; (270,965,724 samples, 4.84%)</title><rect x="582.5" y="453" width="57.1" height="15.0" fill="rgb(206,26,50)" rx="2" ry="2" />
<text  x="585.50" y="463.5" >iox::c..</text>
</g>
<g >
<title>iox::roudi::PortIntrospection&lt;iox::popo::PublisherPortUser, iox::popo::SubscriberPortUser&gt;::sendSubscriberPortsData (65,841,340 samples, 1.18%)</title><rect x="1078.2" y="357" width="13.9" height="15.0" fill="rgb(254,168,30)" rx="2" ry="2" />
<text  x="1081.20" y="367.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="517" width="3.2" height="15.0" fill="rgb(218,192,35)" rx="2" ry="2" />
<text  x="1095.16" y="527.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::value@plt (16,063,188 samples, 0.29%)</title><rect x="218.0" y="453" width="3.4" height="15.0" fill="rgb(214,222,7)" rx="2" ry="2" />
<text  x="221.03" y="463.5" ></text>
</g>
<g >
<title>std::move&lt;iox::posix::PosixCallResult&lt;long long&gt;&amp;&gt;@plt (51,278,271 samples, 0.92%)</title><rect x="617.9" y="421" width="10.8" height="15.0" fill="rgb(253,179,50)" rx="2" ry="2" />
<text  x="620.85" y="431.5" ></text>
</g>
<g >
<title>kfree_skb (16,020,032 samples, 0.29%)</title><rect x="407.0" y="261" width="3.4" height="15.0" fill="rgb(221,133,5)" rx="2" ry="2" />
<text  x="410.03" y="271.5" ></text>
</g>
<g >
<title>iox::runtime::IpcMessage::~IpcMessage (15,281,516 samples, 0.27%)</title><rect x="683.2" y="485" width="3.3" height="15.0" fill="rgb(226,17,53)" rx="2" ry="2" />
<text  x="686.23" y="495.5" ></text>
</g>
<g >
<title>iox::roudi::RouDi::processRuntimeMessages (3,170,016,843 samples, 56.64%)</title><rect x="10.0" y="485" width="668.4" height="15.0" fill="rgb(213,4,32)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >iox::roudi::RouDi::processRuntimeMessages</text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;long&gt;::PosixCallVerificator (21,472,892 samples, 0.38%)</title><rect x="504.7" y="437" width="4.6" height="15.0" fill="rgb(228,22,39)" rx="2" ry="2" />
<text  x="507.74" y="447.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="613" width="3.2" height="15.0" fill="rgb(209,163,10)" rx="2" ry="2" />
<text  x="1095.16" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (33,717,522 samples, 0.60%)</title><rect x="543.8" y="453" width="7.1" height="15.0" fill="rgb(234,167,25)" rx="2" ry="2" />
<text  x="546.80" y="463.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~expected (91,309,994 samples, 1.63%)</title><rect x="243.3" y="437" width="19.2" height="15.0" fill="rgb(253,146,54)" rx="2" ry="2" />
<text  x="246.25" y="447.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (66,207,828 samples, 1.18%)</title><rect x="1078.2" y="421" width="14.0" height="15.0" fill="rgb(212,1,40)" rx="2" ry="2" />
<text  x="1081.20" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::posix::PosixCallResult&lt;long&gt; &gt;@plt (21,863,947 samples, 0.39%)</title><rect x="492.1" y="405" width="4.6" height="15.0" fill="rgb(240,21,33)" rx="2" ry="2" />
<text  x="495.13" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::~expected (28,305,565 samples, 0.51%)</title><rect x="262.5" y="437" width="6.0" height="15.0" fill="rgb(232,173,13)" rx="2" ry="2" />
<text  x="265.50" y="447.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (23,737,452 samples, 0.42%)</title><rect x="429.2" y="181" width="5.0" height="15.0" fill="rgb(224,63,12)" rx="2" ry="2" />
<text  x="432.21" y="191.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool@plt (21,397,360 samples, 0.38%)</title><rect x="1073.7" y="485" width="4.5" height="15.0" fill="rgb(225,107,4)" rx="2" ry="2" />
<text  x="1076.68" y="495.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (15,545,591 samples, 0.28%)</title><rect x="1092.2" y="565" width="3.2" height="15.0" fill="rgb(254,122,12)" rx="2" ry="2" />
<text  x="1095.16" y="575.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::doDiscoveryForSubscriberPort (41,814,361 samples, 0.75%)</title><rect x="839.8" y="405" width="8.8" height="15.0" fill="rgb(216,113,38)" rx="2" ry="2" />
<text  x="842.81" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (16,608,574 samples, 0.30%)</title><rect x="562.6" y="453" width="3.5" height="15.0" fill="rgb(235,198,24)" rx="2" ry="2" />
<text  x="565.59" y="463.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator++ (16,822,972 samples, 0.30%)</title><rect x="1012.6" y="437" width="3.5" height="15.0" fill="rgb(229,46,34)" rx="2" ry="2" />
<text  x="1015.56" y="447.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (624,813,284 samples, 11.16%)</title><rect x="334.7" y="325" width="131.8" height="15.0" fill="rgb(208,19,27)" rx="2" ry="2" />
<text  x="337.74" y="335.5" >el0_svc_common.c..</text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::isInvalidIterator (17,491,050 samples, 0.31%)</title><rect x="997.0" y="405" width="3.7" height="15.0" fill="rgb(210,219,16)" rx="2" ry="2" />
<text  x="1000.00" y="415.5" ></text>
</g>
<g >
<title>schedule (53,950,484 samples, 0.96%)</title><rect x="1054.3" y="309" width="11.4" height="15.0" fill="rgb(217,198,16)" rx="2" ry="2" />
<text  x="1057.32" y="319.5" ></text>
</g>
<g >
<title>iox::roudi::FixedPositionContainer&lt;iox::popo::InterfacePortData, 4ul&gt;::content@plt (18,948,764 samples, 0.34%)</title><rect x="739.0" y="405" width="3.9" height="15.0" fill="rgb(218,210,34)" rx="2" ry="2" />
<text  x="741.95" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (448,495,157 samples, 8.01%)</title><rect x="1095.4" y="581" width="94.6" height="15.0" fill="rgb(244,4,53)" rx="2" ry="2" />
<text  x="1098.43" y="591.5" >[libstdc++...</text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load@plt (24,408,020 samples, 0.44%)</title><rect x="843.5" y="389" width="5.1" height="15.0" fill="rgb(245,113,53)" rx="2" ry="2" />
<text  x="846.48" y="399.5" ></text>
</g>
<g >
<title>__handle_domain_irq (25,090,858 samples, 0.45%)</title><rect x="401.7" y="213" width="5.3" height="15.0" fill="rgb(215,25,20)" rx="2" ry="2" />
<text  x="404.74" y="223.5" ></text>
</g>
<g >
<title>std::this_thread::sleep_for&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (229,287,593 samples, 4.10%)</title><rect x="1025.3" y="469" width="48.4" height="15.0" fill="rgb(236,107,8)" rx="2" ry="2" />
<text  x="1028.34" y="479.5" >std:..</text>
</g>
<g >
<title>irq_exit (21,444,570 samples, 0.38%)</title><rect x="445.3" y="117" width="4.5" height="15.0" fill="rgb(205,15,27)" rx="2" ry="2" />
<text  x="448.30" y="127.5" ></text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::timedReceive (1,856,950,075 samples, 33.18%)</title><rect x="171.1" y="469" width="391.5" height="15.0" fill="rgb(224,107,47)" rx="2" ry="2" />
<text  x="174.05" y="479.5" >iox::runtime::IpcInterfaceBase::timedReceive</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (1,833,160,897 samples, 32.76%)</title><rect x="691.7" y="501" width="386.5" height="15.0" fill="rgb(250,43,9)" rx="2" ry="2" />
<text  x="694.67" y="511.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::expected (24,240,307 samples, 0.43%)</title><rect x="479.8" y="421" width="5.1" height="15.0" fill="rgb(242,199,5)" rx="2" ry="2" />
<text  x="482.75" y="431.5" ></text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::timedReceive@plt (22,913,352 samples, 0.41%)</title><rect x="678.4" y="485" width="4.8" height="15.0" fill="rgb(220,0,0)" rx="2" ry="2" />
<text  x="681.40" y="495.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator!=&lt;false&gt; (57,621,879 samples, 1.03%)</title><rect x="108.7" y="421" width="12.1" height="15.0" fill="rgb(253,150,51)" rx="2" ry="2" />
<text  x="111.65" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (118,562,237 samples, 2.12%)</title><rect x="1029.3" y="309" width="25.0" height="15.0" fill="rgb(231,104,36)" rx="2" ry="2" />
<text  x="1032.32" y="319.5" >_..</text>
</g>
<g >
<title>iox::roudi::ProcessManager::updateLivelinessOfProcess (450,544,087 samples, 8.05%)</title><rect x="76.1" y="453" width="95.0" height="15.0" fill="rgb(236,134,1)" rx="2" ry="2" />
<text  x="79.06" y="463.5" >iox::roudi:..</text>
</g>
<g >
<title>kmem_cache_free (23,737,452 samples, 0.42%)</title><rect x="429.2" y="213" width="5.0" height="15.0" fill="rgb(218,0,30)" rx="2" ry="2" />
<text  x="432.21" y="223.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (13,428,506 samples, 0.24%)</title><rect x="226.0" y="453" width="2.8" height="15.0" fill="rgb(219,13,10)" rx="2" ry="2" />
<text  x="228.96" y="463.5" ></text>
</g>
<g >
<title>std::__count_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;iox::runtime::IpcMessage::setMessage (23,616,236 samples, 0.42%)</title><rect x="186.9" y="325" width="5.0" height="15.0" fill="rgb(245,76,37)" rx="2" ry="2" />
<text  x="189.87" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::and_then@plt (47,968,578 samples, 0.86%)</title><rect x="14.6" y="469" width="10.2" height="15.0" fill="rgb(219,119,28)" rx="2" ry="2" />
<text  x="17.65" y="479.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::run@plt (16,810,831 samples, 0.30%)</title><rect x="691.7" y="485" width="3.5" height="15.0" fill="rgb(225,54,36)" rx="2" ry="2" />
<text  x="694.69" y="495.5" ></text>
</g>
<g >
<title>iox::cxx::internal::methodCallbackCaller&lt;void, iox::roudi::MemPoolIntrospection&lt;iox::mepoo::MemoryManager, iox::mepoo::SegmentManager&lt;iox::mepoo::MePooSegment&lt;iox::posix::SharedMemoryObject, iox::mepoo::MemoryManager&gt; &gt;, iox::popo::PublisherPortUser&gt;&gt; (7,094,367 samples, 0.13%)</title><rect x="690.2" y="389" width="1.5" height="15.0" fill="rgb(250,207,41)" rx="2" ry="2" />
<text  x="693.17" y="399.5" ></text>
</g>
<g >
<title>el0_sync (16,582,023 samples, 0.30%)</title><rect x="46.5" y="373" width="3.5" height="15.0" fill="rgb(238,110,26)" rx="2" ry="2" />
<text  x="49.49" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::InterfacePortData*, 4ul&gt;::size@plt (17,479,856 samples, 0.31%)</title><rect x="710.7" y="421" width="3.7" height="15.0" fill="rgb(205,48,23)" rx="2" ry="2" />
<text  x="713.72" y="431.5" ></text>
</g>
<g >
<title>do_el0_svc (43,104,877 samples, 0.77%)</title><rect x="695.2" y="373" width="9.1" height="15.0" fill="rgb(235,205,38)" rx="2" ry="2" />
<text  x="698.23" y="383.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::monitorProcesses (153,952,574 samples, 2.75%)</title><rect x="992.9" y="453" width="32.4" height="15.0" fill="rgb(223,180,25)" rx="2" ry="2" />
<text  x="995.88" y="463.5" >io..</text>
</g>
<g >
<title>iox::cxx::MethodCallback&lt;void&gt;::operator (66,207,828 samples, 1.18%)</title><rect x="1078.2" y="469" width="14.0" height="15.0" fill="rgb(227,180,53)" rx="2" ry="2" />
<text  x="1081.20" y="479.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::call_element_destructor@plt (31,179,964 samples, 0.56%)</title><rect x="243.3" y="421" width="6.5" height="15.0" fill="rgb(235,107,21)" rx="2" ry="2" />
<text  x="246.25" y="431.5" ></text>
</g>
<g >
<title>hash_futex (26,507,972 samples, 0.47%)</title><rect x="698.7" y="309" width="5.6" height="15.0" fill="rgb(235,182,3)" rx="2" ry="2" />
<text  x="701.73" y="319.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (172,512,721 samples, 3.08%)</title><rect x="1029.3" y="373" width="36.4" height="15.0" fill="rgb(210,154,34)" rx="2" ry="2" />
<text  x="1032.32" y="383.5" >el0..</text>
</g>
<g >
<title>iox::units::Duration::operator timeval (18,992,391 samples, 0.34%)</title><rect x="539.8" y="453" width="4.0" height="15.0" fill="rgb(242,20,46)" rx="2" ry="2" />
<text  x="542.79" y="463.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (448,495,157 samples, 8.01%)</title><rect x="1095.4" y="533" width="94.6" height="15.0" fill="rgb(210,10,38)" rx="2" ry="2" />
<text  x="1098.43" y="543.5" >std::thread..</text>
</g>
<g >
<title>iox::posix::PosixCallResult&lt;long&gt;::PosixCallResult@plt (23,322,072 samples, 0.42%)</title><rect x="519.6" y="405" width="4.9" height="15.0" fill="rgb(250,191,8)" rx="2" ry="2" />
<text  x="522.56" y="415.5" ></text>
</g>
<g >
<title>PortIntr (66,211,107 samples, 1.18%)</title><rect x="1078.2" y="629" width="14.0" height="15.0" fill="rgb(216,211,11)" rx="2" ry="2" />
<text  x="1081.20" y="639.5" ></text>
</g>
</g>
</svg>
