<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>__softirqentry_text_start (17,457,655 samples, 0.19%)</title><rect x="910.4" y="229" width="2.2" height="15.0" fill="rgb(240,173,8)" rx="2" ry="2" />
<text  x="913.36" y="239.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (34,096,903 samples, 0.36%)</title><rect x="1158.9" y="437" width="4.2" height="15.0" fill="rgb(221,8,20)" rx="2" ry="2" />
<text  x="1161.87" y="447.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::call_element_destructor@plt (42,360,479 samples, 0.45%)</title><rect x="192.9" y="357" width="5.3" height="15.0" fill="rgb(251,101,18)" rx="2" ry="2" />
<text  x="195.90" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::begin (24,047,459 samples, 0.26%)</title><rect x="57.0" y="357" width="3.0" height="15.0" fill="rgb(206,67,12)" rx="2" ry="2" />
<text  x="60.00" y="367.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (16,310,188 samples, 0.17%)</title><rect x="737.2" y="325" width="2.0" height="15.0" fill="rgb(254,151,17)" rx="2" ry="2" />
<text  x="740.18" y="335.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;long&gt;::evaluate (112,815,867 samples, 1.20%)</title><rect x="485.8" y="357" width="14.1" height="15.0" fill="rgb(225,90,21)" rx="2" ry="2" />
<text  x="488.79" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (52,488,182 samples, 0.56%)</title><rect x="394.4" y="181" width="6.6" height="15.0" fill="rgb(245,129,13)" rx="2" ry="2" />
<text  x="397.43" y="191.5" ></text>
</g>
<g >
<title>iox::posix::internal::PosixCallDetails&lt;long&gt;::PosixCallDetails@plt (17,984,284 samples, 0.19%)</title><rect x="511.9" y="341" width="2.3" height="15.0" fill="rgb(220,14,44)" rx="2" ry="2" />
<text  x="514.92" y="351.5" ></text>
</g>
<g >
<title>ProcessIntr (34,096,903 samples, 0.36%)</title><rect x="1158.9" y="549" width="4.2" height="15.0" fill="rgb(230,109,0)" rx="2" ry="2" />
<text  x="1161.87" y="559.5" ></text>
</g>
<g >
<title>xxxIPC-msg-process (214,180,480 samples, 2.28%)</title><rect x="1163.1" y="549" width="26.9" height="15.0" fill="rgb(214,66,24)" rx="2" ry="2" />
<text  x="1166.15" y="559.5" >x..</text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::expected (53,341,204 samples, 0.57%)</title><rect x="463.8" y="341" width="6.7" height="15.0" fill="rgb(231,49,30)" rx="2" ry="2" />
<text  x="466.83" y="351.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long, int, void*, unsigned long, int, sockaddr*, unsigned int*&gt;::operator (1,163,103,410 samples, 12.36%)</title><rect x="318.0" y="357" width="145.8" height="15.0" fill="rgb(243,39,38)" rx="2" ry="2" />
<text  x="321.01" y="367.5" >iox::posix::PosixC..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign@plt (20,912,349 samples, 0.22%)</title><rect x="151.5" y="261" width="2.6" height="15.0" fill="rgb(228,48,5)" rx="2" ry="2" />
<text  x="154.50" y="271.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (298,039,047 samples, 3.17%)</title><rect x="151.5" y="341" width="37.4" height="15.0" fill="rgb(222,7,41)" rx="2" ry="2" />
<text  x="154.50" y="351.5" >iox..</text>
</g>
<g >
<title>iox::roudi::PortManager::doDiscoveryForPublisherPort (127,345,393 samples, 1.35%)</title><rect x="844.3" y="325" width="15.9" height="15.0" fill="rgb(250,117,4)" rx="2" ry="2" />
<text  x="847.28" y="335.5" ></text>
</g>
<g >
<title>work_pending (40,646,368 samples, 0.43%)</title><rect x="456.0" y="309" width="5.1" height="15.0" fill="rgb(215,90,50)" rx="2" ry="2" />
<text  x="459.01" y="319.5" ></text>
</g>
<g >
<title>del_timer_sync (74,923,724 samples, 0.80%)</title><rect x="375.4" y="149" width="9.4" height="15.0" fill="rgb(240,60,6)" rx="2" ry="2" />
<text  x="378.42" y="159.5" ></text>
</g>
<g >
<title>sock_wfree (97,004,006 samples, 1.03%)</title><rect x="427.1" y="101" width="12.2" height="15.0" fill="rgb(209,94,35)" rx="2" ry="2" />
<text  x="430.12" y="111.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::posix::PosixCallResult&lt;long long&gt; &gt;@plt (35,898,232 samples, 0.38%)</title><rect x="623.0" y="325" width="4.5" height="15.0" fill="rgb(212,99,8)" rx="2" ry="2" />
<text  x="625.97" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (95,429,546 samples, 1.01%)</title><rect x="409.3" y="133" width="11.9" height="15.0" fill="rgb(244,31,28)" rx="2" ry="2" />
<text  x="412.28" y="143.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (21,993,200 samples, 0.23%)</title><rect x="1117.6" y="373" width="2.7" height="15.0" fill="rgb(219,126,21)" rx="2" ry="2" />
<text  x="1120.58" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator!=&lt;false&gt; (57,645,088 samples, 0.61%)</title><rect x="1102.5" y="357" width="7.2" height="15.0" fill="rgb(243,74,53)" rx="2" ry="2" />
<text  x="1105.47" y="367.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (160,435,185 samples, 1.70%)</title><rect x="1138.8" y="453" width="20.1" height="15.0" fill="rgb(208,162,53)" rx="2" ry="2" />
<text  x="1141.76" y="463.5" ></text>
</g>
<g >
<title>__nanosleep (115,439,055 samples, 1.23%)</title><rect x="1122.2" y="373" width="14.5" height="15.0" fill="rgb(206,227,1)" rx="2" ry="2" />
<text  x="1125.21" y="383.5" ></text>
</g>
<g >
<title>std::atomic&lt;iox::SubscribeState&gt;::operator iox::SubscribeState (140,402,122 samples, 1.49%)</title><rect x="1141.2" y="229" width="17.6" height="15.0" fill="rgb(216,30,15)" rx="2" ry="2" />
<text  x="1144.22" y="239.5" ></text>
</g>
<g >
<title>iox::popo::PublisherPortRouDi::PublisherPortRouDi (16,066,575 samples, 0.17%)</title><rect x="837.9" y="325" width="2.0" height="15.0" fill="rgb(244,213,24)" rx="2" ry="2" />
<text  x="840.85" y="335.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;int&gt;::evaluate (67,680,144 samples, 0.72%)</title><rect x="463.8" y="357" width="8.5" height="15.0" fill="rgb(215,115,15)" rx="2" ry="2" />
<text  x="466.83" y="367.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (214,180,480 samples, 2.28%)</title><rect x="1163.1" y="453" width="26.9" height="15.0" fill="rgb(242,116,19)" rx="2" ry="2" />
<text  x="1166.15" y="463.5" >s..</text>
</g>
<g >
<title>[libpthread-2.30.so] (5,633,862,122 samples, 59.86%)</title><rect x="10.0" y="517" width="706.4" height="15.0" fill="rgb(239,74,7)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >[libpthread-2.30.so]</text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::cxx::optional&lt;iox::runtime::NodeData&gt;, 1000ul&gt;::end (20,872,049 samples, 0.22%)</title><rect x="790.3" y="309" width="2.6" height="15.0" fill="rgb(237,210,18)" rx="2" ry="2" />
<text  x="793.27" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::posix::PosixCallResult&lt;int&gt; &gt; (15,286,694 samples, 0.16%)</title><rect x="463.8" y="325" width="2.0" height="15.0" fill="rgb(205,83,42)" rx="2" ry="2" />
<text  x="466.83" y="335.5" ></text>
</g>
<g >
<title>__arch_copy_to_user (51,995,344 samples, 0.55%)</title><rect x="402.8" y="117" width="6.5" height="15.0" fill="rgb(227,174,52)" rx="2" ry="2" />
<text  x="405.77" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (89,976,523 samples, 0.96%)</title><rect x="560.5" y="373" width="11.3" height="15.0" fill="rgb(239,123,34)" rx="2" ry="2" />
<text  x="563.52" y="383.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (17,529,499 samples, 0.19%)</title><rect x="36.8" y="325" width="2.2" height="15.0" fill="rgb(221,223,32)" rx="2" ry="2" />
<text  x="39.80" y="335.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;int&gt;::min@plt (16,561,384 samples, 0.18%)</title><rect x="666.1" y="373" width="2.0" height="15.0" fill="rgb(223,64,19)" rx="2" ry="2" />
<text  x="669.06" y="383.5" ></text>
</g>
<g >
<title>recvfrom@plt (21,740,091 samples, 0.23%)</title><rect x="461.1" y="341" width="2.7" height="15.0" fill="rgb(232,119,45)" rx="2" ry="2" />
<text  x="464.11" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::and_then (103,405,054 samples, 1.10%)</title><rect x="60.0" y="357" width="13.0" height="15.0" fill="rgb(217,199,32)" rx="2" ry="2" />
<text  x="63.02" y="367.5" ></text>
</g>
<g >
<title>do_notify_resume (40,646,368 samples, 0.43%)</title><rect x="456.0" y="293" width="5.1" height="15.0" fill="rgb(221,98,40)" rx="2" ry="2" />
<text  x="459.01" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator*@plt (31,951,079 samples, 0.34%)</title><rect x="170.2" y="229" width="4.0" height="15.0" fill="rgb(238,64,1)" rx="2" ry="2" />
<text  x="173.23" y="239.5" ></text>
</g>
<g >
<title>rcu_core_si (19,766,120 samples, 0.21%)</title><rect x="1093.0" y="261" width="2.5" height="15.0" fill="rgb(248,214,29)" rx="2" ry="2" />
<text  x="1096.03" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (42,033,340 samples, 0.45%)</title><rect x="128.7" y="325" width="5.3" height="15.0" fill="rgb(247,92,28)" rx="2" ry="2" />
<text  x="131.73" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~expected (33,795,242 samples, 0.36%)</title><rect x="141.3" y="373" width="4.3" height="15.0" fill="rgb(205,31,9)" rx="2" ry="2" />
<text  x="144.34" y="383.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (3,361,410,379 samples, 35.72%)</title><rect x="717.3" y="517" width="421.5" height="15.0" fill="rgb(216,150,43)" rx="2" ry="2" />
<text  x="720.32" y="527.5" >[libpthread-2.30.so]</text>
</g>
<g >
<title>iox::roudi::RouDi::cyclicUpdateHook (15,053,970 samples, 0.16%)</title><rect x="717.3" y="405" width="1.9" height="15.0" fill="rgb(218,55,30)" rx="2" ry="2" />
<text  x="720.32" y="415.5" ></text>
</g>
<g >
<title>operator new@plt (27,286,349 samples, 0.29%)</title><rect x="619.6" y="309" width="3.4" height="15.0" fill="rgb(242,210,37)" rx="2" ry="2" />
<text  x="622.55" y="319.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;long long&gt;::failureReturnValue&lt;long long, long long&gt; (19,391,291 samples, 0.21%)</title><rect x="627.5" y="357" width="2.4" height="15.0" fill="rgb(209,25,25)" rx="2" ry="2" />
<text  x="630.47" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator (26,564,157 samples, 0.28%)</title><rect x="1109.7" y="357" width="3.3" height="15.0" fill="rgb(225,33,11)" rx="2" ry="2" />
<text  x="1112.70" y="367.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortRouDi::SubscriberPortRouDi (37,655,813 samples, 0.40%)</title><rect x="1006.9" y="309" width="4.8" height="15.0" fill="rgb(236,89,23)" rx="2" ry="2" />
<text  x="1009.95" y="319.5" ></text>
</g>
<g >
<title>iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run (7,713,603 samples, 0.08%)</title><rect x="716.4" y="405" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="719.35" y="415.5" ></text>
</g>
<g >
<title>i_callback (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="181" width="1.9" height="15.0" fill="rgb(241,27,38)" rx="2" ry="2" />
<text  x="1080.16" y="191.5" ></text>
</g>
<g >
<title>rcu_core_si (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="213" width="1.9" height="15.0" fill="rgb(242,27,35)" rx="2" ry="2" />
<text  x="1080.16" y="223.5" ></text>
</g>
<g >
<title>release_sock (33,673,217 samples, 0.36%)</title><rect x="306.4" y="197" width="4.3" height="15.0" fill="rgb(239,178,45)" rx="2" ry="2" />
<text  x="309.44" y="207.5" ></text>
</g>
<g >
<title>do_el0_svc (1,076,570,695 samples, 11.44%)</title><rect x="321.0" y="261" width="135.0" height="15.0" fill="rgb(209,192,18)" rx="2" ry="2" />
<text  x="324.04" y="271.5" >do_el0_svc</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base@plt (14,867,886 samples, 0.16%)</title><rect x="168.4" y="229" width="1.8" height="15.0" fill="rgb(208,73,34)" rx="2" ry="2" />
<text  x="171.36" y="239.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::ClientPortData*, 256ul&gt;::~vector (19,108,148 samples, 0.20%)</title><rect x="777.5" y="325" width="2.4" height="15.0" fill="rgb(245,179,33)" rx="2" ry="2" />
<text  x="780.50" y="335.5" ></text>
</g>
<g >
<title>do_el0_svc (123,134,855 samples, 1.31%)</title><rect x="299.1" y="277" width="15.5" height="15.0" fill="rgb(218,22,46)" rx="2" ry="2" />
<text  x="302.15" y="287.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (54,731,901 samples, 0.58%)</title><rect x="63.1" y="309" width="6.8" height="15.0" fill="rgb(245,131,41)" rx="2" ry="2" />
<text  x="66.07" y="319.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (34,096,903 samples, 0.36%)</title><rect x="1158.9" y="469" width="4.2" height="15.0" fill="rgb(208,208,37)" rx="2" ry="2" />
<text  x="1161.87" y="479.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallResult&lt;long&gt;::PosixCallResult (33,119,806 samples, 0.35%)</title><rect x="507.8" y="325" width="4.1" height="15.0" fill="rgb(225,132,26)" rx="2" ry="2" />
<text  x="510.77" y="335.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (68,068,522 samples, 0.72%)</title><rect x="1125.9" y="261" width="8.5" height="15.0" fill="rgb(233,57,34)" rx="2" ry="2" />
<text  x="1128.88" y="271.5" ></text>
</g>
<g >
<title>__arm64_sys_setsockopt (123,134,855 samples, 1.31%)</title><rect x="299.1" y="245" width="15.5" height="15.0" fill="rgb(221,1,28)" rx="2" ry="2" />
<text  x="302.15" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (160,435,185 samples, 1.70%)</title><rect x="1138.8" y="421" width="20.1" height="15.0" fill="rgb(237,99,37)" rx="2" ry="2" />
<text  x="1141.76" y="431.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;int&gt;::max@plt (26,067,540 samples, 0.28%)</title><rect x="662.8" y="373" width="3.3" height="15.0" fill="rgb(207,212,18)" rx="2" ry="2" />
<text  x="665.79" y="383.5" ></text>
</g>
<g >
<title>iox::roudi::PortIntrospection&lt;iox::popo::PublisherPortUser, iox::popo::SubscriberPortUser&gt;::PortData::prepareTopic (160,074,097 samples, 1.70%)</title><rect x="1138.8" y="261" width="20.0" height="15.0" fill="rgb(248,152,53)" rx="2" ry="2" />
<text  x="1141.76" y="271.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (123,134,855 samples, 1.31%)</title><rect x="299.1" y="261" width="15.5" height="15.0" fill="rgb(240,140,28)" rx="2" ry="2" />
<text  x="302.15" y="271.5" ></text>
</g>
<g >
<title>MemPoolIntr (7,713,603 samples, 0.08%)</title><rect x="716.4" y="549" width="0.9" height="15.0" fill="rgb(226,50,47)" rx="2" ry="2" />
<text  x="719.35" y="559.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::updateLivelinessOfProcess (54,731,901 samples, 0.58%)</title><rect x="63.1" y="293" width="6.8" height="15.0" fill="rgb(254,225,13)" rx="2" ry="2" />
<text  x="66.07" y="303.5" ></text>
</g>
<g >
<title>run_rebalance_domains (24,314,622 samples, 0.26%)</title><rect x="557.5" y="277" width="3.0" height="15.0" fill="rgb(228,62,49)" rx="2" ry="2" />
<text  x="560.48" y="287.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::popo::ConditionVariableData&gt;::has_value (22,868,057 samples, 0.24%)</title><rect x="779.9" y="309" width="2.9" height="15.0" fill="rgb(210,23,48)" rx="2" ry="2" />
<text  x="782.89" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::construct_value&lt;iox::roudi::Process*&gt;@plt (17,437,208 samples, 0.19%)</title><rect x="112.8" y="325" width="2.2" height="15.0" fill="rgb(229,146,49)" rx="2" ry="2" />
<text  x="115.80" y="335.5" ></text>
</g>
<g >
<title>iox::roudi::Process::getName@plt (32,314,040 samples, 0.34%)</title><rect x="80.9" y="357" width="4.1" height="15.0" fill="rgb(224,70,38)" rx="2" ry="2" />
<text  x="83.92" y="367.5" ></text>
</g>
<g >
<title>__handle_domain_irq (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="261" width="1.9" height="15.0" fill="rgb(211,113,10)" rx="2" ry="2" />
<text  x="1080.16" y="271.5" ></text>
</g>
<g >
<title>all (9,411,698,672 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(250,8,0)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;true&gt;::IteratorBase@plt (26,386,744 samples, 0.28%)</title><rect x="94.6" y="325" width="3.3" height="15.0" fill="rgb(226,200,46)" rx="2" ry="2" />
<text  x="97.56" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (5,633,862,122 samples, 59.86%)</title><rect x="10.0" y="421" width="706.4" height="15.0" fill="rgb(216,67,18)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>__slab_free.isra.0 (13,045,116 samples, 0.14%)</title><rect x="421.2" y="101" width="1.7" height="15.0" fill="rgb(252,98,17)" rx="2" ry="2" />
<text  x="424.25" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string@plt (12,449,011 samples, 0.13%)</title><rect x="527.4" y="357" width="1.6" height="15.0" fill="rgb(249,57,1)" rx="2" ry="2" />
<text  x="530.39" y="367.5" ></text>
</g>
<g >
<title>iox::popo::PublisherPortRouDi::tryGetCaProMessage@plt (19,228,012 samples, 0.20%)</title><rect x="841.9" y="325" width="2.4" height="15.0" fill="rgb(207,208,47)" rx="2" ry="2" />
<text  x="844.87" y="335.5" ></text>
</g>
<g >
<title>std::__addressof&lt;iox::SubscribeState const&gt;@plt (16,189,909 samples, 0.17%)</title><rect x="1022.6" y="293" width="2.1" height="15.0" fill="rgb(239,126,18)" rx="2" ry="2" />
<text  x="1025.64" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::begin@plt (27,488,932 samples, 0.29%)</title><rect x="176.6" y="277" width="3.4" height="15.0" fill="rgb(236,198,48)" rx="2" ry="2" />
<text  x="179.55" y="287.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::updateLivelinessOfProcess (755,622,437 samples, 8.03%)</title><rect x="44.0" y="373" width="94.8" height="15.0" fill="rgb(239,52,21)" rx="2" ry="2" />
<text  x="47.03" y="383.5" >iox::roudi:..</text>
</g>
<g >
<title>__arm64_sys_recvfrom (987,299,301 samples, 10.49%)</title><rect x="328.2" y="229" width="123.7" height="15.0" fill="rgb(210,194,21)" rx="2" ry="2" />
<text  x="331.16" y="239.5" >__arm64_sys_rec..</text>
</g>
<g >
<title>std::forward&lt;iox::popo::PublisherPortData*&gt; (15,731,331 samples, 0.17%)</title><rect x="919.9" y="293" width="2.0" height="15.0" fill="rgb(244,131,12)" rx="2" ry="2" />
<text  x="922.93" y="303.5" ></text>
</g>
<g >
<title>el0_irq_naked (19,766,120 samples, 0.21%)</title><rect x="1093.0" y="341" width="2.5" height="15.0" fill="rgb(205,101,10)" rx="2" ry="2" />
<text  x="1096.03" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::ClientPortData*, 256ul&gt;::pop_back@plt (19,108,148 samples, 0.20%)</title><rect x="777.5" y="309" width="2.4" height="15.0" fill="rgb(234,127,2)" rx="2" ry="2" />
<text  x="780.50" y="319.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;int&gt;::max (20,534,170 samples, 0.22%)</title><rect x="660.2" y="373" width="2.6" height="15.0" fill="rgb(219,93,30)" rx="2" ry="2" />
<text  x="663.22" y="383.5" ></text>
</g>
<g >
<title>__skb_wait_for_more_packets (18,774,798 samples, 0.20%)</title><rect x="339.8" y="197" width="2.4" height="15.0" fill="rgb(234,141,35)" rx="2" ry="2" />
<text  x="342.82" y="207.5" ></text>
</g>
<g >
<title>el0_sync (5,726,643 samples, 0.06%)</title><rect x="716.6" y="309" width="0.7" height="15.0" fill="rgb(222,82,28)" rx="2" ry="2" />
<text  x="719.60" y="319.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,076,570,695 samples, 11.44%)</title><rect x="321.0" y="245" width="135.0" height="15.0" fill="rgb(211,107,48)" rx="2" ry="2" />
<text  x="324.04" y="255.5" >el0_svc_common.co..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (19,720,515 samples, 0.21%)</title><rect x="844.3" y="309" width="2.5" height="15.0" fill="rgb(229,182,19)" rx="2" ry="2" />
<text  x="847.28" y="319.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::run (3,021,852,975 samples, 32.11%)</title><rect x="741.5" y="389" width="378.8" height="15.0" fill="rgb(249,169,44)" rx="2" ry="2" />
<text  x="744.47" y="399.5" >iox::roudi::ProcessManager::run</text>
</g>
<g >
<title>el0_sync_handler (1,076,570,695 samples, 11.44%)</title><rect x="321.0" y="293" width="135.0" height="15.0" fill="rgb(254,36,13)" rx="2" ry="2" />
<text  x="324.04" y="303.5" >el0_sync_handler</text>
</g>
<g >
<title>unix_dgram_recvmsg (768,549,571 samples, 8.17%)</title><rect x="346.6" y="197" width="96.4" height="15.0" fill="rgb(250,23,25)" rx="2" ry="2" />
<text  x="349.60" y="207.5" >unix_dgram_..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (5,726,643 samples, 0.06%)</title><rect x="716.6" y="245" width="0.7" height="15.0" fill="rgb(238,174,21)" rx="2" ry="2" />
<text  x="719.60" y="255.5" ></text>
</g>
<g >
<title>iox::cxx::string&lt;100ul&gt;::string (25,813,267 samples, 0.27%)</title><rect x="18.1" y="389" width="3.2" height="15.0" fill="rgb(249,29,5)" rx="2" ry="2" />
<text  x="21.11" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (160,435,185 samples, 1.70%)</title><rect x="1138.8" y="469" width="20.1" height="15.0" fill="rgb(235,141,34)" rx="2" ry="2" />
<text  x="1141.76" y="479.5" ></text>
</g>
<g >
<title>strtoll (95,049,404 samples, 1.01%)</title><rect x="632.2" y="357" width="11.9" height="15.0" fill="rgb(230,130,51)" rx="2" ry="2" />
<text  x="635.20" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::internal::call_at_index&lt;0ul, iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::destructor (43,756,983 samples, 0.46%)</title><rect x="261.0" y="325" width="5.4" height="15.0" fill="rgb(212,56,21)" rx="2" ry="2" />
<text  x="263.95" y="335.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (160,435,185 samples, 1.70%)</title><rect x="1138.8" y="517" width="20.1" height="15.0" fill="rgb(218,219,7)" rx="2" ry="2" />
<text  x="1141.76" y="527.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::ConditionVariableData*, 1024ul&gt;::emplace_back&lt;iox::popo::ConditionVariableData*&gt;@plt (16,352,359 samples, 0.17%)</title><rect x="782.8" y="309" width="2.0" height="15.0" fill="rgb(217,31,8)" rx="2" ry="2" />
<text  x="785.76" y="319.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getInterfacePortDataList (19,589,613 samples, 0.21%)</title><rect x="787.8" y="325" width="2.5" height="15.0" fill="rgb(254,131,42)" rx="2" ry="2" />
<text  x="790.81" y="335.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (34,096,903 samples, 0.36%)</title><rect x="1158.9" y="517" width="4.2" height="15.0" fill="rgb(232,135,42)" rx="2" ry="2" />
<text  x="1161.87" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (34,096,903 samples, 0.36%)</title><rect x="1158.9" y="421" width="4.2" height="15.0" fill="rgb(246,6,31)" rx="2" ry="2" />
<text  x="1161.87" y="431.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="133" width="1.9" height="15.0" fill="rgb(243,45,5)" rx="2" ry="2" />
<text  x="1080.16" y="143.5" ></text>
</g>
<g >
<title>el0_sync_handler (83,074,395 samples, 0.88%)</title><rect x="1124.0" y="341" width="10.4" height="15.0" fill="rgb(222,74,38)" rx="2" ry="2" />
<text  x="1127.00" y="351.5" ></text>
</g>
<g >
<title>el0_sync (123,134,855 samples, 1.31%)</title><rect x="299.1" y="325" width="15.5" height="15.0" fill="rgb(239,197,35)" rx="2" ry="2" />
<text  x="302.15" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::expected (73,480,396 samples, 0.78%)</title><rect x="485.8" y="341" width="9.2" height="15.0" fill="rgb(209,32,4)" rx="2" ry="2" />
<text  x="488.79" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (34,096,903 samples, 0.36%)</title><rect x="1158.9" y="501" width="4.2" height="15.0" fill="rgb(220,13,16)" rx="2" ry="2" />
<text  x="1161.87" y="511.5" ></text>
</g>
<g >
<title>iox::cxx::internal::Require@plt (21,337,225 samples, 0.23%)</title><rect x="932.8" y="325" width="2.7" height="15.0" fill="rgb(209,127,21)" rx="2" ry="2" />
<text  x="935.84" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (12,942,007 samples, 0.14%)</title><rect x="166.7" y="229" width="1.7" height="15.0" fill="rgb(206,50,21)" rx="2" ry="2" />
<text  x="169.74" y="239.5" ></text>
</g>
<g >
<title>std::mutex::lock (126,886,886 samples, 1.35%)</title><rect x="23.1" y="341" width="15.9" height="15.0" fill="rgb(236,163,42)" rx="2" ry="2" />
<text  x="26.09" y="351.5" ></text>
</g>
<g >
<title>std::addressof&lt;iox::runtime::IpcInterfaceBase::timedReceive (18,553,944 samples, 0.20%)</title><rect x="553.5" y="373" width="2.3" height="15.0" fill="rgb(246,134,5)" rx="2" ry="2" />
<text  x="556.52" y="383.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;long&gt;::PosixCallVerificator@plt (18,639,984 samples, 0.20%)</title><rect x="501.9" y="357" width="2.3" height="15.0" fill="rgb(238,165,7)" rx="2" ry="2" />
<text  x="504.89" y="367.5" ></text>
</g>
<g >
<title>iox::roudi::RouDi::processRuntimeMessages (214,180,480 samples, 2.28%)</title><rect x="1163.1" y="405" width="26.9" height="15.0" fill="rgb(244,151,6)" rx="2" ry="2" />
<text  x="1166.15" y="415.5" >i..</text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::~expected@plt (15,744,293 samples, 0.17%)</title><rect x="16.1" y="389" width="2.0" height="15.0" fill="rgb(211,97,53)" rx="2" ry="2" />
<text  x="19.14" y="399.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleConditionVariables (63,174,472 samples, 0.67%)</title><rect x="779.9" y="341" width="7.9" height="15.0" fill="rgb(250,61,46)" rx="2" ry="2" />
<text  x="782.89" y="351.5" ></text>
</g>
<g >
<title>setsockopt (183,201,694 samples, 1.95%)</title><rect x="291.6" y="341" width="23.0" height="15.0" fill="rgb(209,59,8)" rx="2" ry="2" />
<text  x="294.61" y="351.5" >s..</text>
</g>
<g >
<title>iox::roudi::FixedPositionContainer&lt;iox::popo::SubscriberPortData, 256ul&gt;::content (16,494,611 samples, 0.18%)</title><rect x="1081.4" y="309" width="2.0" height="15.0" fill="rgb(214,134,36)" rx="2" ry="2" />
<text  x="1084.38" y="319.5" ></text>
</g>
<g >
<title>__errno_location@plt (56,462,500 samples, 0.60%)</title><rect x="250.3" y="357" width="7.1" height="15.0" fill="rgb(229,147,10)" rx="2" ry="2" />
<text  x="253.28" y="367.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (5,737,946 samples, 0.06%)</title><rect x="716.6" y="341" width="0.7" height="15.0" fill="rgb(223,178,19)" rx="2" ry="2" />
<text  x="719.60" y="351.5" ></text>
</g>
<g >
<title>clock_gettime@plt (21,334,307 samples, 0.23%)</title><rect x="1097.6" y="357" width="2.7" height="15.0" fill="rgb(248,7,13)" rx="2" ry="2" />
<text  x="1100.58" y="367.5" ></text>
</g>
<g >
<title>iox::popo::BasePort::getMembers@plt (16,808,275 samples, 0.18%)</title><rect x="938.4" y="325" width="2.1" height="15.0" fill="rgb(219,135,9)" rx="2" ry="2" />
<text  x="941.38" y="335.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (18,658,060 samples, 0.20%)</title><rect x="732.0" y="357" width="2.3" height="15.0" fill="rgb(237,229,29)" rx="2" ry="2" />
<text  x="734.96" y="367.5" ></text>
</g>
<g >
<title>__handle_domain_irq (17,457,655 samples, 0.19%)</title><rect x="910.4" y="261" width="2.2" height="15.0" fill="rgb(222,3,44)" rx="2" ry="2" />
<text  x="913.36" y="271.5" ></text>
</g>
<g >
<title>iox::posix::UnixDomainSocket::timedReceive[abi:cxx11] (2,535,475,657 samples, 26.94%)</title><rect x="231.0" y="373" width="317.9" height="15.0" fill="rgb(240,127,20)" rx="2" ry="2" />
<text  x="234.04" y="383.5" >iox::posix::UnixDomainSocket::timedReceive..</text>
</g>
<g >
<title>std::this_thread::sleep_for&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (130,356,769 samples, 1.39%)</title><rect x="1120.3" y="389" width="16.4" height="15.0" fill="rgb(251,224,41)" rx="2" ry="2" />
<text  x="1123.34" y="399.5" ></text>
</g>
<g >
<title>@plt (15,011,366 samples, 0.16%)</title><rect x="650.7" y="357" width="1.9" height="15.0" fill="rgb(251,60,24)" rx="2" ry="2" />
<text  x="653.68" y="367.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (214,180,480 samples, 2.28%)</title><rect x="1163.1" y="485" width="26.9" height="15.0" fill="rgb(210,221,41)" rx="2" ry="2" />
<text  x="1166.15" y="495.5" >s..</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (160,435,185 samples, 1.70%)</title><rect x="1138.8" y="501" width="20.1" height="15.0" fill="rgb(213,124,24)" rx="2" ry="2" />
<text  x="1141.76" y="511.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleClientPorts (19,108,148 samples, 0.20%)</title><rect x="777.5" y="341" width="2.4" height="15.0" fill="rgb(214,127,15)" rx="2" ry="2" />
<text  x="780.50" y="351.5" ></text>
</g>
<g >
<title>iox::popo::PublisherPortRouDi::tryGetCaProMessage (91,546,012 samples, 0.97%)</title><rect x="848.8" y="309" width="11.4" height="15.0" fill="rgb(216,0,18)" rx="2" ry="2" />
<text  x="851.77" y="319.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (54,435,952 samples, 0.58%)</title><rect x="30.0" y="325" width="6.8" height="15.0" fill="rgb(205,176,20)" rx="2" ry="2" />
<text  x="32.97" y="335.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (34,096,903 samples, 0.36%)</title><rect x="1158.9" y="453" width="4.2" height="15.0" fill="rgb(242,95,41)" rx="2" ry="2" />
<text  x="1161.87" y="463.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (33,708,291 samples, 0.36%)</title><rect x="65.7" y="277" width="4.2" height="15.0" fill="rgb(244,162,40)" rx="2" ry="2" />
<text  x="68.71" y="287.5" ></text>
</g>
<g >
<title>iox::runtime::IpcMessage::getElementAtIndex[abi:cxx11] (164,865,353 samples, 1.75%)</title><rect x="555.8" y="389" width="20.7" height="15.0" fill="rgb(253,160,32)" rx="2" ry="2" />
<text  x="558.85" y="399.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::monitorProcesses (176,092,197 samples, 1.87%)</title><rect x="1095.5" y="373" width="22.1" height="15.0" fill="rgb(234,187,26)" rx="2" ry="2" />
<text  x="1098.50" y="383.5" >i..</text>
</g>
<g >
<title>[libc-2.30.so] (160,435,185 samples, 1.70%)</title><rect x="1138.8" y="533" width="20.1" height="15.0" fill="rgb(243,89,30)" rx="2" ry="2" />
<text  x="1141.76" y="543.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;long&gt;::PosixCallEvaluator@plt (39,761,820 samples, 0.42%)</title><rect x="480.8" y="357" width="5.0" height="15.0" fill="rgb(215,104,28)" rx="2" ry="2" />
<text  x="483.80" y="367.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, sem_t*, timespec const*&gt;::operator (5,737,946 samples, 0.06%)</title><rect x="716.6" y="373" width="0.7" height="15.0" fill="rgb(236,125,47)" rx="2" ry="2" />
<text  x="719.60" y="383.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (34,096,903 samples, 0.36%)</title><rect x="1158.9" y="533" width="4.2" height="15.0" fill="rgb(238,165,29)" rx="2" ry="2" />
<text  x="1161.87" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string@plt (30,362,343 samples, 0.32%)</title><rect x="183.2" y="293" width="3.8" height="15.0" fill="rgb(232,113,26)" rx="2" ry="2" />
<text  x="186.21" y="303.5" ></text>
</g>
<g >
<title>refill_obj_stock (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="101" width="1.9" height="15.0" fill="rgb(206,111,27)" rx="2" ry="2" />
<text  x="1080.16" y="111.5" ></text>
</g>
<g >
<title>iox::cxx::internal::Require (19,659,627 samples, 0.21%)</title><rect x="792.9" y="325" width="2.5" height="15.0" fill="rgb(234,102,12)" rx="2" ry="2" />
<text  x="795.89" y="335.5" ></text>
</g>
<g >
<title>__schedule (68,064,344 samples, 0.72%)</title><rect x="1125.9" y="213" width="8.5" height="15.0" fill="rgb(226,143,50)" rx="2" ry="2" />
<text  x="1128.88" y="223.5" ></text>
</g>
<g >
<title>iox::cxx::make_optional&lt;iox::roudi::Process*, iox::roudi::Process*&gt; (54,930,488 samples, 0.58%)</title><rect x="112.8" y="341" width="6.9" height="15.0" fill="rgb(212,5,4)" rx="2" ry="2" />
<text  x="115.80" y="351.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (5,633,862,122 samples, 59.86%)</title><rect x="10.0" y="469" width="706.4" height="15.0" fill="rgb(229,3,20)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>__softirqentry_text_start (19,070,765 samples, 0.20%)</title><rect x="1115.2" y="261" width="2.4" height="15.0" fill="rgb(233,64,42)" rx="2" ry="2" />
<text  x="1118.19" y="271.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long long, char const*, char**, int&gt;::PosixCallBuilder (18,303,872 samples, 0.19%)</title><rect x="629.9" y="341" width="2.3" height="15.0" fill="rgb(219,85,8)" rx="2" ry="2" />
<text  x="632.91" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (214,180,480 samples, 2.28%)</title><rect x="1163.1" y="421" width="26.9" height="15.0" fill="rgb(233,37,4)" rx="2" ry="2" />
<text  x="1166.15" y="431.5" >s..</text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getNextIdx (19,719,860 samples, 0.21%)</title><rect x="103.9" y="325" width="2.4" height="15.0" fill="rgb(242,213,21)" rx="2" ry="2" />
<text  x="106.88" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string@plt (25,596,683 samples, 0.27%)</title><rect x="709.3" y="405" width="3.2" height="15.0" fill="rgb(254,29,1)" rx="2" ry="2" />
<text  x="712.30" y="415.5" ></text>
</g>
<g >
<title>iox::runtime::stringToIpcMessageType (730,774,486 samples, 7.76%)</title><rect x="576.5" y="389" width="91.6" height="15.0" fill="rgb(208,84,51)" rx="2" ry="2" />
<text  x="579.52" y="399.5" >iox::runti..</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::call_element_destructor@plt (16,355,141 samples, 0.17%)</title><rect x="615.6" y="309" width="2.1" height="15.0" fill="rgb(244,226,8)" rx="2" ry="2" />
<text  x="618.62" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::isInvalidIterator (14,773,659 samples, 0.16%)</title><rect x="92.7" y="309" width="1.9" height="15.0" fill="rgb(251,137,2)" rx="2" ry="2" />
<text  x="95.71" y="319.5" ></text>
</g>
<g >
<title>irq_exit (16,499,142 samples, 0.18%)</title><rect x="682.1" y="325" width="2.1" height="15.0" fill="rgb(211,43,11)" rx="2" ry="2" />
<text  x="685.13" y="335.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (5,633,862,122 samples, 59.86%)</title><rect x="10.0" y="485" width="706.4" height="15.0" fill="rgb(224,69,40)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~expected (57,387,649 samples, 0.61%)</title><rect x="261.0" y="357" width="7.1" height="15.0" fill="rgb(210,78,12)" rx="2" ry="2" />
<text  x="263.95" y="367.5" ></text>
</g>
<g >
<title>irq_exit (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="245" width="1.9" height="15.0" fill="rgb(232,129,47)" rx="2" ry="2" />
<text  x="1080.16" y="255.5" ></text>
</g>
<g >
<title>_copy_to_iter (65,996,401 samples, 0.70%)</title><rect x="401.0" y="133" width="8.3" height="15.0" fill="rgb(232,161,39)" rx="2" ry="2" />
<text  x="404.01" y="143.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (79,665,627 samples, 0.85%)</title><rect x="596.9" y="341" width="10.0" height="15.0" fill="rgb(208,229,46)" rx="2" ry="2" />
<text  x="599.92" y="351.5" ></text>
</g>
<g >
<title>iox::roudi::PortIntrospection&lt;iox::popo::PublisherPortUser, iox::popo::SubscriberPortUser&gt;::sendSubscriberPortsData (160,074,097 samples, 1.70%)</title><rect x="1138.8" y="277" width="20.0" height="15.0" fill="rgb(215,13,30)" rx="2" ry="2" />
<text  x="1141.76" y="287.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::get_at_index&lt;0ul&gt;@plt (12,084,046 samples, 0.13%)</title><rect x="588.5" y="357" width="1.5" height="15.0" fill="rgb(231,154,17)" rx="2" ry="2" />
<text  x="591.49" y="367.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortMultiProducer::~SubscriberPortMultiProducer (39,959,639 samples, 0.42%)</title><rect x="1011.7" y="325" width="5.0" height="15.0" fill="rgb(219,132,6)" rx="2" ry="2" />
<text  x="1014.67" y="335.5" ></text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::getRuntimeName (18,125,342 samples, 0.19%)</title><rect x="136.5" y="341" width="2.3" height="15.0" fill="rgb(242,177,40)" rx="2" ry="2" />
<text  x="139.49" y="351.5" ></text>
</g>
<g >
<title>kfree (33,746,747 samples, 0.36%)</title><rect x="422.9" y="101" width="4.2" height="15.0" fill="rgb(238,135,4)" rx="2" ry="2" />
<text  x="425.88" y="111.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (35,982,579 samples, 0.38%)</title><rect x="25.5" y="325" width="4.5" height="15.0" fill="rgb(247,111,22)" rx="2" ry="2" />
<text  x="28.46" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::value@plt (20,272,980 samples, 0.22%)</title><rect x="117.1" y="325" width="2.6" height="15.0" fill="rgb(211,111,5)" rx="2" ry="2" />
<text  x="120.15" y="335.5" ></text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::setMessageFromString (227,286,850 samples, 2.41%)</title><rect x="151.5" y="293" width="28.5" height="15.0" fill="rgb(245,1,54)" rx="2" ry="2" />
<text  x="154.50" y="303.5" >io..</text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::cxx::optional&lt;iox::popo::ServerPortData&gt;, 128ul&gt;::end (54,488,862 samples, 0.58%)</title><rect x="926.0" y="309" width="6.8" height="15.0" fill="rgb(205,163,12)" rx="2" ry="2" />
<text  x="929.01" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::emplace_at_index&lt;0ul, iox::posix::PosixCallResult&lt;long long&gt; &gt;@plt (69,429,202 samples, 0.74%)</title><rect x="606.9" y="325" width="8.7" height="15.0" fill="rgb(238,50,49)" rx="2" ry="2" />
<text  x="609.91" y="335.5" ></text>
</g>
<g >
<title>__clock_gettime (16,600,230 samples, 0.18%)</title><rect x="1095.5" y="357" width="2.1" height="15.0" fill="rgb(224,100,21)" rx="2" ry="2" />
<text  x="1098.50" y="367.5" ></text>
</g>
<g >
<title>iox::runtime::IpcMessage::getElementAtIndex[abi:cxx11] (15,261,312 samples, 0.16%)</title><rect x="698.0" y="405" width="1.9" height="15.0" fill="rgb(248,169,45)" rx="2" ry="2" />
<text  x="700.98" y="415.5" ></text>
</g>
<g >
<title>__skb_try_recv_datagram (47,968,293 samples, 0.51%)</title><rect x="333.8" y="197" width="6.0" height="15.0" fill="rgb(215,81,50)" rx="2" ry="2" />
<text  x="336.80" y="207.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallResult&lt;long long&gt;::PosixCallResult@plt (18,303,872 samples, 0.19%)</title><rect x="629.9" y="325" width="2.3" height="15.0" fill="rgb(235,213,53)" rx="2" ry="2" />
<text  x="632.91" y="335.5" ></text>
</g>
<g >
<title>gic_handle_irq (24,314,622 samples, 0.26%)</title><rect x="557.5" y="341" width="3.0" height="15.0" fill="rgb(234,159,8)" rx="2" ry="2" />
<text  x="560.48" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars@plt (22,036,113 samples, 0.23%)</title><rect x="573.8" y="373" width="2.7" height="15.0" fill="rgb(226,220,27)" rx="2" ry="2" />
<text  x="576.76" y="383.5" ></text>
</g>
<g >
<title>__sys_setsockopt (123,134,855 samples, 1.31%)</title><rect x="299.1" y="229" width="15.5" height="15.0" fill="rgb(232,60,33)" rx="2" ry="2" />
<text  x="302.15" y="239.5" ></text>
</g>
<g >
<title>iox::roudi::ProcessManager::discoveryUpdate (2,699,700,447 samples, 28.68%)</title><rect x="757.0" y="373" width="338.5" height="15.0" fill="rgb(239,4,9)" rx="2" ry="2" />
<text  x="760.03" y="383.5" >iox::roudi::ProcessManager::discoveryUpdate</text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (24,942,948 samples, 0.27%)</title><rect x="688.3" y="389" width="3.1" height="15.0" fill="rgb(252,136,43)" rx="2" ry="2" />
<text  x="691.32" y="399.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (5,633,862,122 samples, 59.86%)</title><rect x="10.0" y="533" width="706.4" height="15.0" fill="rgb(252,6,37)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >[libc-2.30.so]</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::call_element_destructor (13,630,666 samples, 0.14%)</title><rect x="266.4" y="325" width="1.7" height="15.0" fill="rgb(210,181,22)" rx="2" ry="2" />
<text  x="269.44" y="335.5" ></text>
</g>
<g >
<title>iox::popo::ChunkSender&lt;iox::popo::ChunkSenderData&lt;8u, iox::popo::ChunkDistributorData&lt;iox::DefaultChunkDistributorConfig, iox::popo::ThreadSafePolicy, iox::popo::ChunkQueuePusher&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt; &gt; &gt; &gt;::ChunkSender@plt (19,399,167 samples, 0.21%)</title><rect x="835.4" y="325" width="2.5" height="15.0" fill="rgb(215,17,50)" rx="2" ry="2" />
<text  x="838.42" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::not_null&lt;iox::popo::PublisherPortData* const, void&gt;::operator iox::popo::PublisherPortData* const@plt (14,744,032 samples, 0.16%)</title><rect x="795.4" y="325" width="1.8" height="15.0" fill="rgb(217,201,30)" rx="2" ry="2" />
<text  x="798.35" y="335.5" ></text>
</g>
<g >
<title>iox::roudi::RouDi::processMessage (922,642,270 samples, 9.80%)</title><rect x="23.1" y="389" width="115.7" height="15.0" fill="rgb(210,77,45)" rx="2" ry="2" />
<text  x="26.09" y="399.5" >iox::roudi::Ro..</text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::timedReceive (283,261,263 samples, 3.01%)</title><rect x="151.5" y="309" width="35.5" height="15.0" fill="rgb(231,157,49)" rx="2" ry="2" />
<text  x="154.50" y="319.5" >iox..</text>
</g>
<g >
<title>[libc-2.30.so] (3,361,410,379 samples, 35.72%)</title><rect x="717.3" y="533" width="421.5" height="15.0" fill="rgb(238,125,8)" rx="2" ry="2" />
<text  x="720.32" y="543.5" >[libc-2.30.so]</text>
</g>
<g >
<title>std::__invoke&lt;void  (3,361,410,379 samples, 35.72%)</title><rect x="717.3" y="437" width="421.5" height="15.0" fill="rgb(243,42,50)" rx="2" ry="2" />
<text  x="720.32" y="447.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>iox::roudi::PortPool::getInterfacePortDataList (17,618,327 samples, 0.19%)</title><rect x="1085.7" y="341" width="2.2" height="15.0" fill="rgb(238,19,26)" rx="2" ry="2" />
<text  x="1088.74" y="351.5" ></text>
</g>
<g >
<title>__handle_domain_irq (19,766,120 samples, 0.21%)</title><rect x="1093.0" y="309" width="2.5" height="15.0" fill="rgb(206,103,36)" rx="2" ry="2" />
<text  x="1096.03" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::expected@plt (33,389,287 samples, 0.35%)</title><rect x="579.8" y="357" width="4.2" height="15.0" fill="rgb(215,135,20)" rx="2" ry="2" />
<text  x="582.77" y="367.5" ></text>
</g>
<g >
<title>iox_recvfrom (1,117,217,063 samples, 11.87%)</title><rect x="321.0" y="341" width="140.1" height="15.0" fill="rgb(225,36,47)" rx="2" ry="2" />
<text  x="324.04" y="351.5" >iox_recvfrom</text>
</g>
<g >
<title>el0_irq_naked (17,457,655 samples, 0.19%)</title><rect x="910.4" y="293" width="2.2" height="15.0" fill="rgb(205,79,52)" rx="2" ry="2" />
<text  x="913.36" y="303.5" ></text>
</g>
<g >
<title>el0_sync_handler (5,726,643 samples, 0.06%)</title><rect x="716.6" y="293" width="0.7" height="15.0" fill="rgb(217,200,38)" rx="2" ry="2" />
<text  x="719.60" y="303.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (70,817,562 samples, 0.75%)</title><rect x="1024.7" y="293" width="8.8" height="15.0" fill="rgb(252,7,37)" rx="2" ry="2" />
<text  x="1027.67" y="303.5" ></text>
</g>
<g >
<title>IPC-msg-process (5,633,862,122 samples, 59.86%)</title><rect x="10.0" y="549" width="706.4" height="15.0" fill="rgb(247,26,14)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >IPC-msg-process</text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::Proxy::Proxy (126,886,886 samples, 1.35%)</title><rect x="23.1" y="357" width="15.9" height="15.0" fill="rgb(246,108,23)" rx="2" ry="2" />
<text  x="26.09" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::convert::fromString&lt;int&gt;@plt (17,761,393 samples, 0.19%)</title><rect x="10.0" y="389" width="2.2" height="15.0" fill="rgb(210,35,12)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (5,716,630 samples, 0.06%)</title><rect x="716.6" y="133" width="0.7" height="15.0" fill="rgb(228,168,27)" rx="2" ry="2" />
<text  x="719.60" y="143.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~variant (25,877,678 samples, 0.27%)</title><rect x="288.4" y="357" width="3.2" height="15.0" fill="rgb(208,139,35)" rx="2" ry="2" />
<text  x="291.37" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator (17,561,130 samples, 0.19%)</title><rect x="85.0" y="341" width="2.2" height="15.0" fill="rgb(226,111,38)" rx="2" ry="2" />
<text  x="87.97" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (19,766,120 samples, 0.21%)</title><rect x="1093.0" y="277" width="2.5" height="15.0" fill="rgb(212,23,6)" rx="2" ry="2" />
<text  x="1096.03" y="287.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleSubscriberPorts@plt (19,766,120 samples, 0.21%)</title><rect x="1093.0" y="357" width="2.5" height="15.0" fill="rgb(244,87,46)" rx="2" ry="2" />
<text  x="1096.03" y="367.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handlePublisherPorts (1,029,043,719 samples, 10.93%)</title><rect x="792.9" y="341" width="129.0" height="15.0" fill="rgb(224,101,25)" rx="2" ry="2" />
<text  x="795.89" y="351.5" >iox::roudi::Port..</text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::operator (15,011,366 samples, 0.16%)</title><rect x="650.7" y="373" width="1.9" height="15.0" fill="rgb(230,192,2)" rx="2" ry="2" />
<text  x="653.68" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::call_element_destructor (15,046,513 samples, 0.16%)</title><rect x="617.7" y="293" width="1.9" height="15.0" fill="rgb(211,139,20)" rx="2" ry="2" />
<text  x="620.67" y="303.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long, int, void*, unsigned long, int, sockaddr*, unsigned int*&gt;::PosixCallBuilder@plt (27,322,018 samples, 0.29%)</title><rect x="314.6" y="357" width="3.4" height="15.0" fill="rgb(236,55,13)" rx="2" ry="2" />
<text  x="317.58" y="367.5" ></text>
</g>
<g >
<title>skb_release_head_state (97,004,006 samples, 1.03%)</title><rect x="427.1" y="133" width="12.2" height="15.0" fill="rgb(223,142,49)" rx="2" ry="2" />
<text  x="430.12" y="143.5" ></text>
</g>
<g >
<title>el0_sync_handler (123,134,855 samples, 1.31%)</title><rect x="299.1" y="309" width="15.5" height="15.0" fill="rgb(206,217,48)" rx="2" ry="2" />
<text  x="302.15" y="319.5" ></text>
</g>
<g >
<title>iox::algorithm::doesContainValue&lt;int&gt;@plt (1,975,657 samples, 0.02%)</title><rect x="716.4" y="373" width="0.2" height="15.0" fill="rgb(249,180,33)" rx="2" ry="2" />
<text  x="719.35" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (79,106,444 samples, 0.84%)</title><rect x="60.0" y="341" width="9.9" height="15.0" fill="rgb(221,71,45)" rx="2" ry="2" />
<text  x="63.02" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::success&lt;iox::posix::PosixCallResult&lt;int&gt; &gt;::success&lt;iox::posix::PosixCallResult&lt;int&gt;&amp;&gt;@plt (79,567,371 samples, 0.85%)</title><rect x="272.7" y="357" width="10.0" height="15.0" fill="rgb(250,80,39)" rx="2" ry="2" />
<text  x="275.70" y="367.5" ></text>
</g>
<g >
<title>iox::popo::ChunkQueuePopper&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;::~ChunkQueuePopper (19,773,815 samples, 0.21%)</title><rect x="1014.2" y="293" width="2.5" height="15.0" fill="rgb(228,80,17)" rx="2" ry="2" />
<text  x="1017.20" y="303.5" ></text>
</g>
<g >
<title>el0_irq_naked (24,314,622 samples, 0.26%)</title><rect x="557.5" y="357" width="3.0" height="15.0" fill="rgb(237,184,36)" rx="2" ry="2" />
<text  x="560.48" y="367.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (246,440,709 samples, 2.62%)</title><rect x="804.5" y="309" width="30.9" height="15.0" fill="rgb(245,144,27)" rx="2" ry="2" />
<text  x="807.52" y="319.5" >st..</text>
</g>
<g >
<title>iox::roudi::PortManager::handleInterfaces (19,589,613 samples, 0.21%)</title><rect x="787.8" y="341" width="2.5" height="15.0" fill="rgb(210,139,47)" rx="2" ry="2" />
<text  x="790.81" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator!=&lt;false&gt; (101,724,355 samples, 1.08%)</title><rect x="87.2" y="341" width="12.7" height="15.0" fill="rgb(208,126,30)" rx="2" ry="2" />
<text  x="90.17" y="351.5" ></text>
</g>
<g >
<title>ww_mutex_lock_interruptible (12,920,566 samples, 0.14%)</title><rect x="443.0" y="197" width="1.6" height="15.0" fill="rgb(235,201,45)" rx="2" ry="2" />
<text  x="445.96" y="207.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::~variant (81,927,055 samples, 0.87%)</title><rect x="198.2" y="357" width="10.3" height="15.0" fill="rgb(242,172,18)" rx="2" ry="2" />
<text  x="201.21" y="367.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (7,713,603 samples, 0.08%)</title><rect x="716.4" y="517" width="0.9" height="15.0" fill="rgb(205,195,49)" rx="2" ry="2" />
<text  x="719.35" y="527.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (20,886,954 samples, 0.22%)</title><rect x="1020.0" y="309" width="2.6" height="15.0" fill="rgb(247,194,44)" rx="2" ry="2" />
<text  x="1023.02" y="319.5" ></text>
</g>
<g >
<title>iox::algorithm::doesContainValue&lt;int&gt;@plt (28,695,623 samples, 0.30%)</title><rect x="257.4" y="357" width="3.6" height="15.0" fill="rgb(209,216,33)" rx="2" ry="2" />
<text  x="260.35" y="367.5" ></text>
</g>
<g >
<title>gic_handle_irq (19,070,765 samples, 0.20%)</title><rect x="1115.2" y="309" width="2.4" height="15.0" fill="rgb(216,35,21)" rx="2" ry="2" />
<text  x="1118.19" y="319.5" ></text>
</g>
<g >
<title>iox::roudi::Process::isMonitored@plt (21,131,725 samples, 0.22%)</title><rect x="754.4" y="373" width="2.6" height="15.0" fill="rgb(217,137,5)" rx="2" ry="2" />
<text  x="757.38" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (15,551,133 samples, 0.17%)</title><rect x="571.8" y="373" width="2.0" height="15.0" fill="rgb(217,218,39)" rx="2" ry="2" />
<text  x="574.81" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::destruct_value (18,542,416 samples, 0.20%)</title><rect x="74.6" y="341" width="2.4" height="15.0" fill="rgb(206,64,39)" rx="2" ry="2" />
<text  x="77.63" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getDataPtrFromIdx@plt (26,564,157 samples, 0.28%)</title><rect x="1109.7" y="341" width="3.3" height="15.0" fill="rgb(214,61,43)" rx="2" ry="2" />
<text  x="1112.70" y="351.5" ></text>
</g>
<g >
<title>__skb_try_recv_datagram (15,367,823 samples, 0.16%)</title><rect x="362.2" y="181" width="1.9" height="15.0" fill="rgb(245,224,15)" rx="2" ry="2" />
<text  x="365.19" y="191.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (91,546,012 samples, 0.97%)</title><rect x="848.8" y="293" width="11.4" height="15.0" fill="rgb(236,224,13)" rx="2" ry="2" />
<text  x="851.77" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (18,195,875 samples, 0.19%)</title><rect x="208.5" y="373" width="2.3" height="15.0" fill="rgb(222,115,7)" rx="2" ry="2" />
<text  x="211.48" y="383.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt;@plt (27,778,866 samples, 0.30%)</title><rect x="568.3" y="357" width="3.5" height="15.0" fill="rgb(239,94,24)" rx="2" ry="2" />
<text  x="571.32" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator!=&lt;false&gt;@plt (35,338,384 samples, 0.38%)</title><rect x="52.6" y="357" width="4.4" height="15.0" fill="rgb(244,209,26)" rx="2" ry="2" />
<text  x="55.57" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt;@plt (37,301,584 samples, 0.40%)</title><rect x="555.8" y="373" width="4.7" height="15.0" fill="rgb(226,41,41)" rx="2" ry="2" />
<text  x="558.85" y="383.5" ></text>
</g>
<g >
<title>std::count_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, iox::runtime::IpcMessage::setMessage (95,606,666 samples, 1.02%)</title><rect x="162.2" y="261" width="12.0" height="15.0" fill="rgb(239,20,52)" rx="2" ry="2" />
<text  x="165.25" y="271.5" ></text>
</g>
<g >
<title>lock_timer_base (13,429,591 samples, 0.14%)</title><rect x="383.1" y="117" width="1.7" height="15.0" fill="rgb(217,12,28)" rx="2" ry="2" />
<text  x="386.13" y="127.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, int, int, int, void const*, unsigned int&gt;::operator (183,201,694 samples, 1.95%)</title><rect x="291.6" y="357" width="23.0" height="15.0" fill="rgb(205,122,8)" rx="2" ry="2" />
<text  x="294.61" y="367.5" >i..</text>
</g>
<g >
<title>memcg_slab_free_hook (29,382,428 samples, 0.31%)</title><rect x="417.6" y="117" width="3.6" height="15.0" fill="rgb(253,135,15)" rx="2" ry="2" />
<text  x="420.56" y="127.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (5,633,862,122 samples, 59.86%)</title><rect x="10.0" y="437" width="706.4" height="15.0" fill="rgb(252,67,3)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::operator (127,176,758 samples, 1.35%)</title><rect x="23.1" y="373" width="15.9" height="15.0" fill="rgb(238,29,24)" rx="2" ry="2" />
<text  x="26.09" y="383.5" ></text>
</g>
<g >
<title>skb_free_datagram (268,601,621 samples, 2.85%)</title><rect x="409.3" y="181" width="33.7" height="15.0" fill="rgb(252,46,31)" rx="2" ry="2" />
<text  x="412.28" y="191.5" >sk..</text>
</g>
<g >
<title>std::__invoke&lt;void  (160,435,185 samples, 1.70%)</title><rect x="1138.8" y="437" width="20.1" height="15.0" fill="rgb(229,64,13)" rx="2" ry="2" />
<text  x="1141.76" y="447.5" ></text>
</g>
<g >
<title>rcu_core (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="197" width="1.9" height="15.0" fill="rgb(218,11,28)" rx="2" ry="2" />
<text  x="1080.16" y="207.5" ></text>
</g>
<g >
<title>kfree_skb (239,225,415 samples, 2.54%)</title><rect x="409.3" y="165" width="30.0" height="15.0" fill="rgb(253,15,46)" rx="2" ry="2" />
<text  x="412.28" y="175.5" >kf..</text>
</g>
<g >
<title>iox::roudi::PortManager::doDiscovery (2,663,414,105 samples, 28.30%)</title><rect x="757.0" y="357" width="334.0" height="15.0" fill="rgb(223,19,0)" rx="2" ry="2" />
<text  x="760.03" y="367.5" >iox::roudi::PortManager::doDiscovery</text>
</g>
<g >
<title>gic_handle_irq (19,766,120 samples, 0.21%)</title><rect x="1093.0" y="325" width="2.5" height="15.0" fill="rgb(220,35,13)" rx="2" ry="2" />
<text  x="1096.03" y="335.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortRouDi::~SubscriberPortRouDi (39,959,639 samples, 0.42%)</title><rect x="1011.7" y="309" width="5.0" height="15.0" fill="rgb(241,112,25)" rx="2" ry="2" />
<text  x="1014.67" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (24,314,622 samples, 0.26%)</title><rect x="557.5" y="261" width="3.0" height="15.0" fill="rgb(248,181,19)" rx="2" ry="2" />
<text  x="560.48" y="271.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (160,384,245 samples, 1.70%)</title><rect x="1138.8" y="341" width="20.1" height="15.0" fill="rgb(224,152,3)" rx="2" ry="2" />
<text  x="1141.76" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::internal::Require (20,045,393 samples, 0.21%)</title><rect x="1006.9" y="277" width="2.6" height="15.0" fill="rgb(210,180,1)" rx="2" ry="2" />
<text  x="1009.95" y="287.5" ></text>
</g>
<g >
<title>iox::runtime::IpcMessage::setMessage (181,285,920 samples, 1.93%)</title><rect x="151.5" y="277" width="22.7" height="15.0" fill="rgb(233,128,52)" rx="2" ry="2" />
<text  x="154.50" y="287.5" >i..</text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::SubscriberPortData*, 256ul&gt;::pop_back (22,866,191 samples, 0.24%)</title><rect x="935.5" y="309" width="2.9" height="15.0" fill="rgb(228,178,22)" rx="2" ry="2" />
<text  x="938.52" y="319.5" ></text>
</g>
<g >
<title>pid_vnr (35,352,035 samples, 0.38%)</title><rect x="342.2" y="197" width="4.4" height="15.0" fill="rgb(247,48,27)" rx="2" ry="2" />
<text  x="345.17" y="207.5" ></text>
</g>
<g >
<title>__handle_domain_irq (24,314,622 samples, 0.26%)</title><rect x="557.5" y="325" width="3.0" height="15.0" fill="rgb(252,195,35)" rx="2" ry="2" />
<text  x="560.48" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::PublisherPortData*, 128ul&gt;::at (15,776,065 samples, 0.17%)</title><rect x="912.6" y="293" width="1.9" height="15.0" fill="rgb(219,116,1)" rx="2" ry="2" />
<text  x="915.55" y="303.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getClientPortDataList (18,247,675 samples, 0.19%)</title><rect x="1083.4" y="341" width="2.3" height="15.0" fill="rgb(252,112,26)" rx="2" ry="2" />
<text  x="1086.45" y="351.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (65,996,401 samples, 0.70%)</title><rect x="401.0" y="149" width="8.3" height="15.0" fill="rgb(254,68,33)" rx="2" ry="2" />
<text  x="404.01" y="159.5" ></text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::operator (39,231,439 samples, 0.42%)</title><rect x="734.3" y="389" width="4.9" height="15.0" fill="rgb(239,68,43)" rx="2" ry="2" />
<text  x="737.30" y="399.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (16,310,188 samples, 0.17%)</title><rect x="737.2" y="341" width="2.0" height="15.0" fill="rgb(215,103,42)" rx="2" ry="2" />
<text  x="740.18" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::internal::ReturnSuccess&lt;void&gt;::call&lt;iox::cxx::function_ref&lt;void  (160,384,245 samples, 1.70%)</title><rect x="1138.8" y="373" width="20.1" height="15.0" fill="rgb(230,71,8)" rx="2" ry="2" />
<text  x="1141.76" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::capro::CaproMessage&gt;::optional (16,078,866 samples, 0.17%)</title><rect x="846.8" y="309" width="2.0" height="15.0" fill="rgb(248,98,19)" rx="2" ry="2" />
<text  x="849.76" y="319.5" ></text>
</g>
<g >
<title>do_el0_svc (5,726,643 samples, 0.06%)</title><rect x="716.6" y="261" width="0.7" height="15.0" fill="rgb(227,29,33)" rx="2" ry="2" />
<text  x="719.60" y="271.5" ></text>
</g>
<g >
<title>iox::posix::internal::createPosixCallBuilder&lt;long long, char const*, char**, int&gt; (14,985,999 samples, 0.16%)</title><rect x="658.3" y="373" width="1.9" height="15.0" fill="rgb(211,0,49)" rx="2" ry="2" />
<text  x="661.34" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;@plt (19,908,859 samples, 0.21%)</title><rect x="674.7" y="389" width="2.5" height="15.0" fill="rgb(252,116,17)" rx="2" ry="2" />
<text  x="677.66" y="399.5" ></text>
</g>
<g >
<title>__clock_gettime (33,708,291 samples, 0.36%)</title><rect x="65.7" y="261" width="4.2" height="15.0" fill="rgb(215,123,7)" rx="2" ry="2" />
<text  x="68.71" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (17,457,655 samples, 0.19%)</title><rect x="910.4" y="213" width="2.2" height="15.0" fill="rgb(213,221,30)" rx="2" ry="2" />
<text  x="913.36" y="223.5" ></text>
</g>
<g >
<title>__arm64_sys_futex (5,726,643 samples, 0.06%)</title><rect x="716.6" y="229" width="0.7" height="15.0" fill="rgb(213,31,29)" rx="2" ry="2" />
<text  x="719.60" y="239.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::destruct_value@plt (13,140,500 samples, 0.14%)</title><rect x="73.0" y="357" width="1.6" height="15.0" fill="rgb(216,163,20)" rx="2" ry="2" />
<text  x="75.98" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (12,977,837 samples, 0.14%)</title><rect x="39.0" y="373" width="1.7" height="15.0" fill="rgb(215,132,0)" rx="2" ry="2" />
<text  x="42.03" y="383.5" ></text>
</g>
<g >
<title>iox::runtime::stringToIpcMessageType@plt (30,655,702 samples, 0.33%)</title><rect x="699.9" y="405" width="3.8" height="15.0" fill="rgb(250,0,9)" rx="2" ry="2" />
<text  x="702.90" y="415.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;long&gt;::PosixCallVerificator (15,599,712 samples, 0.17%)</title><rect x="499.9" y="357" width="2.0" height="15.0" fill="rgb(250,158,6)" rx="2" ry="2" />
<text  x="502.93" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::string&lt;100ul&gt;::string (25,813,267 samples, 0.27%)</title><rect x="18.1" y="373" width="3.2" height="15.0" fill="rgb(205,73,24)" rx="2" ry="2" />
<text  x="21.11" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str@plt (44,369,497 samples, 0.47%)</title><rect x="703.7" y="405" width="5.6" height="15.0" fill="rgb(209,145,33)" rx="2" ry="2" />
<text  x="706.74" y="415.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::expected (36,325,811 samples, 0.39%)</title><rect x="268.1" y="357" width="4.6" height="15.0" fill="rgb(220,182,20)" rx="2" ry="2" />
<text  x="271.15" y="367.5" ></text>
</g>
<g >
<title>fpsimd_load_state (25,822,722 samples, 0.27%)</title><rect x="457.9" y="261" width="3.2" height="15.0" fill="rgb(249,57,44)" rx="2" ry="2" />
<text  x="460.87" y="271.5" ></text>
</g>
<g >
<title>std::mutex::lock (39,231,439 samples, 0.42%)</title><rect x="734.3" y="357" width="4.9" height="15.0" fill="rgb(254,152,26)" rx="2" ry="2" />
<text  x="737.30" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::~expected@plt (30,854,883 samples, 0.33%)</title><rect x="147.6" y="373" width="3.9" height="15.0" fill="rgb(220,177,5)" rx="2" ry="2" />
<text  x="150.64" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (3,361,410,379 samples, 35.72%)</title><rect x="717.3" y="421" width="421.5" height="15.0" fill="rgb(241,80,44)" rx="2" ry="2" />
<text  x="720.32" y="431.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>iox::runtime::IpcMessage::isValid (25,612,070 samples, 0.27%)</title><rect x="180.0" y="293" width="3.2" height="15.0" fill="rgb(245,105,6)" rx="2" ry="2" />
<text  x="183.00" y="303.5" ></text>
</g>
<g >
<title>__sys_recvfrom (928,536,753 samples, 9.87%)</title><rect x="328.2" y="213" width="116.4" height="15.0" fill="rgb(222,198,24)" rx="2" ry="2" />
<text  x="331.16" y="223.5" >__sys_recvfrom</text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::capro::CaproMessage&gt;::and_then@plt (15,321,107 samples, 0.16%)</title><rect x="797.2" y="325" width="1.9" height="15.0" fill="rgb(254,107,27)" rx="2" ry="2" />
<text  x="800.20" y="335.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long long, char const*, char**, int&gt;::operator (79,665,627 samples, 0.85%)</title><rect x="596.9" y="357" width="10.0" height="15.0" fill="rgb(225,62,7)" rx="2" ry="2" />
<text  x="599.92" y="367.5" ></text>
</g>
<g >
<title>__sched_text_start (22,577,420 samples, 0.24%)</title><rect x="424.3" y="53" width="2.8" height="15.0" fill="rgb(216,103,8)" rx="2" ry="2" />
<text  x="427.28" y="63.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::~variant@plt (45,112,650 samples, 0.48%)</title><rect x="215.0" y="373" width="5.7" height="15.0" fill="rgb(240,24,53)" rx="2" ry="2" />
<text  x="218.05" y="383.5" ></text>
</g>
<g >
<title>strlen@plt (50,412,601 samples, 0.54%)</title><rect x="542.6" y="357" width="6.3" height="15.0" fill="rgb(239,72,13)" rx="2" ry="2" />
<text  x="545.61" y="367.5" ></text>
</g>
<g >
<title>iox::posix::internal::createPosixCallBuilder&lt;int, int, int, int, void const*, unsigned int&gt; (15,725,420 samples, 0.17%)</title><rect x="548.9" y="373" width="2.0" height="15.0" fill="rgb(221,100,47)" rx="2" ry="2" />
<text  x="551.93" y="383.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (36,299,493 samples, 0.39%)</title><rect x="1113.0" y="357" width="4.6" height="15.0" fill="rgb(215,33,8)" rx="2" ry="2" />
<text  x="1116.03" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::internal::methodCallbackCaller&lt;void, iox::roudi::PortIntrospection&lt;iox::popo::PublisherPortUser, iox::popo::SubscriberPortUser&gt;&gt; (160,384,245 samples, 1.70%)</title><rect x="1138.8" y="309" width="20.1" height="15.0" fill="rgb(229,56,37)" rx="2" ry="2" />
<text  x="1141.76" y="319.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (7,713,603 samples, 0.08%)</title><rect x="716.4" y="533" width="0.9" height="15.0" fill="rgb(228,124,12)" rx="2" ry="2" />
<text  x="719.35" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (19,766,120 samples, 0.21%)</title><rect x="1093.0" y="229" width="2.5" height="15.0" fill="rgb(248,55,11)" rx="2" ry="2" />
<text  x="1096.03" y="239.5" ></text>
</g>
<g >
<title>do_notify_resume (18,116,528 samples, 0.19%)</title><rect x="1134.4" y="341" width="2.3" height="15.0" fill="rgb(224,44,39)" rx="2" ry="2" />
<text  x="1137.41" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::popo::PublisherPortData&gt;::has_value (417,151,206 samples, 4.43%)</title><rect x="860.2" y="309" width="52.4" height="15.0" fill="rgb(253,218,18)" rx="2" ry="2" />
<text  x="863.25" y="319.5" >iox::..</text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getNextIdx (19,886,245 samples, 0.21%)</title><rect x="110.3" y="341" width="2.5" height="15.0" fill="rgb(248,56,47)" rx="2" ry="2" />
<text  x="113.31" y="351.5" ></text>
</g>
<g >
<title>preempt_schedule_irq (22,577,420 samples, 0.24%)</title><rect x="424.3" y="37" width="2.8" height="15.0" fill="rgb(247,176,22)" rx="2" ry="2" />
<text  x="427.28" y="47.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::cxx::optional&lt;iox::popo::InterfacePortData&gt;, 4ul&gt;::begin@plt (19,589,613 samples, 0.21%)</title><rect x="787.8" y="309" width="2.5" height="15.0" fill="rgb(226,135,21)" rx="2" ry="2" />
<text  x="790.81" y="319.5" ></text>
</g>
<g >
<title>el0_sync (83,074,395 samples, 0.88%)</title><rect x="1124.0" y="357" width="10.4" height="15.0" fill="rgb(241,114,20)" rx="2" ry="2" />
<text  x="1127.00" y="367.5" ></text>
</g>
<g >
<title>iox::popo::BasePort::toBeDestroyed (58,614,381 samples, 0.62%)</title><rect x="767.9" y="341" width="7.4" height="15.0" fill="rgb(234,16,39)" rx="2" ry="2" />
<text  x="770.94" y="351.5" ></text>
</g>
<g >
<title>gic_handle_irq (23,533,255 samples, 0.25%)</title><rect x="917.0" y="261" width="2.9" height="15.0" fill="rgb(220,82,33)" rx="2" ry="2" />
<text  x="919.98" y="271.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (3,361,410,379 samples, 35.72%)</title><rect x="717.3" y="485" width="421.5" height="15.0" fill="rgb(218,56,2)" rx="2" ry="2" />
<text  x="720.32" y="495.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple..</text>
</g>
<g >
<title>iox::roudi::ProcessManager::monitorProcesses@plt (17,942,380 samples, 0.19%)</title><rect x="739.2" y="389" width="2.3" height="15.0" fill="rgb(211,93,16)" rx="2" ry="2" />
<text  x="742.22" y="399.5" ></text>
</g>
<g >
<title>gic_handle_irq (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="277" width="1.9" height="15.0" fill="rgb(249,86,21)" rx="2" ry="2" />
<text  x="1080.16" y="287.5" ></text>
</g>
<g >
<title>gic_handle_irq (16,616,526 samples, 0.18%)</title><rect x="648.6" y="341" width="2.1" height="15.0" fill="rgb(227,208,3)" rx="2" ry="2" />
<text  x="651.59" y="351.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (65,996,401 samples, 0.70%)</title><rect x="401.0" y="165" width="8.3" height="15.0" fill="rgb(253,187,2)" rx="2" ry="2" />
<text  x="404.01" y="175.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::emplace_at_index&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;@plt (18,284,953 samples, 0.19%)</title><rect x="268.1" y="341" width="2.3" height="15.0" fill="rgb(221,126,35)" rx="2" ry="2" />
<text  x="271.15" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::PublisherPortData*, 128ul&gt;::at@plt (43,108,427 samples, 0.46%)</title><rect x="914.5" y="293" width="5.4" height="15.0" fill="rgb(215,42,10)" rx="2" ry="2" />
<text  x="917.53" y="303.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (23,533,255 samples, 0.25%)</title><rect x="917.0" y="213" width="2.9" height="15.0" fill="rgb(229,163,43)" rx="2" ry="2" />
<text  x="919.98" y="223.5" ></text>
</g>
<g >
<title>__slab_free.isra.0 (33,746,747 samples, 0.36%)</title><rect x="422.9" y="85" width="4.2" height="15.0" fill="rgb(251,37,24)" rx="2" ry="2" />
<text  x="425.88" y="95.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;unsigned long, void&gt; (16,550,932 samples, 0.18%)</title><rect x="1136.7" y="405" width="2.1" height="15.0" fill="rgb(223,100,6)" rx="2" ry="2" />
<text  x="1139.68" y="415.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getSubscriberPortDataList (398,026,341 samples, 4.23%)</title><rect x="1033.5" y="325" width="49.9" height="15.0" fill="rgb(229,224,32)" rx="2" ry="2" />
<text  x="1036.54" y="335.5" >iox::..</text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (40,211,510 samples, 0.43%)</title><rect x="537.6" y="357" width="5.0" height="15.0" fill="rgb(252,108,8)" rx="2" ry="2" />
<text  x="540.57" y="367.5" ></text>
</g>
<g >
<title>iox::roudi::Process::isMonitored (86,323,117 samples, 0.92%)</title><rect x="743.6" y="373" width="10.8" height="15.0" fill="rgb(223,224,35)" rx="2" ry="2" />
<text  x="746.55" y="383.5" ></text>
</g>
<g >
<title>iox::algorithm::doesContainValue&lt;long long&gt;@plt (19,391,291 samples, 0.21%)</title><rect x="627.5" y="341" width="2.4" height="15.0" fill="rgb(251,11,38)" rx="2" ry="2" />
<text  x="630.47" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::convert::fromString&lt;int&gt; (539,173,640 samples, 5.73%)</title><rect x="576.5" y="373" width="67.6" height="15.0" fill="rgb(221,56,17)" rx="2" ry="2" />
<text  x="579.52" y="383.5" >iox::cx..</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::variant&lt;0ul, iox::posix::PosixCallResult&lt;long&gt; &gt; (40,225,744 samples, 0.43%)</title><rect x="485.8" y="325" width="5.0" height="15.0" fill="rgb(209,4,49)" rx="2" ry="2" />
<text  x="488.79" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::success&lt;iox::posix::PosixCallResult&lt;long&gt; &gt;::success&lt;iox::posix::PosixCallResult&lt;long&gt;&amp;&gt;@plt (45,408,534 samples, 0.48%)</title><rect x="282.7" y="357" width="5.7" height="15.0" fill="rgb(211,132,54)" rx="2" ry="2" />
<text  x="285.68" y="367.5" ></text>
</g>
<g >
<title>do_init_timer.isra.0 (17,976,772 samples, 0.19%)</title><rect x="373.2" y="165" width="2.2" height="15.0" fill="rgb(211,66,2)" rx="2" ry="2" />
<text  x="376.16" y="175.5" ></text>
</g>
<g >
<title>__skb_wait_for_more_packets (241,768,899 samples, 2.57%)</title><rect x="364.1" y="181" width="30.3" height="15.0" fill="rgb(205,67,31)" rx="2" ry="2" />
<text  x="367.12" y="191.5" >__..</text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::IteratorBase (17,648,922 samples, 0.19%)</title><rect x="1100.3" y="357" width="2.2" height="15.0" fill="rgb(238,180,31)" rx="2" ry="2" />
<text  x="1103.26" y="367.5" ></text>
</g>
<g >
<title>import_single_range (23,568,575 samples, 0.25%)</title><rect x="444.6" y="213" width="2.9" height="15.0" fill="rgb(251,77,41)" rx="2" ry="2" />
<text  x="447.58" y="223.5" ></text>
</g>
<g >
<title>irq_exit (16,616,526 samples, 0.18%)</title><rect x="648.6" y="309" width="2.1" height="15.0" fill="rgb(248,113,43)" rx="2" ry="2" />
<text  x="651.59" y="319.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleSubscriberPorts (1,201,245,339 samples, 12.76%)</title><rect x="932.8" y="341" width="150.6" height="15.0" fill="rgb(221,103,4)" rx="2" ry="2" />
<text  x="935.84" y="351.5" >iox::roudi::PortMan..</text>
</g>
<g >
<title>std::forward&lt;iox::posix::PosixCallResult&lt;int&gt; &gt;@plt (38,054,510 samples, 0.40%)</title><rect x="465.8" y="325" width="4.7" height="15.0" fill="rgb(250,0,9)" rx="2" ry="2" />
<text  x="468.75" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (79,106,444 samples, 0.84%)</title><rect x="60.0" y="325" width="9.9" height="15.0" fill="rgb(253,181,4)" rx="2" ry="2" />
<text  x="63.02" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (7,713,603 samples, 0.08%)</title><rect x="716.4" y="421" width="0.9" height="15.0" fill="rgb(207,51,48)" rx="2" ry="2" />
<text  x="719.35" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (63,855,172 samples, 0.68%)</title><rect x="386.4" y="117" width="8.0" height="15.0" fill="rgb(241,87,42)" rx="2" ry="2" />
<text  x="389.42" y="127.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="117" width="1.9" height="15.0" fill="rgb(252,202,13)" rx="2" ry="2" />
<text  x="1080.16" y="127.5" ></text>
</g>
<g >
<title>iox::cxx::convert::stringIsNumberWithErrorMessage@plt (17,116,552 samples, 0.18%)</title><rect x="646.4" y="373" width="2.2" height="15.0" fill="rgb(253,172,11)" rx="2" ry="2" />
<text  x="649.45" y="383.5" ></text>
</g>
<g >
<title>schedule (68,064,344 samples, 0.72%)</title><rect x="1125.9" y="229" width="8.5" height="15.0" fill="rgb(216,202,54)" rx="2" ry="2" />
<text  x="1128.88" y="239.5" ></text>
</g>
<g >
<title>irq_exit (19,766,120 samples, 0.21%)</title><rect x="1093.0" y="293" width="2.5" height="15.0" fill="rgb(244,162,8)" rx="2" ry="2" />
<text  x="1096.03" y="303.5" ></text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::Proxy::~Proxy (18,658,060 samples, 0.20%)</title><rect x="732.0" y="389" width="2.3" height="15.0" fill="rgb(208,196,41)" rx="2" ry="2" />
<text  x="734.96" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (3,361,410,379 samples, 35.72%)</title><rect x="717.3" y="453" width="421.5" height="15.0" fill="rgb(216,94,24)" rx="2" ry="2" />
<text  x="720.32" y="463.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator==&lt;false&gt; (58,925,727 samples, 0.63%)</title><rect x="87.2" y="325" width="7.4" height="15.0" fill="rgb(254,61,41)" rx="2" ry="2" />
<text  x="90.17" y="335.5" ></text>
</g>
<g >
<title>std::mutex::unlock (18,658,060 samples, 0.20%)</title><rect x="732.0" y="373" width="2.3" height="15.0" fill="rgb(237,153,50)" rx="2" ry="2" />
<text  x="734.96" y="383.5" ></text>
</g>
<g >
<title>std::operator&amp;@plt (52,167,469 samples, 0.55%)</title><rect x="691.4" y="389" width="6.6" height="15.0" fill="rgb(206,117,21)" rx="2" ry="2" />
<text  x="694.44" y="399.5" ></text>
</g>
<g >
<title>irq_exit (17,457,655 samples, 0.19%)</title><rect x="910.4" y="245" width="2.2" height="15.0" fill="rgb(229,39,6)" rx="2" ry="2" />
<text  x="913.36" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (7,713,603 samples, 0.08%)</title><rect x="716.4" y="437" width="0.9" height="15.0" fill="rgb(245,218,41)" rx="2" ry="2" />
<text  x="719.35" y="447.5" ></text>
</g>
<g >
<title>unix_write_space (45,783,191 samples, 0.49%)</title><rect x="433.5" y="85" width="5.8" height="15.0" fill="rgb(209,208,20)" rx="2" ry="2" />
<text  x="436.54" y="95.5" ></text>
</g>
<g >
<title>el0_svc (123,134,855 samples, 1.31%)</title><rect x="299.1" y="293" width="15.5" height="15.0" fill="rgb(228,179,11)" rx="2" ry="2" />
<text  x="302.15" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator!=&lt;false&gt; (21,139,433 samples, 0.22%)</title><rect x="49.9" y="357" width="2.7" height="15.0" fill="rgb(214,175,44)" rx="2" ry="2" />
<text  x="52.92" y="367.5" ></text>
</g>
<g >
<title>__clock_gettime (36,299,493 samples, 0.39%)</title><rect x="1113.0" y="341" width="4.6" height="15.0" fill="rgb(229,22,22)" rx="2" ry="2" />
<text  x="1116.03" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="229" width="1.9" height="15.0" fill="rgb(237,210,10)" rx="2" ry="2" />
<text  x="1080.16" y="239.5" ></text>
</g>
<g >
<title>__schedule (5,716,630 samples, 0.06%)</title><rect x="716.6" y="149" width="0.7" height="15.0" fill="rgb(205,184,3)" rx="2" ry="2" />
<text  x="719.60" y="159.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::and_then@plt (16,355,141 samples, 0.17%)</title><rect x="14.1" y="389" width="2.0" height="15.0" fill="rgb(233,112,5)" rx="2" ry="2" />
<text  x="17.09" y="399.5" ></text>
</g>
<g >
<title>el0_irq_naked (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="293" width="1.9" height="15.0" fill="rgb(230,14,22)" rx="2" ry="2" />
<text  x="1080.16" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator (14,930,551 samples, 0.16%)</title><rect x="108.4" y="341" width="1.9" height="15.0" fill="rgb(232,122,4)" rx="2" ry="2" />
<text  x="111.44" y="351.5" ></text>
</g>
<g >
<title>iox_sem_timedwait (5,737,946 samples, 0.06%)</title><rect x="716.6" y="357" width="0.7" height="15.0" fill="rgb(211,99,34)" rx="2" ry="2" />
<text  x="719.60" y="367.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (19,070,765 samples, 0.20%)</title><rect x="1115.2" y="229" width="2.4" height="15.0" fill="rgb(209,110,7)" rx="2" ry="2" />
<text  x="1118.19" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3,361,410,379 samples, 35.72%)</title><rect x="717.3" y="501" width="421.5" height="15.0" fill="rgb(211,25,13)" rx="2" ry="2" />
<text  x="720.32" y="511.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>iox::cxx::not_null&lt;iox::popo::ChunkReceiverData&lt;256u, iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;* const, void&gt;::operator iox::popo::ChunkReceiverData&lt;256u, iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;* const@plt (17,610,420 samples, 0.19%)</title><rect x="1009.5" y="293" width="2.2" height="15.0" fill="rgb(212,34,30)" rx="2" ry="2" />
<text  x="1012.46" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::posix::PosixCallResult&lt;long&gt;&amp;&gt;@plt (16,348,646 samples, 0.17%)</title><rect x="497.9" y="341" width="2.0" height="15.0" fill="rgb(245,160,29)" rx="2" ry="2" />
<text  x="500.88" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::cxx::optional&lt;iox::popo::SubscriberPortData&gt;, 256ul&gt;::end (18,121,663 samples, 0.19%)</title><rect x="1079.1" y="309" width="2.3" height="15.0" fill="rgb(223,65,48)" rx="2" ry="2" />
<text  x="1082.11" y="319.5" ></text>
</g>
<g >
<title>el0_svc (1,076,570,695 samples, 11.44%)</title><rect x="321.0" y="277" width="135.0" height="15.0" fill="rgb(221,208,36)" rx="2" ry="2" />
<text  x="324.04" y="287.5" >el0_svc</text>
</g>
<g >
<title>futex_wait_queue_me (5,716,630 samples, 0.06%)</title><rect x="716.6" y="181" width="0.7" height="15.0" fill="rgb(236,112,20)" rx="2" ry="2" />
<text  x="719.60" y="191.5" ></text>
</g>
<g >
<title>operator new (40,225,744 samples, 0.43%)</title><rect x="485.8" y="309" width="5.0" height="15.0" fill="rgb(241,195,51)" rx="2" ry="2" />
<text  x="488.79" y="319.5" ></text>
</g>
<g >
<title>iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run (160,435,185 samples, 1.70%)</title><rect x="1138.8" y="405" width="20.1" height="15.0" fill="rgb(215,53,16)" rx="2" ry="2" />
<text  x="1141.76" y="415.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortMultiProducer::SubscriberPortMultiProducer (54,422,401 samples, 0.58%)</title><rect x="1004.8" y="325" width="6.9" height="15.0" fill="rgb(251,42,18)" rx="2" ry="2" />
<text  x="1007.85" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::SubscriberPortData*, 256ul&gt;::~vector (22,866,191 samples, 0.24%)</title><rect x="935.5" y="325" width="2.9" height="15.0" fill="rgb(231,48,28)" rx="2" ry="2" />
<text  x="938.52" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size@plt (40,985,333 samples, 0.44%)</title><rect x="679.1" y="389" width="5.1" height="15.0" fill="rgb(219,17,33)" rx="2" ry="2" />
<text  x="682.06" y="399.5" ></text>
</g>
<g >
<title>__handle_domain_irq (19,070,765 samples, 0.20%)</title><rect x="1115.2" y="293" width="2.4" height="15.0" fill="rgb(246,105,36)" rx="2" ry="2" />
<text  x="1118.19" y="303.5" ></text>
</g>
<g >
<title>iox::popo::PublisherPortRouDi::getMembers@plt (15,981,856 samples, 0.17%)</title><rect x="839.9" y="325" width="2.0" height="15.0" fill="rgb(220,55,7)" rx="2" ry="2" />
<text  x="842.87" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::string&lt;100ul&gt;::operator std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (32,855,428 samples, 0.35%)</title><rect x="124.6" y="325" width="4.1" height="15.0" fill="rgb(223,218,16)" rx="2" ry="2" />
<text  x="127.61" y="335.5" ></text>
</g>
<g >
<title>iox::posix::Semaphore::timedWait (33,839,999 samples, 0.36%)</title><rect x="1158.9" y="389" width="4.2" height="15.0" fill="rgb(213,48,18)" rx="2" ry="2" />
<text  x="1161.90" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::not_null&lt;iox::popo::ChunkDistributorData&lt;iox::DefaultChunkDistributorConfig, iox::popo::ThreadSafePolicy, iox::popo::ChunkQueuePusher&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt; &gt;* const, void&gt;::operator iox::popo::ChunkDistributorData&lt;iox::DefaultChunkDistributorConfig, iox::popo::ThreadSafePolicy, iox::popo::ChunkQueuePusher&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt; &gt;* const@plt (16,066,575 samples, 0.17%)</title><rect x="837.9" y="293" width="2.0" height="15.0" fill="rgb(234,99,31)" rx="2" ry="2" />
<text  x="840.85" y="303.5" ></text>
</g>
<g >
<title>__schedule (76,703,626 samples, 0.81%)</title><rect x="384.8" y="133" width="9.6" height="15.0" fill="rgb(209,164,45)" rx="2" ry="2" />
<text  x="387.81" y="143.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (83,074,395 samples, 0.88%)</title><rect x="1124.0" y="293" width="10.4" height="15.0" fill="rgb(235,122,45)" rx="2" ry="2" />
<text  x="1127.00" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str@plt (15,196,170 samples, 0.16%)</title><rect x="677.2" y="389" width="1.9" height="15.0" fill="rgb(248,166,51)" rx="2" ry="2" />
<text  x="680.15" y="399.5" ></text>
</g>
<g >
<title>skb_release_all (143,795,869 samples, 1.53%)</title><rect x="421.2" y="149" width="18.1" height="15.0" fill="rgb(208,85,2)" rx="2" ry="2" />
<text  x="424.25" y="159.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (214,180,480 samples, 2.28%)</title><rect x="1163.1" y="437" width="26.9" height="15.0" fill="rgb(205,83,13)" rx="2" ry="2" />
<text  x="1166.15" y="447.5" >s..</text>
</g>
<g >
<title>iox::roudi::ProcessManager::findProcess (429,053,049 samples, 4.56%)</title><rect x="85.0" y="357" width="53.8" height="15.0" fill="rgb(216,178,51)" rx="2" ry="2" />
<text  x="87.97" y="367.5" >iox::..</text>
</g>
<g >
<title>_raw_spin_unlock_bh (29,382,428 samples, 0.31%)</title><rect x="301.0" y="197" width="3.7" height="15.0" fill="rgb(207,195,26)" rx="2" ry="2" />
<text  x="303.98" y="207.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (24,314,622 samples, 0.26%)</title><rect x="557.5" y="293" width="3.0" height="15.0" fill="rgb(232,3,31)" rx="2" ry="2" />
<text  x="560.48" y="303.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::doDiscoveryForSubscriberPort (107,894,425 samples, 1.15%)</title><rect x="1020.0" y="325" width="13.5" height="15.0" fill="rgb(227,59,21)" rx="2" ry="2" />
<text  x="1023.02" y="335.5" ></text>
</g>
<g >
<title>iox::popo::BasePort::getMembers@plt (18,913,613 samples, 0.20%)</title><rect x="802.2" y="325" width="2.3" height="15.0" fill="rgb(219,180,50)" rx="2" ry="2" />
<text  x="805.15" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (160,384,245 samples, 1.70%)</title><rect x="1138.8" y="325" width="20.1" height="15.0" fill="rgb(251,134,19)" rx="2" ry="2" />
<text  x="1141.76" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::expected@plt (16,086,067 samples, 0.17%)</title><rect x="188.9" y="373" width="2.0" height="15.0" fill="rgb(247,193,27)" rx="2" ry="2" />
<text  x="191.87" y="383.5" ></text>
</g>
<g >
<title>std::move&lt;iox::posix::PosixCallResult&lt;int&gt;&amp;&gt;@plt (14,338,940 samples, 0.15%)</title><rect x="470.5" y="341" width="1.8" height="15.0" fill="rgb(214,18,48)" rx="2" ry="2" />
<text  x="473.52" y="351.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getPublisherPortDataList (491,767,029 samples, 5.23%)</title><rect x="860.2" y="325" width="61.7" height="15.0" fill="rgb(205,214,27)" rx="2" ry="2" />
<text  x="863.25" y="335.5" >iox::r..</text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool@plt (30,612,321 samples, 0.33%)</title><rect x="712.5" y="405" width="3.9" height="15.0" fill="rgb(238,155,43)" rx="2" ry="2" />
<text  x="715.51" y="415.5" ></text>
</g>
<g >
<title>iox::roudi::FixedPositionContainer&lt;iox::popo::PublisherPortData, 128ul&gt;::content (74,615,823 samples, 0.79%)</title><rect x="912.6" y="309" width="9.3" height="15.0" fill="rgb(251,123,13)" rx="2" ry="2" />
<text  x="915.55" y="319.5" ></text>
</g>
<g >
<title>work_pending (18,116,528 samples, 0.19%)</title><rect x="1134.4" y="357" width="2.3" height="15.0" fill="rgb(228,67,45)" rx="2" ry="2" />
<text  x="1137.41" y="367.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortMultiProducer::tryGetCaProMessage (87,007,471 samples, 0.92%)</title><rect x="1022.6" y="309" width="10.9" height="15.0" fill="rgb(249,169,9)" rx="2" ry="2" />
<text  x="1025.64" y="319.5" ></text>
</g>
<g >
<title>__fdget (31,256,959 samples, 0.33%)</title><rect x="310.7" y="197" width="3.9" height="15.0" fill="rgb(224,180,1)" rx="2" ry="2" />
<text  x="313.67" y="207.5" ></text>
</g>
<g >
<title>recvfrom (1,117,217,063 samples, 11.87%)</title><rect x="321.0" y="325" width="140.1" height="15.0" fill="rgb(226,162,42)" rx="2" ry="2" />
<text  x="324.04" y="335.5" >recvfrom</text>
</g>
<g >
<title>__clock_gettime (21,023,610 samples, 0.22%)</title><rect x="63.1" y="277" width="2.6" height="15.0" fill="rgb(221,145,37)" rx="2" ry="2" />
<text  x="66.07" y="287.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::isInvalidIterOrDifferentLists@plt (16,411,884 samples, 0.17%)</title><rect x="97.9" y="325" width="2.0" height="15.0" fill="rgb(233,19,52)" rx="2" ry="2" />
<text  x="100.87" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator==&lt;false&gt; (57,645,088 samples, 0.61%)</title><rect x="1102.5" y="341" width="7.2" height="15.0" fill="rgb(209,213,51)" rx="2" ry="2" />
<text  x="1105.47" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::~optional@plt (22,307,972 samples, 0.24%)</title><rect x="41.2" y="373" width="2.8" height="15.0" fill="rgb(209,116,33)" rx="2" ry="2" />
<text  x="44.23" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::begin (18,511,998 samples, 0.20%)</title><rect x="174.2" y="277" width="2.4" height="15.0" fill="rgb(219,132,20)" rx="2" ry="2" />
<text  x="177.23" y="287.5" ></text>
</g>
<g >
<title>el0_irq_naked (23,533,255 samples, 0.25%)</title><rect x="917.0" y="277" width="2.9" height="15.0" fill="rgb(214,199,42)" rx="2" ry="2" />
<text  x="919.98" y="287.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;int&gt;::failureReturnValue&lt;int&gt;@plt (49,715,673 samples, 0.53%)</title><rect x="224.8" y="373" width="6.2" height="15.0" fill="rgb(238,207,24)" rx="2" ry="2" />
<text  x="227.81" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::has_error@plt (16,441,235 samples, 0.17%)</title><rect x="145.6" y="373" width="2.0" height="15.0" fill="rgb(249,122,7)" rx="2" ry="2" />
<text  x="148.58" y="383.5" ></text>
</g>
<g >
<title>el0_irq_naked (16,616,526 samples, 0.18%)</title><rect x="648.6" y="357" width="2.1" height="15.0" fill="rgb(239,99,17)" rx="2" ry="2" />
<text  x="651.59" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::MethodCallback&lt;void&gt;::operator (160,384,245 samples, 1.70%)</title><rect x="1138.8" y="389" width="20.1" height="15.0" fill="rgb(223,77,52)" rx="2" ry="2" />
<text  x="1141.76" y="399.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::has_error@plt (16,616,526 samples, 0.18%)</title><rect x="648.6" y="373" width="2.1" height="15.0" fill="rgb(250,69,28)" rx="2" ry="2" />
<text  x="651.59" y="383.5" ></text>
</g>
<g >
<title>std::__addressof&lt;iox::roudi::ProcessManager::updateLivelinessOfProcess (22,010,975 samples, 0.23%)</title><rect x="47.2" y="341" width="2.7" height="15.0" fill="rgb(233,140,6)" rx="2" ry="2" />
<text  x="50.16" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long&gt;, iox::posix::PosixCallResult&lt;long&gt; &gt;::variant&lt;0ul, iox::posix::PosixCallResult&lt;long&gt; &gt;@plt (22,986,825 samples, 0.24%)</title><rect x="495.0" y="341" width="2.9" height="15.0" fill="rgb(208,221,54)" rx="2" ry="2" />
<text  x="498.00" y="351.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortRouDi::SubscriberPortRouDi (26,612,817 samples, 0.28%)</title><rect x="1016.7" y="325" width="3.3" height="15.0" fill="rgb(234,192,32)" rx="2" ry="2" />
<text  x="1019.68" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getPrevIdx@plt (28,990,010 samples, 0.31%)</title><rect x="89.1" y="293" width="3.6" height="15.0" fill="rgb(252,150,7)" rx="2" ry="2" />
<text  x="92.07" y="303.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (34,096,903 samples, 0.36%)</title><rect x="1158.9" y="485" width="4.2" height="15.0" fill="rgb(245,223,15)" rx="2" ry="2" />
<text  x="1161.87" y="495.5" ></text>
</g>
<g >
<title>__errno_location (38,421,422 samples, 0.41%)</title><rect x="245.5" y="357" width="4.8" height="15.0" fill="rgb(214,37,48)" rx="2" ry="2" />
<text  x="248.46" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::~expected (124,287,534 samples, 1.32%)</title><rect x="192.9" y="373" width="15.6" height="15.0" fill="rgb(251,159,1)" rx="2" ry="2" />
<text  x="195.90" y="383.5" ></text>
</g>
<g >
<title>memcpy@plt (68,419,958 samples, 0.73%)</title><rect x="516.8" y="357" width="8.6" height="15.0" fill="rgb(253,72,3)" rx="2" ry="2" />
<text  x="519.80" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (20,905,821 samples, 0.22%)</title><rect x="550.9" y="373" width="2.6" height="15.0" fill="rgb(208,113,6)" rx="2" ry="2" />
<text  x="553.90" y="383.5" ></text>
</g>
<g >
<title>unix_destruct_scm (97,004,006 samples, 1.03%)</title><rect x="427.1" y="117" width="12.2" height="15.0" fill="rgb(224,135,6)" rx="2" ry="2" />
<text  x="430.12" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (16,042,646 samples, 0.17%)</title><rect x="525.4" y="357" width="2.0" height="15.0" fill="rgb(208,220,47)" rx="2" ry="2" />
<text  x="528.38" y="367.5" ></text>
</g>
<g >
<title>_raw_write_lock_irqsave (14,176,047 samples, 0.15%)</title><rect x="304.7" y="197" width="1.7" height="15.0" fill="rgb(236,189,21)" rx="2" ry="2" />
<text  x="307.67" y="207.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (7,713,603 samples, 0.08%)</title><rect x="716.4" y="453" width="0.9" height="15.0" fill="rgb(254,149,51)" rx="2" ry="2" />
<text  x="719.35" y="463.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortMultiProducer::~SubscriberPortMultiProducer@plt (17,661,005 samples, 0.19%)</title><rect x="775.3" y="341" width="2.2" height="15.0" fill="rgb(249,107,16)" rx="2" ry="2" />
<text  x="778.28" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::internal::call_at_index&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::destructor (81,927,055 samples, 0.87%)</title><rect x="198.2" y="341" width="10.3" height="15.0" fill="rgb(236,152,11)" rx="2" ry="2" />
<text  x="201.21" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::~optional (18,542,416 samples, 0.20%)</title><rect x="74.6" y="357" width="2.4" height="15.0" fill="rgb(220,92,49)" rx="2" ry="2" />
<text  x="77.63" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator* (31,510,153 samples, 0.33%)</title><rect x="99.9" y="341" width="4.0" height="15.0" fill="rgb(220,199,42)" rx="2" ry="2" />
<text  x="102.93" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (7,713,603 samples, 0.08%)</title><rect x="716.4" y="501" width="0.9" height="15.0" fill="rgb(223,30,5)" rx="2" ry="2" />
<text  x="719.35" y="511.5" ></text>
</g>
<g >
<title>iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run (34,096,903 samples, 0.36%)</title><rect x="1158.9" y="405" width="4.2" height="15.0" fill="rgb(220,103,36)" rx="2" ry="2" />
<text  x="1161.87" y="415.5" ></text>
</g>
<g >
<title>rcu_core (19,766,120 samples, 0.21%)</title><rect x="1093.0" y="245" width="2.5" height="15.0" fill="rgb(229,158,39)" rx="2" ry="2" />
<text  x="1096.03" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (30,916,649 samples, 0.33%)</title><rect x="375.4" y="133" width="3.9" height="15.0" fill="rgb(224,159,11)" rx="2" ry="2" />
<text  x="378.42" y="143.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getPrevIdx@plt (39,996,166 samples, 0.42%)</title><rect x="1104.7" y="293" width="5.0" height="15.0" fill="rgb(228,80,12)" rx="2" ry="2" />
<text  x="1107.69" y="303.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (5,737,946 samples, 0.06%)</title><rect x="716.6" y="325" width="0.7" height="15.0" fill="rgb(254,210,7)" rx="2" ry="2" />
<text  x="719.60" y="335.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (14,679,050 samples, 0.16%)</title><rect x="126.9" y="309" width="1.8" height="15.0" fill="rgb(250,165,6)" rx="2" ry="2" />
<text  x="129.89" y="319.5" ></text>
</g>
<g >
<title>irq_exit (24,314,622 samples, 0.26%)</title><rect x="557.5" y="309" width="3.0" height="15.0" fill="rgb(226,78,17)" rx="2" ry="2" />
<text  x="560.48" y="319.5" ></text>
</g>
<g >
<title>schedule_timeout (151,627,350 samples, 1.61%)</title><rect x="375.4" y="165" width="19.0" height="15.0" fill="rgb(236,198,46)" rx="2" ry="2" />
<text  x="378.42" y="175.5" ></text>
</g>
<g >
<title>iox::popo::SubscriberPortUser::getSubscriptionState (140,402,122 samples, 1.49%)</title><rect x="1141.2" y="245" width="17.6" height="15.0" fill="rgb(218,38,40)" rx="2" ry="2" />
<text  x="1144.22" y="255.5" ></text>
</g>
<g >
<title>iox::roudi::PortIntrospection&lt;iox::popo::PublisherPortUser, iox::popo::SubscriberPortUser&gt;::send (160,384,245 samples, 1.70%)</title><rect x="1138.8" y="293" width="20.1" height="15.0" fill="rgb(227,121,30)" rx="2" ry="2" />
<text  x="1141.76" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::isInvalidIterator (39,996,166 samples, 0.42%)</title><rect x="1104.7" y="309" width="5.0" height="15.0" fill="rgb(226,206,11)" rx="2" ry="2" />
<text  x="1107.69" y="319.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long long, char const*, char**, int&gt;::PosixCallBuilder (18,721,339 samples, 0.20%)</title><rect x="590.0" y="357" width="2.3" height="15.0" fill="rgb(222,64,3)" rx="2" ry="2" />
<text  x="593.00" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::success&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~success@plt (34,170,082 samples, 0.36%)</title><rect x="210.8" y="373" width="4.2" height="15.0" fill="rgb(252,152,39)" rx="2" ry="2" />
<text  x="213.76" y="383.5" ></text>
</g>
<g >
<title>__handle_domain_irq (23,533,255 samples, 0.25%)</title><rect x="917.0" y="245" width="2.9" height="15.0" fill="rgb(205,0,30)" rx="2" ry="2" />
<text  x="919.98" y="255.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::SubscriberPortData*, 256ul&gt;::at (16,494,611 samples, 0.18%)</title><rect x="1081.4" y="293" width="2.0" height="15.0" fill="rgb(230,182,27)" rx="2" ry="2" />
<text  x="1084.38" y="303.5" ></text>
</g>
<g >
<title>__handle_domain_irq (16,499,142 samples, 0.18%)</title><rect x="682.1" y="341" width="2.1" height="15.0" fill="rgb(220,54,15)" rx="2" ry="2" />
<text  x="685.13" y="351.5" ></text>
</g>
<g >
<title>iox::popo::BasePort::BasePort (16,766,588 samples, 0.18%)</title><rect x="1004.8" y="309" width="2.1" height="15.0" fill="rgb(226,13,22)" rx="2" ry="2" />
<text  x="1007.85" y="319.5" ></text>
</g>
<g >
<title>iox::roudi::RouDi::processRuntimeMessages (5,487,366,607 samples, 58.30%)</title><rect x="10.0" y="405" width="688.0" height="15.0" fill="rgb(249,198,23)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >iox::roudi::RouDi::processRuntimeMessages</text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::value (17,220,300 samples, 0.18%)</title><rect x="115.0" y="325" width="2.1" height="15.0" fill="rgb(246,42,46)" rx="2" ry="2" />
<text  x="117.99" y="335.5" ></text>
</g>
<g >
<title>sock_setsockopt (91,877,896 samples, 0.98%)</title><rect x="299.1" y="213" width="11.6" height="15.0" fill="rgb(227,218,54)" rx="2" ry="2" />
<text  x="302.15" y="223.5" ></text>
</g>
<g >
<title>iox::posix::Semaphore::timedWait (7,713,603 samples, 0.08%)</title><rect x="716.4" y="389" width="0.9" height="15.0" fill="rgb(252,207,33)" rx="2" ry="2" />
<text  x="719.35" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (16,499,142 samples, 0.18%)</title><rect x="682.1" y="309" width="2.1" height="15.0" fill="rgb(220,3,48)" rx="2" ry="2" />
<text  x="685.13" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::popo::SubscriberPortData&gt;::has_value (363,410,067 samples, 3.86%)</title><rect x="1033.5" y="309" width="45.6" height="15.0" fill="rgb(254,36,44)" rx="2" ry="2" />
<text  x="1036.54" y="319.5" >iox:..</text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::ServerPortData*, 128ul&gt;::begin@plt (37,339,045 samples, 0.40%)</title><rect x="763.3" y="341" width="4.6" height="15.0" fill="rgb(228,25,18)" rx="2" ry="2" />
<text  x="766.25" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (298,039,047 samples, 3.17%)</title><rect x="151.5" y="357" width="37.4" height="15.0" fill="rgb(252,116,14)" rx="2" ry="2" />
<text  x="154.50" y="367.5" >iox..</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::emplace_at_index&lt;0ul, iox::posix::PosixCallResult&lt;long long&gt; &gt; (15,046,513 samples, 0.16%)</title><rect x="617.7" y="309" width="1.9" height="15.0" fill="rgb(211,46,17)" rx="2" ry="2" />
<text  x="620.67" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::string&lt;100ul&gt;::string@plt (13,857,810 samples, 0.15%)</title><rect x="21.3" y="389" width="1.8" height="15.0" fill="rgb(212,79,16)" rx="2" ry="2" />
<text  x="24.35" y="399.5" ></text>
</g>
<g >
<title>__gthread_active_p (22,921,251 samples, 0.24%)</title><rect x="734.3" y="341" width="2.9" height="15.0" fill="rgb(205,199,47)" rx="2" ry="2" />
<text  x="737.30" y="351.5" ></text>
</g>
<g >
<title>gic_handle_irq (17,457,655 samples, 0.19%)</title><rect x="910.4" y="277" width="2.2" height="15.0" fill="rgb(230,82,53)" rx="2" ry="2" />
<text  x="913.36" y="287.5" ></text>
</g>
<g >
<title>iox::cxx::convert::stringIsNumberWithErrorMessage (18,593,588 samples, 0.20%)</title><rect x="644.1" y="373" width="2.3" height="15.0" fill="rgb(241,40,51)" rx="2" ry="2" />
<text  x="647.12" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (32,461,811 samples, 0.34%)</title><rect x="154.1" y="261" width="4.1" height="15.0" fill="rgb(243,90,53)" rx="2" ry="2" />
<text  x="157.13" y="271.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getConditionVariableDataList (39,220,416 samples, 0.42%)</title><rect x="779.9" y="325" width="4.9" height="15.0" fill="rgb(231,164,48)" rx="2" ry="2" />
<text  x="782.89" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (51,969,312 samples, 0.55%)</title><rect x="668.1" y="389" width="6.6" height="15.0" fill="rgb(220,30,29)" rx="2" ry="2" />
<text  x="671.14" y="399.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallVerificator&lt;long&gt;::failureReturnValue&lt;int&gt; (28,237,266 samples, 0.30%)</title><rect x="504.2" y="357" width="3.6" height="15.0" fill="rgb(205,171,6)" rx="2" ry="2" />
<text  x="507.22" y="367.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getNodeDataList (20,872,049 samples, 0.22%)</title><rect x="790.3" y="325" width="2.6" height="15.0" fill="rgb(219,20,50)" rx="2" ry="2" />
<text  x="793.27" y="335.5" ></text>
</g>
<g >
<title>skb_release_all (29,376,206 samples, 0.31%)</title><rect x="439.3" y="165" width="3.7" height="15.0" fill="rgb(211,9,23)" rx="2" ry="2" />
<text  x="442.28" y="175.5" ></text>
</g>
<g >
<title>el0_irq_naked (19,070,765 samples, 0.20%)</title><rect x="1115.2" y="325" width="2.4" height="15.0" fill="rgb(250,73,17)" rx="2" ry="2" />
<text  x="1118.19" y="335.5" ></text>
</g>
<g >
<title>do_futex (5,726,643 samples, 0.06%)</title><rect x="716.6" y="213" width="0.7" height="15.0" fill="rgb(230,162,29)" rx="2" ry="2" />
<text  x="719.60" y="223.5" ></text>
</g>
<g >
<title>iox::cxx::convert::stringIsNumber (14,843,337 samples, 0.16%)</title><rect x="12.2" y="389" width="1.9" height="15.0" fill="rgb(244,218,33)" rx="2" ry="2" />
<text  x="15.23" y="399.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleInterfaces (16,520,222 samples, 0.18%)</title><rect x="1091.0" y="357" width="2.0" height="15.0" fill="rgb(206,33,54)" rx="2" ry="2" />
<text  x="1093.95" y="367.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (214,180,480 samples, 2.28%)</title><rect x="1163.1" y="533" width="26.9" height="15.0" fill="rgb(226,136,15)" rx="2" ry="2" />
<text  x="1166.15" y="543.5" >[..</text>
</g>
<g >
<title>skb_free_head (46,791,863 samples, 0.50%)</title><rect x="421.2" y="117" width="5.9" height="15.0" fill="rgb(254,60,26)" rx="2" ry="2" />
<text  x="424.25" y="127.5" ></text>
</g>
<g >
<title>el0_svc (83,074,395 samples, 0.88%)</title><rect x="1124.0" y="325" width="10.4" height="15.0" fill="rgb(223,72,21)" rx="2" ry="2" />
<text  x="1127.00" y="335.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (3,361,410,379 samples, 35.72%)</title><rect x="717.3" y="469" width="421.5" height="15.0" fill="rgb(209,87,39)" rx="2" ry="2" />
<text  x="720.32" y="479.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>proc_free_inode (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="165" width="1.9" height="15.0" fill="rgb(205,54,42)" rx="2" ry="2" />
<text  x="1080.16" y="175.5" ></text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::timedReceive (3,326,672,382 samples, 35.35%)</title><rect x="138.8" y="389" width="417.0" height="15.0" fill="rgb(227,140,21)" rx="2" ry="2" />
<text  x="141.76" y="399.5" >iox::runtime::IpcInterfaceBase::timedReceive</text>
</g>
<g >
<title>__pthread_mutex_lock (35,982,579 samples, 0.38%)</title><rect x="25.5" y="309" width="4.5" height="15.0" fill="rgb(207,64,28)" rx="2" ry="2" />
<text  x="28.46" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::value@plt (16,049,710 samples, 0.17%)</title><rect x="190.9" y="373" width="2.0" height="15.0" fill="rgb(207,71,41)" rx="2" ry="2" />
<text  x="193.89" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::isInvalidIterator (16,667,579 samples, 0.18%)</title><rect x="106.3" y="325" width="2.1" height="15.0" fill="rgb(238,27,52)" rx="2" ry="2" />
<text  x="109.35" y="335.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt;@plt (62,197,657 samples, 0.66%)</title><rect x="560.5" y="357" width="7.8" height="15.0" fill="rgb(206,192,36)" rx="2" ry="2" />
<text  x="563.52" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::IteratorBase&lt;false&gt;::operator++ (36,387,439 samples, 0.39%)</title><rect x="103.9" y="341" width="4.5" height="15.0" fill="rgb(220,200,42)" rx="2" ry="2" />
<text  x="106.88" y="351.5" ></text>
</g>
<g >
<title>__arm64_sys_nanosleep (68,068,522 samples, 0.72%)</title><rect x="1125.9" y="277" width="8.5" height="15.0" fill="rgb(211,166,33)" rx="2" ry="2" />
<text  x="1128.88" y="287.5" ></text>
</g>
<g >
<title>__fget_light (31,256,959 samples, 0.33%)</title><rect x="310.7" y="181" width="3.9" height="15.0" fill="rgb(250,68,27)" rx="2" ry="2" />
<text  x="313.67" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::posix::PosixCallResult&lt;long&gt; &gt;@plt (16,473,097 samples, 0.18%)</title><rect x="492.9" y="325" width="2.1" height="15.0" fill="rgb(248,4,29)" rx="2" ry="2" />
<text  x="495.93" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::string&lt;100ul&gt;::compare&lt;100ul&gt;@plt (18,719,180 samples, 0.20%)</title><rect x="122.3" y="341" width="2.3" height="15.0" fill="rgb(227,210,50)" rx="2" ry="2" />
<text  x="125.26" y="351.5" ></text>
</g>
<g >
<title>irq_exit (19,070,765 samples, 0.20%)</title><rect x="1115.2" y="277" width="2.4" height="15.0" fill="rgb(240,28,45)" rx="2" ry="2" />
<text  x="1118.19" y="287.5" ></text>
</g>
<g >
<title>iox::cxx::success&lt;iox::posix::PosixCallResult&lt;long long&gt; &gt;::success&lt;iox::posix::PosixCallResult&lt;long long&gt;&amp;&gt;@plt (36,149,256 samples, 0.38%)</title><rect x="584.0" y="357" width="4.5" height="15.0" fill="rgb(243,123,10)" rx="2" ry="2" />
<text  x="586.95" y="367.5" ></text>
</g>
<g >
<title>@plt (14,930,551 samples, 0.16%)</title><rect x="108.4" y="325" width="1.9" height="15.0" fill="rgb(221,137,23)" rx="2" ry="2" />
<text  x="111.44" y="335.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, int, int, int, void const*, unsigned int&gt;::operator (16,675,679 samples, 0.18%)</title><rect x="220.7" y="373" width="2.1" height="15.0" fill="rgb(215,97,12)" rx="2" ry="2" />
<text  x="223.70" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::~expected@plt (46,113,721 samples, 0.49%)</title><rect x="652.6" y="373" width="5.7" height="15.0" fill="rgb(213,17,7)" rx="2" ry="2" />
<text  x="655.56" y="383.5" ></text>
</g>
<g >
<title>try_to_del_timer_sync (44,007,075 samples, 0.47%)</title><rect x="379.3" y="133" width="5.5" height="15.0" fill="rgb(220,147,32)" rx="2" ry="2" />
<text  x="382.29" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_free (15,534,439 samples, 0.17%)</title><rect x="1077.2" y="149" width="1.9" height="15.0" fill="rgb(225,56,53)" rx="2" ry="2" />
<text  x="1080.16" y="159.5" ></text>
</g>
<g >
<title>__gthread_active_p (18,938,856 samples, 0.20%)</title><rect x="23.1" y="325" width="2.4" height="15.0" fill="rgb(245,113,45)" rx="2" ry="2" />
<text  x="26.09" y="335.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleNodes (20,872,049 samples, 0.22%)</title><rect x="790.3" y="341" width="2.6" height="15.0" fill="rgb(235,19,15)" rx="2" ry="2" />
<text  x="793.27" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (160,384,245 samples, 1.70%)</title><rect x="1138.8" y="357" width="20.1" height="15.0" fill="rgb(225,154,25)" rx="2" ry="2" />
<text  x="1141.76" y="367.5" ></text>
</g>
<g >
<title>el1_irq (22,577,420 samples, 0.24%)</title><rect x="424.3" y="69" width="2.8" height="15.0" fill="rgb(213,142,52)" rx="2" ry="2" />
<text  x="427.28" y="79.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (5,633,862,122 samples, 59.86%)</title><rect x="10.0" y="453" width="706.4" height="15.0" fill="rgb(229,218,27)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>iox::cxx::string&lt;100ul&gt;::operator==&lt;100ul&gt; (31,636,750 samples, 0.34%)</title><rect x="77.0" y="357" width="3.9" height="15.0" fill="rgb(213,212,48)" rx="2" ry="2" />
<text  x="79.95" y="367.5" ></text>
</g>
<g >
<title>__sys_recvfrom (32,424,116 samples, 0.34%)</title><rect x="451.9" y="229" width="4.1" height="15.0" fill="rgb(248,81,41)" rx="2" ry="2" />
<text  x="454.95" y="239.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::variant&lt;0ul, iox::posix::PosixCallResult&lt;long long&gt; &gt; (58,688,003 samples, 0.62%)</title><rect x="615.6" y="325" width="7.4" height="15.0" fill="rgb(206,158,53)" rx="2" ry="2" />
<text  x="618.62" y="335.5" ></text>
</g>
<g >
<title>std::atomic&lt;iox::SubscribeState&gt;::load (140,402,122 samples, 1.49%)</title><rect x="1141.2" y="213" width="17.6" height="15.0" fill="rgb(238,61,37)" rx="2" ry="2" />
<text  x="1144.22" y="223.5" ></text>
</g>
<g >
<title>iox::popo::BasePort::toBeDestroyed (513,318,025 samples, 5.45%)</title><rect x="940.5" y="325" width="64.3" height="15.0" fill="rgb(240,105,39)" rx="2" ry="2" />
<text  x="943.49" y="335.5" >iox::po..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (7,713,603 samples, 0.08%)</title><rect x="716.4" y="485" width="0.9" height="15.0" fill="rgb(247,202,32)" rx="2" ry="2" />
<text  x="719.35" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (38,887,700 samples, 0.41%)</title><rect x="368.3" y="165" width="4.9" height="15.0" fill="rgb(226,97,11)" rx="2" ry="2" />
<text  x="371.29" y="175.5" ></text>
</g>
<g >
<title>iox::cxx::internal::Require (17,648,922 samples, 0.19%)</title><rect x="1102.5" y="309" width="2.2" height="15.0" fill="rgb(246,228,39)" rx="2" ry="2" />
<text  x="1105.47" y="319.5" ></text>
</g>
<g >
<title>iox::popo::BasePort::BasePort@plt (24,176,599 samples, 0.26%)</title><rect x="799.1" y="325" width="3.1" height="15.0" fill="rgb(226,101,4)" rx="2" ry="2" />
<text  x="802.12" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::PosixCallResult&lt;int&gt;, iox::posix::PosixCallResult&lt;int&gt; &gt;::~variant (57,387,649 samples, 0.61%)</title><rect x="261.0" y="341" width="7.1" height="15.0" fill="rgb(214,150,22)" rx="2" ry="2" />
<text  x="263.95" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator@plt (19,864,420 samples, 0.21%)</title><rect x="134.0" y="325" width="2.5" height="15.0" fill="rgb(224,69,1)" rx="2" ry="2" />
<text  x="137.00" y="335.5" ></text>
</g>
<g >
<title>futex_wait (5,716,630 samples, 0.06%)</title><rect x="716.6" y="197" width="0.7" height="15.0" fill="rgb(224,19,47)" rx="2" ry="2" />
<text  x="719.60" y="207.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::PublisherPortData*, 128ul&gt;::begin (31,139,932 samples, 0.33%)</title><rect x="757.0" y="341" width="3.9" height="15.0" fill="rgb(230,164,28)" rx="2" ry="2" />
<text  x="760.03" y="351.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::and_then@plt (4,557,266 samples, 0.05%)</title><rect x="40.7" y="373" width="0.5" height="15.0" fill="rgb(221,149,0)" rx="2" ry="2" />
<text  x="43.66" y="383.5" ></text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::PosixCallResult&lt;long long&gt;, iox::posix::PosixCallResult&lt;long long&gt; &gt;::expected (164,015,437 samples, 1.74%)</title><rect x="606.9" y="341" width="20.6" height="15.0" fill="rgb(240,42,22)" rx="2" ry="2" />
<text  x="609.91" y="351.5" ></text>
</g>
<g >
<title>iox::roudi::RouDi::monitorAndDiscoveryUpdate (3,329,805,477 samples, 35.38%)</title><rect x="719.2" y="405" width="417.5" height="15.0" fill="rgb(230,64,47)" rx="2" ry="2" />
<text  x="722.20" y="415.5" >iox::roudi::RouDi::monitorAndDiscoveryUpdate</text>
</g>
<g >
<title>el0_sync (1,076,570,695 samples, 11.44%)</title><rect x="321.0" y="309" width="135.0" height="15.0" fill="rgb(213,229,27)" rx="2" ry="2" />
<text  x="324.04" y="319.5" >el0_sync</text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::isInvalidIterOrDifferentLists (44,152,068 samples, 0.47%)</title><rect x="87.2" y="309" width="5.5" height="15.0" fill="rgb(224,25,17)" rx="2" ry="2" />
<text  x="90.17" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++@plt (17,343,552 samples, 0.18%)</title><rect x="162.2" y="245" width="2.2" height="15.0" fill="rgb(213,186,18)" rx="2" ry="2" />
<text  x="165.25" y="255.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getPublisherPortDataList (24,004,117 samples, 0.26%)</title><rect x="1087.9" y="341" width="3.1" height="15.0" fill="rgb(254,92,16)" rx="2" ry="2" />
<text  x="1090.94" y="351.5" ></text>
</g>
<g >
<title>irq_exit (23,533,255 samples, 0.25%)</title><rect x="917.0" y="229" width="2.9" height="15.0" fill="rgb(231,52,36)" rx="2" ry="2" />
<text  x="919.98" y="239.5" ></text>
</g>
<g >
<title>do_el0_svc (83,074,395 samples, 0.88%)</title><rect x="1124.0" y="309" width="10.4" height="15.0" fill="rgb(231,207,27)" rx="2" ry="2" />
<text  x="1127.00" y="319.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::isInvalidIterOrDifferentLists (57,645,088 samples, 0.61%)</title><rect x="1102.5" y="325" width="7.2" height="15.0" fill="rgb(222,155,9)" rx="2" ry="2" />
<text  x="1105.47" y="335.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (65,996,401 samples, 0.70%)</title><rect x="401.0" y="181" width="8.3" height="15.0" fill="rgb(224,76,37)" rx="2" ry="2" />
<text  x="404.01" y="191.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (31,256,959 samples, 0.33%)</title><rect x="310.7" y="213" width="3.9" height="15.0" fill="rgb(247,57,36)" rx="2" ry="2" />
<text  x="313.67" y="223.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (298,039,047 samples, 3.17%)</title><rect x="151.5" y="325" width="37.4" height="15.0" fill="rgb(254,224,17)" rx="2" ry="2" />
<text  x="154.50" y="335.5" >iox..</text>
</g>
<g >
<title>do_nanosleep (68,068,522 samples, 0.72%)</title><rect x="1125.9" y="245" width="8.5" height="15.0" fill="rgb(238,14,11)" rx="2" ry="2" />
<text  x="1128.88" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (5,633,862,122 samples, 59.86%)</title><rect x="10.0" y="501" width="706.4" height="15.0" fill="rgb(215,173,17)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>iox::cxx::variant&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::variant&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (18,040,858 samples, 0.19%)</title><rect x="270.4" y="341" width="2.3" height="15.0" fill="rgb(228,215,25)" rx="2" ry="2" />
<text  x="273.44" y="351.5" ></text>
</g>
<g >
<title>iox::algorithm::doesContainValue&lt;long&gt;@plt (28,237,266 samples, 0.30%)</title><rect x="504.2" y="341" width="3.6" height="15.0" fill="rgb(220,188,51)" rx="2" ry="2" />
<text  x="507.22" y="351.5" ></text>
</g>
<g >
<title>iox::popo::BasePort::toBeDestroyed (246,440,709 samples, 2.62%)</title><rect x="804.5" y="325" width="30.9" height="15.0" fill="rgb(230,96,9)" rx="2" ry="2" />
<text  x="807.52" y="335.5" >io..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear@plt (32,305,094 samples, 0.34%)</title><rect x="158.2" y="261" width="4.0" height="15.0" fill="rgb(213,121,23)" rx="2" ry="2" />
<text  x="161.20" y="271.5" ></text>
</g>
<g >
<title>iox::popo::ChunkSender&lt;iox::popo::ChunkSenderData&lt;8u, iox::popo::ChunkDistributorData&lt;iox::DefaultChunkDistributorConfig, iox::popo::ThreadSafePolicy, iox::popo::ChunkQueuePusher&lt;iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt; &gt; &gt; &gt;::ChunkSender (16,066,575 samples, 0.17%)</title><rect x="837.9" y="309" width="2.0" height="15.0" fill="rgb(219,20,34)" rx="2" ry="2" />
<text  x="840.85" y="319.5" ></text>
</g>
<g >
<title>iox::roudi::Process::getName (94,753,188 samples, 1.01%)</title><rect x="124.6" y="341" width="11.9" height="15.0" fill="rgb(222,7,10)" rx="2" ry="2" />
<text  x="127.61" y="351.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;long long&gt;::evaluate (164,015,437 samples, 1.74%)</title><rect x="606.9" y="357" width="20.6" height="15.0" fill="rgb(244,51,0)" rx="2" ry="2" />
<text  x="609.91" y="367.5" ></text>
</g>
<g >
<title>iox::posix::internal::createPosixCallBuilder&lt;long, int, void*, unsigned long, int, sockaddr*, unsigned int*&gt; (51,104,090 samples, 0.54%)</title><rect x="507.8" y="357" width="6.4" height="15.0" fill="rgb(224,35,33)" rx="2" ry="2" />
<text  x="510.77" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getDataPtrFromIdx@plt (17,930,991 samples, 0.19%)</title><rect x="101.6" y="325" width="2.3" height="15.0" fill="rgb(243,218,41)" rx="2" ry="2" />
<text  x="104.63" y="335.5" ></text>
</g>
<g >
<title>schedule (5,716,630 samples, 0.06%)</title><rect x="716.6" y="165" width="0.7" height="15.0" fill="rgb(230,156,39)" rx="2" ry="2" />
<text  x="719.60" y="175.5" ></text>
</g>
<g >
<title>skb_release_data (46,791,863 samples, 0.50%)</title><rect x="421.2" y="133" width="5.9" height="15.0" fill="rgb(233,11,17)" rx="2" ry="2" />
<text  x="424.25" y="143.5" ></text>
</g>
<g >
<title>iox::roudi::PortManager::handleServerPorts (87,221,946 samples, 0.93%)</title><rect x="921.9" y="341" width="10.9" height="15.0" fill="rgb(220,150,34)" rx="2" ry="2" />
<text  x="924.91" y="351.5" ></text>
</g>
<g >
<title>schedule (76,703,626 samples, 0.81%)</title><rect x="384.8" y="149" width="9.6" height="15.0" fill="rgb(236,165,3)" rx="2" ry="2" />
<text  x="387.81" y="159.5" ></text>
</g>
<g >
<title>std::__count_if&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;iox::runtime::IpcMessage::setMessage (78,263,114 samples, 0.83%)</title><rect x="164.4" y="245" width="9.8" height="15.0" fill="rgb(213,137,38)" rx="2" ry="2" />
<text  x="167.42" y="255.5" ></text>
</g>
<g >
<title>iox::concurrent::smart_lock&lt;iox::roudi::ProcessManager, std::mutex&gt;::Proxy::Proxy (39,231,439 samples, 0.42%)</title><rect x="734.3" y="373" width="4.9" height="15.0" fill="rgb(243,30,15)" rx="2" ry="2" />
<text  x="737.30" y="383.5" ></text>
</g>
<g >
<title>iox::posix::internal::createPosixCallBuilder&lt;long long, char const*, char**, int&gt; (18,303,872 samples, 0.19%)</title><rect x="629.9" y="357" width="2.3" height="15.0" fill="rgb(214,24,33)" rx="2" ry="2" />
<text  x="632.91" y="367.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (23,954,056 samples, 0.25%)</title><rect x="784.8" y="325" width="3.0" height="15.0" fill="rgb(242,60,6)" rx="2" ry="2" />
<text  x="787.81" y="335.5" ></text>
</g>
<g >
<title>rcu_core_si (19,070,765 samples, 0.20%)</title><rect x="1115.2" y="245" width="2.4" height="15.0" fill="rgb(210,51,17)" rx="2" ry="2" />
<text  x="1118.19" y="255.5" ></text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (47,005,352 samples, 0.50%)</title><rect x="44.0" y="357" width="5.9" height="15.0" fill="rgb(231,4,24)" rx="2" ry="2" />
<text  x="47.03" y="367.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long long, char const*, char**, int&gt;::PosixCallBuilder@plt (36,483,156 samples, 0.39%)</title><rect x="592.3" y="357" width="4.6" height="15.0" fill="rgb(230,43,12)" rx="2" ry="2" />
<text  x="595.35" y="367.5" ></text>
</g>
<g >
<title>iox::cxx::not_null&lt;iox::popo::ChunkReceiverData&lt;256u, iox::popo::ChunkQueueData&lt;iox::DefaultChunkQueueConfig, iox::popo::ThreadSafePolicy&gt; &gt;* const, void&gt;::not_null (20,045,393 samples, 0.21%)</title><rect x="1006.9" y="293" width="2.6" height="15.0" fill="rgb(243,74,2)" rx="2" ry="2" />
<text  x="1009.95" y="303.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (7,713,603 samples, 0.08%)</title><rect x="716.4" y="469" width="0.9" height="15.0" fill="rgb(235,121,8)" rx="2" ry="2" />
<text  x="719.35" y="479.5" ></text>
</g>
<g >
<title>iox::cxx::variant&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::call_element_destructor (18,040,858 samples, 0.19%)</title><rect x="270.4" y="325" width="2.3" height="15.0" fill="rgb(223,93,14)" rx="2" ry="2" />
<text  x="273.44" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::posix::PosixCallResult&lt;long&gt; &gt; (16,781,555 samples, 0.18%)</title><rect x="490.8" y="325" width="2.1" height="15.0" fill="rgb(239,118,40)" rx="2" ry="2" />
<text  x="493.83" y="335.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long, int, void*, unsigned long, int, sockaddr*, unsigned int*&gt;::PosixCallBuilder (33,119,806 samples, 0.35%)</title><rect x="507.8" y="341" width="4.1" height="15.0" fill="rgb(215,9,6)" rx="2" ry="2" />
<text  x="510.77" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;iox::roudi::Process*&amp;&gt;@plt (24,298,610 samples, 0.26%)</title><rect x="69.9" y="341" width="3.1" height="15.0" fill="rgb(219,157,19)" rx="2" ry="2" />
<text  x="72.93" y="351.5" ></text>
</g>
<g >
<title>__handle_domain_irq (16,616,526 samples, 0.18%)</title><rect x="648.6" y="325" width="2.1" height="15.0" fill="rgb(220,21,12)" rx="2" ry="2" />
<text  x="651.59" y="335.5" ></text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::ServerPortData*, 128ul&gt;::clear (32,733,084 samples, 0.35%)</title><rect x="921.9" y="325" width="4.1" height="15.0" fill="rgb(253,131,36)" rx="2" ry="2" />
<text  x="924.91" y="335.5" ></text>
</g>
<g >
<title>iox_setsockopt (20,964,450 samples, 0.22%)</title><rect x="514.2" y="357" width="2.6" height="15.0" fill="rgb(249,208,41)" rx="2" ry="2" />
<text  x="517.17" y="367.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (16,512,173 samples, 0.18%)</title><rect x="360.1" y="181" width="2.1" height="15.0" fill="rgb(222,63,5)" rx="2" ry="2" />
<text  x="363.12" y="191.5" ></text>
</g>
<g >
<title>fpsimd_restore_current_state (25,822,722 samples, 0.27%)</title><rect x="457.9" y="277" width="3.2" height="15.0" fill="rgb(243,30,15)" rx="2" ry="2" />
<text  x="460.87" y="287.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (16,616,526 samples, 0.18%)</title><rect x="648.6" y="293" width="2.1" height="15.0" fill="rgb(231,85,31)" rx="2" ry="2" />
<text  x="651.59" y="303.5" ></text>
</g>
<g >
<title>iox::cxx::optional&lt;iox::roudi::Process*&gt;::optional (20,524,978 samples, 0.22%)</title><rect x="119.7" y="341" width="2.6" height="15.0" fill="rgb(252,69,46)" rx="2" ry="2" />
<text  x="122.69" y="351.5" ></text>
</g>
<g >
<title>el0_irq_naked (16,499,142 samples, 0.18%)</title><rect x="682.1" y="373" width="2.1" height="15.0" fill="rgb(236,162,47)" rx="2" ry="2" />
<text  x="685.13" y="383.5" ></text>
</g>
<g >
<title>el0_svc (5,726,643 samples, 0.06%)</title><rect x="716.6" y="277" width="0.7" height="15.0" fill="rgb(211,183,48)" rx="2" ry="2" />
<text  x="719.60" y="287.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;long&gt;::evaluate@plt (16,051,949 samples, 0.17%)</title><rect x="222.8" y="373" width="2.0" height="15.0" fill="rgb(210,76,32)" rx="2" ry="2" />
<text  x="225.80" y="383.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (214,180,480 samples, 2.28%)</title><rect x="1163.1" y="517" width="26.9" height="15.0" fill="rgb(220,79,54)" rx="2" ry="2" />
<text  x="1166.15" y="527.5" >[..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (214,180,480 samples, 2.28%)</title><rect x="1163.1" y="469" width="26.9" height="15.0" fill="rgb(205,34,36)" rx="2" ry="2" />
<text  x="1166.15" y="479.5" >s..</text>
</g>
<g >
<title>_raw_spin_unlock_irq (49,721,222 samples, 0.53%)</title><rect x="1128.2" y="197" width="6.2" height="15.0" fill="rgb(248,177,4)" rx="2" ry="2" />
<text  x="1131.18" y="207.5" ></text>
</g>
<g >
<title>unix_dgram_recvmsg (35,193,973 samples, 0.37%)</title><rect x="447.5" y="213" width="4.4" height="15.0" fill="rgb(221,24,22)" rx="2" ry="2" />
<text  x="450.54" y="223.5" ></text>
</g>
<g >
<title>PortIntr (160,435,185 samples, 1.70%)</title><rect x="1138.8" y="549" width="20.1" height="15.0" fill="rgb(244,96,6)" rx="2" ry="2" />
<text  x="1141.76" y="559.5" ></text>
</g>
<g >
<title>iox::cxx::list&lt;iox::roudi::Process, 300ul&gt;::getDataPtrFromIdx (13,579,162 samples, 0.14%)</title><rect x="99.9" y="325" width="1.7" height="15.0" fill="rgb(219,183,32)" rx="2" ry="2" />
<text  x="102.93" y="335.5" ></text>
</g>
<g >
<title>kfree_skbmem (95,429,546 samples, 1.01%)</title><rect x="409.3" y="149" width="11.9" height="15.0" fill="rgb(215,224,2)" rx="2" ry="2" />
<text  x="412.28" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str@plt (14,777,784 samples, 0.16%)</title><rect x="187.0" y="309" width="1.9" height="15.0" fill="rgb(213,116,49)" rx="2" ry="2" />
<text  x="190.02" y="319.5" ></text>
</g>
<g >
<title>iox::roudi::PortPool::getServerPortDataList (54,488,862 samples, 0.58%)</title><rect x="926.0" y="325" width="6.8" height="15.0" fill="rgb(208,1,14)" rx="2" ry="2" />
<text  x="929.01" y="335.5" ></text>
</g>
<g >
<title>gic_handle_irq (16,499,142 samples, 0.18%)</title><rect x="682.1" y="357" width="2.1" height="15.0" fill="rgb(220,30,39)" rx="2" ry="2" />
<text  x="685.13" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string@plt (32,866,784 samples, 0.35%)</title><rect x="684.2" y="389" width="4.1" height="15.0" fill="rgb(211,8,21)" rx="2" ry="2" />
<text  x="687.19" y="399.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;int&gt;::ignoreErrnos&lt;int&gt; (67,656,245 samples, 0.72%)</title><rect x="472.3" y="357" width="8.5" height="15.0" fill="rgb(240,136,12)" rx="2" ry="2" />
<text  x="475.32" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;@plt (68,718,161 samples, 0.73%)</title><rect x="529.0" y="357" width="8.6" height="15.0" fill="rgb(240,68,18)" rx="2" ry="2" />
<text  x="531.95" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (214,180,480 samples, 2.28%)</title><rect x="1163.1" y="501" width="26.9" height="15.0" fill="rgb(231,7,21)" rx="2" ry="2" />
<text  x="1166.15" y="511.5" >[..</text>
</g>
<g >
<title>iox::cxx::expected&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, iox::posix::IpcChannelError&gt;::and_then (298,039,047 samples, 3.17%)</title><rect x="151.5" y="373" width="37.4" height="15.0" fill="rgb(249,31,1)" rx="2" ry="2" />
<text  x="154.50" y="383.5" >iox..</text>
</g>
<g >
<title>iox::cxx::vector&lt;iox::popo::PublisherPortData*, 128ul&gt;::begin@plt (18,534,337 samples, 0.20%)</title><rect x="760.9" y="341" width="2.4" height="15.0" fill="rgb(206,171,11)" rx="2" ry="2" />
<text  x="763.93" y="351.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (160,435,185 samples, 1.70%)</title><rect x="1138.8" y="485" width="20.1" height="15.0" fill="rgb(253,185,0)" rx="2" ry="2" />
<text  x="1141.76" y="495.5" ></text>
</g>
<g >
<title>Mon+Discover (3,361,410,379 samples, 35.72%)</title><rect x="717.3" y="549" width="421.5" height="15.0" fill="rgb(249,152,52)" rx="2" ry="2" />
<text  x="720.32" y="559.5" >Mon+Discover</text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (513,318,025 samples, 5.45%)</title><rect x="940.5" y="309" width="64.3" height="15.0" fill="rgb(206,202,48)" rx="2" ry="2" />
<text  x="943.49" y="319.5" >std::at..</text>
</g>
</g>
</svg>
