<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>__arm64_sys_futex (51,963,162 samples, 5.91%)</title><rect x="979.6" y="325" width="69.8" height="15.0" fill="rgb(244,65,34)" rx="2" ry="2" />
<text  x="982.57" y="335.5" >__arm64..</text>
</g>
<g >
<title>[libpthread-2.30.so] (3,489,711 samples, 0.40%)</title><rect x="1158.8" y="613" width="4.7" height="15.0" fill="rgb(243,48,22)" rx="2" ry="2" />
<text  x="1161.77" y="623.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (800,091,046 samples, 91.07%)</title><rect x="10.0" y="533" width="1074.6" height="15.0" fill="rgb(210,71,41)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>iox::runtime::IpcMessage::IpcMessage (408,827 samples, 0.05%)</title><rect x="211.2" y="357" width="0.6" height="15.0" fill="rgb(238,218,23)" rx="2" ry="2" />
<text  x="214.24" y="367.5" ></text>
</g>
<g >
<title>el0_sync_handler (20,968,070 samples, 2.39%)</title><rect x="121.2" y="261" width="28.1" height="15.0" fill="rgb(223,91,52)" rx="2" ry="2" />
<text  x="124.16" y="271.5" >e..</text>
</g>
<g >
<title>do_nanosleep (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="437" width="74.2" height="15.0" fill="rgb(228,116,41)" rx="2" ry="2" />
<text  x="1087.63" y="447.5" >do_nanos..</text>
</g>
<g >
<title>futex_wait (30,134,444 samples, 3.43%)</title><rect x="1008.9" y="293" width="40.5" height="15.0" fill="rgb(230,116,46)" rx="2" ry="2" />
<text  x="1011.89" y="303.5" >fut..</text>
</g>
<g >
<title>el1_irq (192,736 samples, 0.02%)</title><rect x="1163.2" y="341" width="0.3" height="15.0" fill="rgb(212,95,32)" rx="2" ry="2" />
<text  x="1166.20" y="351.5" ></text>
</g>
<g >
<title>el0_sync_handler (46,096,252 samples, 5.25%)</title><rect x="149.3" y="245" width="61.9" height="15.0" fill="rgb(211,17,12)" rx="2" ry="2" />
<text  x="152.32" y="255.5" >el0_sy..</text>
</g>
<g >
<title>[libc-2.30.so] (55,226,377 samples, 6.29%)</title><rect x="1084.6" y="629" width="74.2" height="15.0" fill="rgb(221,131,20)" rx="2" ry="2" />
<text  x="1087.60" y="639.5" >[libc-2...</text>
</g>
<g >
<title>[libc-2.30.so] (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="629" width="26.5" height="15.0" fill="rgb(210,15,17)" rx="2" ry="2" />
<text  x="1166.46" y="639.5" >[..</text>
</g>
<g >
<title>gic_handle_irq (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="197" width="40.5" height="15.0" fill="rgb(232,89,3)" rx="2" ry="2" />
<text  x="1011.89" y="207.5" >gic..</text>
</g>
<g >
<title>iox::cxx::internal::ReturnSuccess&lt;void&gt;::call&lt;iox::cxx::function_ref&lt;void  (682,795,993 samples, 77.72%)</title><rect x="10.0" y="469" width="917.1" height="15.0" fill="rgb(235,51,41)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >iox::cxx::internal::ReturnSuccess&lt;void&gt;::call&lt;iox::cxx::function_ref&lt;void </text>
</g>
<g >
<title>std::locale::locale (20,849,793 samples, 2.37%)</title><rect x="788.0" y="325" width="28.0" height="15.0" fill="rgb(221,134,51)" rx="2" ry="2" />
<text  x="791.04" y="335.5" >s..</text>
</g>
<g >
<title>rcu_core (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="117" width="40.5" height="15.0" fill="rgb(231,209,44)" rx="2" ry="2" />
<text  x="1011.89" y="127.5" >rcu..</text>
</g>
<g >
<title>[libpthread-2.30.so] (52,007,330 samples, 5.92%)</title><rect x="979.5" y="437" width="69.9" height="15.0" fill="rgb(248,199,45)" rx="2" ry="2" />
<text  x="982.52" y="447.5" >[libpth..</text>
</g>
<g >
<title>iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run (800,091,046 samples, 91.07%)</title><rect x="10.0" y="501" width="1074.6" height="15.0" fill="rgb(209,171,48)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run</text>
</g>
<g >
<title>el0_svc (20,968,070 samples, 2.39%)</title><rect x="121.2" y="245" width="28.1" height="15.0" fill="rgb(214,70,37)" rx="2" ry="2" />
<text  x="124.16" y="255.5" >e..</text>
</g>
<g >
<title>iox::cxx::string&lt;100ul&gt;::c_str (19,833,114 samples, 2.26%)</title><rect x="39.9" y="357" width="26.6" height="15.0" fill="rgb(254,40,31)" rx="2" ry="2" />
<text  x="42.87" y="367.5" >i..</text>
</g>
<g >
<title>_raw_spin_unlock_irq (30,133,944 samples, 3.43%)</title><rect x="1008.9" y="229" width="40.5" height="15.0" fill="rgb(241,149,7)" rx="2" ry="2" />
<text  x="1011.89" y="239.5" >_ra..</text>
</g>
<g >
<title>__dynamic_cast (54,016,321 samples, 6.15%)</title><rect x="424.9" y="261" width="72.5" height="15.0" fill="rgb(242,60,12)" rx="2" ry="2" />
<text  x="427.85" y="271.5" >__dynami..</text>
</g>
<g >
<title>el0_svc (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="517" width="74.2" height="15.0" fill="rgb(208,123,49)" rx="2" ry="2" />
<text  x="1087.63" y="527.5" >el0_svc</text>
</g>
<g >
<title>spdlog::details::thread_pool::process_next_msg_ (3,489,711 samples, 0.40%)</title><rect x="1158.8" y="565" width="4.7" height="15.0" fill="rgb(246,18,53)" rx="2" ry="2" />
<text  x="1161.77" y="575.5" ></text>
</g>
<g >
<title>__handle_domain_irq (192,736 samples, 0.02%)</title><rect x="1163.2" y="309" width="0.3" height="15.0" fill="rgb(235,138,49)" rx="2" ry="2" />
<text  x="1166.20" y="319.5" ></text>
</g>
<g >
<title>sock_def_readable (21,325,634 samples, 2.43%)</title><rect x="149.3" y="133" width="28.7" height="15.0" fill="rgb(224,184,0)" rx="2" ry="2" />
<text  x="152.32" y="143.5" >so..</text>
</g>
<g >
<title>el0_sync (46,096,252 samples, 5.25%)</title><rect x="149.3" y="261" width="61.9" height="15.0" fill="rgb(244,65,49)" rx="2" ry="2" />
<text  x="152.32" y="271.5" >el0_sync</text>
</g>
<g >
<title>iox_sem_timedwait (52,007,330 samples, 5.92%)</title><rect x="979.5" y="453" width="69.9" height="15.0" fill="rgb(236,3,41)" rx="2" ry="2" />
<text  x="982.52" y="463.5" >iox_sem..</text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (54,016,321 samples, 6.15%)</title><rect x="424.9" y="277" width="72.5" height="15.0" fill="rgb(248,190,16)" rx="2" ry="2" />
<text  x="427.85" y="287.5" >std::has..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (800,091,046 samples, 91.07%)</title><rect x="10.0" y="581" width="1074.6" height="15.0" fill="rgb(210,64,12)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>sock_setsockopt (20,968,070 samples, 2.39%)</title><rect x="121.2" y="165" width="28.1" height="15.0" fill="rgb(232,56,11)" rx="2" ry="2" />
<text  x="124.16" y="175.5" >s..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (21,325,634 samples, 2.43%)</title><rect x="149.3" y="101" width="28.7" height="15.0" fill="rgb(232,218,34)" rx="2" ry="2" />
<text  x="152.32" y="111.5" >_r..</text>
</g>
<g >
<title>iox::posix::Semaphore::timedWait (99,365,569 samples, 11.31%)</title><rect x="951.1" y="485" width="133.5" height="15.0" fill="rgb(239,23,51)" rx="2" ry="2" />
<text  x="954.14" y="495.5" >iox::posix::Sema..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="581" width="26.5" height="15.0" fill="rgb(237,160,38)" rx="2" ry="2" />
<text  x="1166.46" y="591.5" >s..</text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, sem_t*, timespec const*&gt;::operator (52,007,330 samples, 5.92%)</title><rect x="979.5" y="469" width="69.9" height="15.0" fill="rgb(250,55,0)" rx="2" ry="2" />
<text  x="982.52" y="479.5" >iox::po..</text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::SemaphoreWaitState, iox::posix::SemaphoreError&gt;::expected (21,129,840 samples, 2.41%)</title><rect x="951.1" y="469" width="28.4" height="15.0" fill="rgb(214,223,28)" rx="2" ry="2" />
<text  x="954.14" y="479.5" >io..</text>
</g>
<g >
<title>__arm64_sys_setsockopt (20,968,070 samples, 2.39%)</title><rect x="121.2" y="197" width="28.1" height="15.0" fill="rgb(223,22,8)" rx="2" ry="2" />
<text  x="124.16" y="207.5" >_..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (499,721 samples, 0.06%)</title><rect x="1162.8" y="469" width="0.7" height="15.0" fill="rgb(211,202,21)" rx="2" ry="2" />
<text  x="1165.79" y="479.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (21,325,634 samples, 2.43%)</title><rect x="149.3" y="117" width="28.7" height="15.0" fill="rgb(206,98,36)" rx="2" ry="2" />
<text  x="152.32" y="127.5" >__..</text>
</g>
<g >
<title>file_free_rcu (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="101" width="40.5" height="15.0" fill="rgb(224,198,21)" rx="2" ry="2" />
<text  x="1011.89" y="111.5" >fil..</text>
</g>
<g >
<title>futex_wait_queue_me (499,721 samples, 0.06%)</title><rect x="1162.8" y="405" width="0.7" height="15.0" fill="rgb(238,18,5)" rx="2" ry="2" />
<text  x="1165.79" y="415.5" ></text>
</g>
<g >
<title>el0_sync (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="549" width="74.2" height="15.0" fill="rgb(224,96,10)" rx="2" ry="2" />
<text  x="1087.63" y="559.5" >el0_sync</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="597" width="26.5" height="15.0" fill="rgb(248,23,25)" rx="2" ry="2" />
<text  x="1166.46" y="607.5" >[..</text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::IpcChannelError&gt;::~expected (22,241,986 samples, 2.53%)</title><rect x="10.0" y="357" width="29.9" height="15.0" fill="rgb(225,193,39)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >io..</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::SemaphoreWaitState, iox::posix::SemaphoreError&gt;::variant&lt;0ul, iox::posix::SemaphoreWaitState&gt; (21,129,840 samples, 2.41%)</title><rect x="951.1" y="453" width="28.4" height="15.0" fill="rgb(235,80,42)" rx="2" ry="2" />
<text  x="954.14" y="463.5" >io..</text>
</g>
<g >
<title>KeepAlive (800,091,046 samples, 91.07%)</title><rect x="10.0" y="645" width="1074.6" height="15.0" fill="rgb(213,72,38)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >KeepAlive</text>
</g>
<g >
<title>kmem_cache_free (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="85" width="40.5" height="15.0" fill="rgb(229,64,30)" rx="2" ry="2" />
<text  x="1011.89" y="95.5" >kme..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (46,096,252 samples, 5.25%)</title><rect x="149.3" y="197" width="61.9" height="15.0" fill="rgb(236,58,44)" rx="2" ry="2" />
<text  x="152.32" y="207.5" >el0_sv..</text>
</g>
<g >
<title>_raw_spin_unlock_irq (55,198,190 samples, 6.28%)</title><rect x="1084.6" y="389" width="74.2" height="15.0" fill="rgb(232,3,19)" rx="2" ry="2" />
<text  x="1087.64" y="399.5" >_raw_spi..</text>
</g>
<g >
<title>__nanosleep (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="565" width="74.2" height="15.0" fill="rgb(232,5,6)" rx="2" ry="2" />
<text  x="1087.63" y="575.5" >__nanosl..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="549" width="26.5" height="15.0" fill="rgb(212,26,30)" rx="2" ry="2" />
<text  x="1166.46" y="559.5" >s..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (800,091,046 samples, 91.07%)</title><rect x="10.0" y="549" width="1074.6" height="15.0" fill="rgb(233,63,1)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>__softirqentry_text_start (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="149" width="40.5" height="15.0" fill="rgb(210,25,30)" rx="2" ry="2" />
<text  x="1011.89" y="159.5" >__s..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (76,643,167 samples, 8.72%)</title><rect x="394.5" y="293" width="102.9" height="15.0" fill="rgb(215,193,6)" rx="2" ry="2" />
<text  x="397.46" y="303.5" >std::basic_i..</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::cxx::MethodCallbackError&gt;::call_element_destructor@plt (17,929,484 samples, 2.04%)</title><rect x="927.1" y="453" width="24.0" height="15.0" fill="rgb(220,208,41)" rx="2" ry="2" />
<text  x="930.06" y="463.5" >i..</text>
</g>
<g >
<title>__softirqentry_text_start (192,736 samples, 0.02%)</title><rect x="1163.2" y="277" width="0.3" height="15.0" fill="rgb(214,48,42)" rx="2" ry="2" />
<text  x="1166.20" y="287.5" ></text>
</g>
<g >
<title>std::locale::locale@plt (24,942,244 samples, 2.84%)</title><rect x="816.0" y="325" width="33.5" height="15.0" fill="rgb(205,182,2)" rx="2" ry="2" />
<text  x="819.05" y="335.5" >st..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (20,968,070 samples, 2.39%)</title><rect x="121.2" y="213" width="28.1" height="15.0" fill="rgb(238,163,6)" rx="2" ry="2" />
<text  x="124.16" y="223.5" >e..</text>
</g>
<g >
<title>rcu_core_si (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="133" width="40.5" height="15.0" fill="rgb(237,106,53)" rx="2" ry="2" />
<text  x="1011.89" y="143.5" >rcu..</text>
</g>
<g >
<title>__sys_setsockopt (20,968,070 samples, 2.39%)</title><rect x="121.2" y="181" width="28.1" height="15.0" fill="rgb(219,93,37)" rx="2" ry="2" />
<text  x="124.16" y="191.5" >_..</text>
</g>
<g >
<title>el1_irq (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="213" width="40.5" height="15.0" fill="rgb(213,55,44)" rx="2" ry="2" />
<text  x="1011.89" y="223.5" >el1..</text>
</g>
<g >
<title>do_el0_svc (499,721 samples, 0.06%)</title><rect x="1162.8" y="485" width="0.7" height="15.0" fill="rgb(243,37,42)" rx="2" ry="2" />
<text  x="1165.79" y="495.5" ></text>
</g>
<g >
<title>__arm64_sys_futex (499,721 samples, 0.06%)</title><rect x="1162.8" y="453" width="0.7" height="15.0" fill="rgb(221,48,43)" rx="2" ry="2" />
<text  x="1165.79" y="463.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait (499,721 samples, 0.06%)</title><rect x="1162.8" y="549" width="0.7" height="15.0" fill="rgb(210,143,53)" rx="2" ry="2" />
<text  x="1165.79" y="559.5" ></text>
</g>
<g >
<title>[libpthread-2.30.so] (52,007,330 samples, 5.92%)</title><rect x="979.5" y="421" width="69.9" height="15.0" fill="rgb(238,114,3)" rx="2" ry="2" />
<text  x="982.52" y="431.5" >[libpth..</text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (115,692,450 samples, 13.17%)</title><rect x="370.0" y="325" width="155.4" height="15.0" fill="rgb(251,217,5)" rx="2" ry="2" />
<text  x="373.02" y="335.5" >std::__cxx11::basic..</text>
</g>
<g >
<title>irq_exit (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="165" width="40.5" height="15.0" fill="rgb(206,49,6)" rx="2" ry="2" />
<text  x="1011.89" y="175.5" >irq..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (97,495,017 samples, 11.10%)</title><rect x="394.5" y="309" width="130.9" height="15.0" fill="rgb(250,78,26)" rx="2" ry="2" />
<text  x="397.46" y="319.5" >std::basic_ios&lt;c..</text>
</g>
<g >
<title>iox_sendto (46,096,252 samples, 5.25%)</title><rect x="149.3" y="293" width="61.9" height="15.0" fill="rgb(213,27,6)" rx="2" ry="2" />
<text  x="152.32" y="303.5" >iox_se..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="469" width="26.5" height="15.0" fill="rgb(211,189,46)" rx="2" ry="2" />
<text  x="1166.46" y="479.5" >i..</text>
</g>
<g >
<title>run_rebalance_domains (96,368 samples, 0.01%)</title><rect x="1163.3" y="261" width="0.2" height="15.0" fill="rgb(233,152,54)" rx="2" ry="2" />
<text  x="1166.33" y="271.5" ></text>
</g>
<g >
<title>do_el0_svc (46,096,252 samples, 5.25%)</title><rect x="149.3" y="213" width="61.9" height="15.0" fill="rgb(207,135,40)" rx="2" ry="2" />
<text  x="152.32" y="223.5" >do_el0..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (682,795,993 samples, 77.72%)</title><rect x="10.0" y="421" width="917.1" height="15.0" fill="rgb(213,180,4)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >iox::cxx::function_ref&lt;void </text>
</g>
<g >
<title>iox::posix::UnixDomainSocket::send (104,455,694 samples, 11.89%)</title><rect x="70.9" y="341" width="140.3" height="15.0" fill="rgb(210,224,40)" rx="2" ry="2" />
<text  x="73.94" y="351.5" >iox::posix::UnixD..</text>
</g>
<g >
<title>__schedule (499,721 samples, 0.06%)</title><rect x="1162.8" y="373" width="0.7" height="15.0" fill="rgb(223,32,49)" rx="2" ry="2" />
<text  x="1165.79" y="383.5" ></text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;int, int, int, int, void const*, unsigned int&gt;::operator (20,968,070 samples, 2.39%)</title><rect x="121.2" y="309" width="28.1" height="15.0" fill="rgb(239,220,37)" rx="2" ry="2" />
<text  x="124.16" y="319.5" >i..</text>
</g>
<g >
<title>do_el0_svc (20,968,070 samples, 2.39%)</title><rect x="121.2" y="229" width="28.1" height="15.0" fill="rgb(217,197,38)" rx="2" ry="2" />
<text  x="124.16" y="239.5" >d..</text>
</g>
<g >
<title>[libpthread-2.30.so] (800,091,046 samples, 91.07%)</title><rect x="10.0" y="613" width="1074.6" height="15.0" fill="rgb(226,102,0)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >[libpthread-2.30.so]</text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (22,626,846 samples, 2.58%)</title><rect x="394.5" y="277" width="30.4" height="15.0" fill="rgb(233,52,26)" rx="2" ry="2" />
<text  x="397.46" y="287.5" >st..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (18,197,433 samples, 2.07%)</title><rect x="370.0" y="309" width="24.5" height="15.0" fill="rgb(250,152,35)" rx="2" ry="2" />
<text  x="373.02" y="319.5" >s..</text>
</g>
<g >
<title>iox::runtime::IpcRuntimeInterface::sendKeepalive (682,795,993 samples, 77.72%)</title><rect x="10.0" y="373" width="917.1" height="15.0" fill="rgb(229,38,2)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >iox::runtime::IpcRuntimeInterface::sendKeepalive</text>
</g>
<g >
<title>futex_wait (499,721 samples, 0.06%)</title><rect x="1162.8" y="421" width="0.7" height="15.0" fill="rgb(229,137,41)" rx="2" ry="2" />
<text  x="1165.79" y="431.5" ></text>
</g>
<g >
<title>release_sock (20,968,070 samples, 2.39%)</title><rect x="121.2" y="149" width="28.1" height="15.0" fill="rgb(230,56,1)" rx="2" ry="2" />
<text  x="124.16" y="159.5" >r..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (800,091,046 samples, 91.07%)</title><rect x="10.0" y="517" width="1074.6" height="15.0" fill="rgb(225,193,35)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>[libpthread-2.30.so] (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="613" width="26.5" height="15.0" fill="rgb(218,43,24)" rx="2" ry="2" />
<text  x="1166.46" y="623.5" >[..</text>
</g>
<g >
<title>iox::cxx::MethodCallback&lt;void&gt;::operator (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="485" width="26.5" height="15.0" fill="rgb(214,84,15)" rx="2" ry="2" />
<text  x="1166.46" y="495.5" >i..</text>
</g>
<g >
<title>schedule (499,721 samples, 0.06%)</title><rect x="1162.8" y="389" width="0.7" height="15.0" fill="rgb(239,172,51)" rx="2" ry="2" />
<text  x="1165.79" y="399.5" ></text>
</g>
<g >
<title>[libc-2.30.so] (3,489,711 samples, 0.40%)</title><rect x="1158.8" y="629" width="4.7" height="15.0" fill="rgb(214,148,25)" rx="2" ry="2" />
<text  x="1161.77" y="639.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="533" width="26.5" height="15.0" fill="rgb(216,156,6)" rx="2" ry="2" />
<text  x="1166.46" y="543.5" >s..</text>
</g>
<g >
<title>__schedule (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="405" width="74.2" height="15.0" fill="rgb(244,37,8)" rx="2" ry="2" />
<text  x="1087.63" y="415.5" >__schedule</text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::SemaphoreWaitState, iox::posix::SemaphoreError&gt;::call_element_destructor@plt (21,129,840 samples, 2.41%)</title><rect x="951.1" y="437" width="28.4" height="15.0" fill="rgb(251,172,7)" rx="2" ry="2" />
<text  x="954.14" y="447.5" >io..</text>
</g>
<g >
<title>__schedule (30,134,444 samples, 3.43%)</title><rect x="1008.9" y="245" width="40.5" height="15.0" fill="rgb(235,207,9)" rx="2" ry="2" />
<text  x="1011.89" y="255.5" >__s..</text>
</g>
<g >
<title>spdlogger_239 (3,489,711 samples, 0.40%)</title><rect x="1158.8" y="645" width="4.7" height="15.0" fill="rgb(208,33,8)" rx="2" ry="2" />
<text  x="1161.77" y="655.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="517" width="26.5" height="15.0" fill="rgb(227,166,6)" rx="2" ry="2" />
<text  x="1166.46" y="527.5" >s..</text>
</g>
<g >
<title>[libc-2.30.so] (800,091,046 samples, 91.07%)</title><rect x="10.0" y="629" width="1074.6" height="15.0" fill="rgb(251,41,7)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >[libc-2.30.so]</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (96,368 samples, 0.01%)</title><rect x="1163.3" y="245" width="0.2" height="15.0" fill="rgb(221,58,47)" rx="2" ry="2" />
<text  x="1166.33" y="255.5" ></text>
</g>
<g >
<title>sendto (46,096,252 samples, 5.25%)</title><rect x="149.3" y="277" width="61.9" height="15.0" fill="rgb(240,190,33)" rx="2" ry="2" />
<text  x="152.32" y="287.5" >sendto</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (55,226,377 samples, 6.29%)</title><rect x="1084.6" y="597" width="74.2" height="15.0" fill="rgb(253,182,14)" rx="2" ry="2" />
<text  x="1087.60" y="607.5" >[libstdc..</text>
</g>
<g >
<title>iox::runtime::IpcInterfaceBase::send (107,755,257 samples, 12.26%)</title><rect x="66.5" y="357" width="144.7" height="15.0" fill="rgb(231,178,28)" rx="2" ry="2" />
<text  x="69.51" y="367.5" >iox::runtime::IpcI..</text>
</g>
<g >
<title>irq_exit (192,736 samples, 0.02%)</title><rect x="1163.2" y="293" width="0.3" height="15.0" fill="rgb(209,135,8)" rx="2" ry="2" />
<text  x="1166.20" y="303.5" ></text>
</g>
<g >
<title>all (878,568,658 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(238,92,21)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>setsockopt (20,968,070 samples, 2.39%)</title><rect x="121.2" y="293" width="28.1" height="15.0" fill="rgb(216,35,11)" rx="2" ry="2" />
<text  x="124.16" y="303.5" >s..</text>
</g>
<g >
<title>schedule (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="421" width="74.2" height="15.0" fill="rgb(206,23,9)" rx="2" ry="2" />
<text  x="1087.63" y="431.5" >schedule</text>
</g>
<g >
<title>el0_sync (20,968,070 samples, 2.39%)</title><rect x="121.2" y="277" width="28.1" height="15.0" fill="rgb(216,24,10)" rx="2" ry="2" />
<text  x="124.16" y="287.5" >e..</text>
</g>
<g >
<title>hrtimer_nanosleep (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="453" width="74.2" height="15.0" fill="rgb(233,159,2)" rx="2" ry="2" />
<text  x="1087.63" y="463.5" >hrtimer_..</text>
</g>
<g >
<title>_raw_spin_unlock_irq (499,721 samples, 0.06%)</title><rect x="1162.8" y="357" width="0.7" height="15.0" fill="rgb(238,96,42)" rx="2" ry="2" />
<text  x="1165.79" y="367.5" ></text>
</g>
<g >
<title>__handle_domain_irq (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="181" width="40.5" height="15.0" fill="rgb(216,8,51)" rx="2" ry="2" />
<text  x="1011.89" y="191.5" >__h..</text>
</g>
<g >
<title>gic_handle_irq (192,736 samples, 0.02%)</title><rect x="1163.2" y="325" width="0.3" height="15.0" fill="rgb(226,55,15)" rx="2" ry="2" />
<text  x="1166.20" y="335.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (30,134,444 samples, 3.43%)</title><rect x="1008.9" y="277" width="40.5" height="15.0" fill="rgb(253,82,32)" rx="2" ry="2" />
<text  x="1011.89" y="287.5" >fut..</text>
</g>
<g >
<title>el0_sync_handler (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="533" width="74.2" height="15.0" fill="rgb(211,52,28)" rx="2" ry="2" />
<text  x="1087.63" y="543.5" >el0_sync..</text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::cxx::MethodCallbackError&gt;::~expected (17,929,484 samples, 2.04%)</title><rect x="927.1" y="469" width="24.0" height="15.0" fill="rgb(250,85,17)" rx="2" ry="2" />
<text  x="930.06" y="479.5" >i..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (682,795,993 samples, 77.72%)</title><rect x="10.0" y="453" width="917.1" height="15.0" fill="rgb(242,50,27)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >iox::cxx::function_ref&lt;void </text>
</g>
<g >
<title>iox::cxx::variant&lt;iox::posix::IpcChannelError&gt;::call_element_destructor (3,299,563 samples, 0.38%)</title><rect x="66.5" y="325" width="4.4" height="15.0" fill="rgb(221,30,48)" rx="2" ry="2" />
<text  x="69.51" y="335.5" ></text>
</g>
<g >
<title>el0_svc (51,963,162 samples, 5.91%)</title><rect x="979.6" y="373" width="69.8" height="15.0" fill="rgb(238,140,35)" rx="2" ry="2" />
<text  x="982.57" y="383.5" >el0_svc</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (51,963,162 samples, 5.91%)</title><rect x="979.6" y="341" width="69.8" height="15.0" fill="rgb(219,131,7)" rx="2" ry="2" />
<text  x="982.57" y="351.5" >el0_svc..</text>
</g>
<g >
<title>el0_sync (499,721 samples, 0.06%)</title><rect x="1162.8" y="533" width="0.7" height="15.0" fill="rgb(249,89,31)" rx="2" ry="2" />
<text  x="1165.79" y="543.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (800,091,046 samples, 91.07%)</title><rect x="10.0" y="597" width="1074.6" height="15.0" fill="rgb(210,104,27)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt;@plt (20,851,850 samples, 2.37%)</title><rect x="497.4" y="293" width="28.0" height="15.0" fill="rgb(233,52,14)" rx="2" ry="2" />
<text  x="500.40" y="303.5" >s..</text>
</g>
<g >
<title>obj_cgroup_uncharge (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="53" width="40.5" height="15.0" fill="rgb(247,8,4)" rx="2" ry="2" />
<text  x="1011.89" y="63.5" >obj..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;spdlog::details::thread_pool::thread_pool (3,489,711 samples, 0.40%)</title><rect x="1158.8" y="581" width="4.7" height="15.0" fill="rgb(250,224,47)" rx="2" ry="2" />
<text  x="1161.77" y="591.5" ></text>
</g>
<g >
<title>iox::cxx::convert::toString&lt;int&gt; (491,333,614 samples, 55.92%)</title><rect x="211.8" y="341" width="659.9" height="15.0" fill="rgb(218,141,40)" rx="2" ry="2" />
<text  x="214.79" y="351.5" >iox::cxx::convert::toString&lt;int&gt;</text>
</g>
<g >
<title>iox::cxx::internal::methodCallbackCaller&lt;void, iox::runtime::PoshRuntimeImpl&gt; (682,795,993 samples, 77.72%)</title><rect x="10.0" y="405" width="917.1" height="15.0" fill="rgb(216,55,2)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >iox::cxx::internal::methodCallbackCaller&lt;void, iox::runtime::PoshRuntimeImpl&gt;</text>
</g>
<g >
<title>do_el0_svc (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="501" width="74.2" height="15.0" fill="rgb(238,176,16)" rx="2" ry="2" />
<text  x="1087.63" y="511.5" >do_el0_svc</text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream@plt (20,567,046 samples, 2.34%)</title><rect x="871.7" y="341" width="27.6" height="15.0" fill="rgb(236,108,17)" rx="2" ry="2" />
<text  x="874.69" y="351.5" >s..</text>
</g>
<g >
<title>iox::posix::PosixCallBuilder&lt;long, int, void const*, unsigned long, int, sockaddr const*, unsigned int&gt;::operator (46,096,252 samples, 5.25%)</title><rect x="149.3" y="309" width="61.9" height="15.0" fill="rgb(226,20,26)" rx="2" ry="2" />
<text  x="152.32" y="319.5" >iox::p..</text>
</g>
<g >
<title>schedule (30,134,444 samples, 3.43%)</title><rect x="1008.9" y="261" width="40.5" height="15.0" fill="rgb(208,68,49)" rx="2" ry="2" />
<text  x="1011.89" y="271.5" >sch..</text>
</g>
<g >
<title>do_futex (499,721 samples, 0.06%)</title><rect x="1162.8" y="437" width="0.7" height="15.0" fill="rgb(245,2,43)" rx="2" ry="2" />
<text  x="1165.79" y="447.5" ></text>
</g>
<g >
<title>__arm64_sys_nanosleep (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="469" width="74.2" height="15.0" fill="rgb(215,79,8)" rx="2" ry="2" />
<text  x="1087.63" y="479.5" >__arm64_..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init@plt (154,238,525 samples, 17.56%)</title><rect x="553.2" y="325" width="207.2" height="15.0" fill="rgb(206,22,39)" rx="2" ry="2" />
<text  x="556.25" y="335.5" >std::basic_ios&lt;char, std::c..</text>
</g>
<g >
<title>unix_dgram_sendmsg (21,325,634 samples, 2.43%)</title><rect x="149.3" y="149" width="28.7" height="15.0" fill="rgb(246,185,23)" rx="2" ry="2" />
<text  x="152.32" y="159.5" >un..</text>
</g>
<g >
<title>do_futex (51,963,162 samples, 5.91%)</title><rect x="979.6" y="309" width="69.8" height="15.0" fill="rgb(213,193,2)" rx="2" ry="2" />
<text  x="982.57" y="319.5" >do_futex</text>
</g>
<g >
<title>std::ios_base::_M_dispose_callbacks@plt (20,578,999 samples, 2.34%)</title><rect x="760.4" y="325" width="27.6" height="15.0" fill="rgb(222,121,27)" rx="2" ry="2" />
<text  x="763.40" y="335.5" >s..</text>
</g>
<g >
<title>__dynamic_cast (22,626,846 samples, 2.58%)</title><rect x="394.5" y="261" width="30.4" height="15.0" fill="rgb(220,151,18)" rx="2" ry="2" />
<text  x="397.46" y="271.5" >__..</text>
</g>
<g >
<title>iox::runtime::PoshRuntimeImpl::sendKeepAliveAndHandleShutdownPreparation (682,795,993 samples, 77.72%)</title><rect x="10.0" y="389" width="917.1" height="15.0" fill="rgb(254,222,25)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >iox::runtime::PoshRuntimeImpl::sendKeepAliveAndHandleShutdownPreparation</text>
</g>
<g >
<title>el0_sync_handler (499,721 samples, 0.06%)</title><rect x="1162.8" y="517" width="0.7" height="15.0" fill="rgb(212,169,20)" rx="2" ry="2" />
<text  x="1165.79" y="527.5" ></text>
</g>
<g >
<title>do_el0_svc (51,963,162 samples, 5.91%)</title><rect x="979.6" y="357" width="69.8" height="15.0" fill="rgb(209,217,0)" rx="2" ry="2" />
<text  x="982.57" y="367.5" >do_el0_..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (55,202,312 samples, 6.28%)</title><rect x="1084.6" y="485" width="74.2" height="15.0" fill="rgb(216,123,30)" rx="2" ry="2" />
<text  x="1087.63" y="495.5" >el0_svc_..</text>
</g>
<g >
<title>std::move&lt;iox::posix::PosixCallResult&lt;int&gt;&amp;&gt;@plt (26,228,399 samples, 2.99%)</title><rect x="1049.4" y="453" width="35.2" height="15.0" fill="rgb(238,202,11)" rx="2" ry="2" />
<text  x="1052.37" y="463.5" >st..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (800,091,046 samples, 91.07%)</title><rect x="10.0" y="565" width="1074.6" height="15.0" fill="rgb(218,87,49)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>refill_obj_stock (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="37" width="40.5" height="15.0" fill="rgb(238,26,44)" rx="2" ry="2" />
<text  x="1011.89" y="47.5" >ref..</text>
</g>
<g >
<title>std::ostream::sentry::~sentry@plt (16,488,270 samples, 1.88%)</title><rect x="849.5" y="325" width="22.2" height="15.0" fill="rgb(214,187,8)" rx="2" ry="2" />
<text  x="852.55" y="335.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (20,728,200 samples, 2.36%)</title><rect x="525.4" y="325" width="27.8" height="15.0" fill="rgb(213,195,44)" rx="2" ry="2" />
<text  x="528.41" y="335.5" >s..</text>
</g>
<g >
<title>xxxKeepAlive (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="645" width="26.5" height="15.0" fill="rgb(222,121,46)" rx="2" ry="2" />
<text  x="1166.46" y="655.5" >x..</text>
</g>
<g >
<title>std::distance&lt;char*&gt;@plt (408,827 samples, 0.05%)</title><rect x="211.2" y="341" width="0.6" height="15.0" fill="rgb(215,22,8)" rx="2" ry="2" />
<text  x="214.24" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3,489,711 samples, 0.40%)</title><rect x="1158.8" y="597" width="4.7" height="15.0" fill="rgb(237,58,9)" rx="2" ry="2" />
<text  x="1161.77" y="607.5" ></text>
</g>
<g >
<title>listenUpgrade (55,226,377 samples, 6.29%)</title><rect x="1084.6" y="581" width="74.2" height="15.0" fill="rgb(222,34,51)" rx="2" ry="2" />
<text  x="1087.60" y="591.5" >listenUp..</text>
</g>
<g >
<title>listenUpgrade (55,226,377 samples, 6.29%)</title><rect x="1084.6" y="645" width="74.2" height="15.0" fill="rgb(251,137,15)" rx="2" ry="2" />
<text  x="1087.60" y="655.5" >listenUp..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (20,656,149 samples, 2.35%)</title><rect x="899.3" y="357" width="27.8" height="15.0" fill="rgb(230,149,50)" rx="2" ry="2" />
<text  x="902.32" y="367.5" >s..</text>
</g>
<g >
<title>__arm64_sys_sendto (46,096,252 samples, 5.25%)</title><rect x="149.3" y="181" width="61.9" height="15.0" fill="rgb(230,163,44)" rx="2" ry="2" />
<text  x="152.32" y="191.5" >__arm6..</text>
</g>
<g >
<title>iox::posix::UnixDomainSocket::timedSend (104,455,694 samples, 11.89%)</title><rect x="70.9" y="325" width="140.3" height="15.0" fill="rgb(213,166,33)" rx="2" ry="2" />
<text  x="73.94" y="335.5" >iox::posix::UnixD..</text>
</g>
<g >
<title>iox::concurrent::PeriodicTask&lt;iox::cxx::MethodCallback&lt;void&gt; &gt;::run (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="501" width="26.5" height="15.0" fill="rgb(248,4,28)" rx="2" ry="2" />
<text  x="1166.46" y="511.5" >i..</text>
</g>
<g >
<title>[libpthread-2.30.so] (55,226,377 samples, 6.29%)</title><rect x="1084.6" y="613" width="74.2" height="15.0" fill="rgb(209,204,33)" rx="2" ry="2" />
<text  x="1087.60" y="623.5" >[libpthr..</text>
</g>
<g >
<title>memcg_slab_free_hook (30,133,909 samples, 3.43%)</title><rect x="1008.9" y="69" width="40.5" height="15.0" fill="rgb(206,46,51)" rx="2" ry="2" />
<text  x="1011.89" y="79.5" >mem..</text>
</g>
<g >
<title>__sys_sendto (21,325,634 samples, 2.43%)</title><rect x="149.3" y="165" width="28.7" height="15.0" fill="rgb(250,178,36)" rx="2" ry="2" />
<text  x="152.32" y="175.5" >__..</text>
</g>
<g >
<title>iox::cxx::function_ref&lt;void  (682,795,993 samples, 77.72%)</title><rect x="10.0" y="437" width="917.1" height="15.0" fill="rgb(222,153,47)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >iox::cxx::function_ref&lt;void </text>
</g>
<g >
<title>iox::runtime::IpcMessageTypeToString[abi:cxx11] (511,900,660 samples, 58.27%)</title><rect x="211.8" y="357" width="687.5" height="15.0" fill="rgb(208,28,40)" rx="2" ry="2" />
<text  x="214.79" y="367.5" >iox::runtime::IpcMessageTypeToString[abi:cxx11]</text>
</g>
<g >
<title>el0_svc (46,096,252 samples, 5.25%)</title><rect x="149.3" y="229" width="61.9" height="15.0" fill="rgb(245,124,54)" rx="2" ry="2" />
<text  x="152.32" y="239.5" >el0_svc</text>
</g>
<g >
<title>iox::cxx::expected&lt;iox::posix::IpcChannelError&gt;::~expected (3,299,563 samples, 0.38%)</title><rect x="66.5" y="341" width="4.4" height="15.0" fill="rgb(247,118,30)" rx="2" ry="2" />
<text  x="69.51" y="351.5" ></text>
</g>
<g >
<title>el0_sync_handler (51,963,162 samples, 5.91%)</title><rect x="979.6" y="389" width="69.8" height="15.0" fill="rgb(228,40,17)" rx="2" ry="2" />
<text  x="982.57" y="399.5" >el0_syn..</text>
</g>
<g >
<title>iox::cxx::MethodCallback&lt;void&gt;::operator (682,795,993 samples, 77.72%)</title><rect x="10.0" y="485" width="917.1" height="15.0" fill="rgb(254,173,54)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >iox::cxx::MethodCallback&lt;void&gt;::operator</text>
</g>
<g >
<title>el0_svc (499,721 samples, 0.06%)</title><rect x="1162.8" y="501" width="0.7" height="15.0" fill="rgb(217,116,24)" rx="2" ry="2" />
<text  x="1165.79" y="511.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (19,761,524 samples, 2.25%)</title><rect x="1163.5" y="565" width="26.5" height="15.0" fill="rgb(213,44,50)" rx="2" ry="2" />
<text  x="1166.46" y="575.5" >s..</text>
</g>
<g >
<title>import_single_range (24,770,618 samples, 2.82%)</title><rect x="178.0" y="165" width="33.2" height="15.0" fill="rgb(220,140,28)" rx="2" ry="2" />
<text  x="180.97" y="175.5" >im..</text>
</g>
<g >
<title>[libpthread-2.30.so] (2,989,990 samples, 0.34%)</title><rect x="1158.8" y="549" width="4.0" height="15.0" fill="rgb(254,199,35)" rx="2" ry="2" />
<text  x="1161.77" y="559.5" ></text>
</g>
<g >
<title>el0_sync (51,963,162 samples, 5.91%)</title><rect x="979.6" y="405" width="69.8" height="15.0" fill="rgb(243,188,53)" rx="2" ry="2" />
<text  x="982.57" y="415.5" >el0_sync</text>
</g>
<g >
<title>iox::posix::PosixCallEvaluator&lt;int&gt;::evaluate (26,228,399 samples, 2.99%)</title><rect x="1049.4" y="469" width="35.2" height="15.0" fill="rgb(236,100,38)" rx="2" ry="2" />
<text  x="1052.37" y="479.5" >io..</text>
</g>
<g >
<title>iox::cxx::expected&lt;void, iox::cxx::MethodCallbackError&gt;::~expected (17,929,484 samples, 2.04%)</title><rect x="927.1" y="485" width="24.0" height="15.0" fill="rgb(221,206,15)" rx="2" ry="2" />
<text  x="930.06" y="495.5" >i..</text>
</g>
</g>
</svg>
